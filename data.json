[{"repo": "AIDungeon/AIDungeon", "language": "Python", "readme_contents": "# AIDungeon2\n\n### The model for AI Dungeon2 is temporarily unavailable to download due to cost. We're working on a solution!\n\nRead more about AIDungeon2 and how it was built [here](https://pcc.cs.byu.edu/2019/11/21/ai-dungeon-2-creating-infinitely-generated-text-adventures-with-deep-learning-language-models/).\n\nPlay the game in Colab [here](http://www.aidungeon.io).\n\nTo play the game locally, it is recommended that you have an nVidia GPU with 12 GB or more of memory, and CUDA installed. If you do not have such a GPU, each turn can take a couple of minutes or more for the game to compose its response. To install and play locally:\n```\ngit clone https://github.com/AIDungeon/AIDungeon/\ncd AIDungeon\n./install.sh\npython3 play.py\n```\n\n\nCommunity\n------------------------\n\nAIDungeon is an open source project. Questions, discussion, and\ncontributions are welcome. Contributions can be anything from new\npackages to bugfixes, documentation, or even new core features.\n\nResources:\n\n* **Website**: [aidungeon.io](http://www.aidungeon.io/)\n* **Email**: aidungeon.io@gmail.com\n* **Twitter**: [creator @nickwalton00](https://twitter.com/nickwalton00), [dev @benjbay](https://twitter.com/benjbay)\n* **Reddit**: [r/AIDungeon](https://www.reddit.com/r/AIDungeon/)\n* **Discord**: [aidungeon discord](https://discord.gg/Dg8Vcz6)\n\n\nContributing\n------------------------\nContributing to AIDungeon is relatively easy.  Just send us a\n[pull request](https://help.github.com/articles/using-pull-requests/) from your fork.\nWhen you send your request, make ``develop`` the destination branch on the\n[AIDungeon repository](https://github.com/nickwalton/AIDungeon).\n\nWe prefer PRs to be\n[PEP 8](https://www.python.org/dev/peps/pep-0008/) compliant.\n\nAIDungeon uses a rough approximation of the\n[Git Flow](http://nvie.com/posts/a-successful-git-branching-model/)\nbranching model.  The ``develop`` branch contains the latest\ncontributions, and ``master`` is always tagged and points to the latest\nstable release.\n"}, {"repo": "rclone/rclone", "language": "Go", "readme_contents": "[<img src=\"https://rclone.org/img/logo_on_light__horizontal_color.svg\" width=\"50%\" alt=\"rclone logo\">](https://rclone.org/)\n\n[Website](https://rclone.org) |\n[Documentation](https://rclone.org/docs/) |\n[Download](https://rclone.org/downloads/) | \n[Contributing](CONTRIBUTING.md) |\n[Changelog](https://rclone.org/changelog/) |\n[Installation](https://rclone.org/install/) |\n[Forum](https://forum.rclone.org/)\n\n[![Build Status](https://travis-ci.org/rclone/rclone.svg?branch=master)](https://travis-ci.org/rclone/rclone)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/rclone/rclone?branch=master&passingText=windows%20-%20ok&svg=true)](https://ci.appveyor.com/project/rclone/rclone)\n[![Build Status](https://dev.azure.com/rclone/rclone/_apis/build/status/rclone.rclone?branchName=master)](https://dev.azure.com/rclone/rclone/_build/latest?definitionId=2&branchName=master)\n[![CircleCI](https://circleci.com/gh/rclone/rclone/tree/master.svg?style=svg)](https://circleci.com/gh/rclone/rclone/tree/master)\n[![Go Report Card](https://goreportcard.com/badge/github.com/rclone/rclone)](https://goreportcard.com/report/github.com/rclone/rclone)\n[![GoDoc](https://godoc.org/github.com/rclone/rclone?status.svg)](https://godoc.org/github.com/rclone/rclone) \n[![Docker Pulls](https://img.shields.io/docker/pulls/rclone/rclone)](https://hub.docker.com/r/rclone/rclone)\n\n# Rclone\n\nRclone *(\"rsync for cloud storage\")* is a command line program to sync files and directories to and from different cloud storage providers.\n\n## Storage providers\n\n  * 1Fichier [:page_facing_up:](https://rclone.org/fichier/)\n  * Alibaba Cloud (Aliyun) Object Storage System (OSS) [:page_facing_up:](https://rclone.org/s3/#alibaba-oss)\n  * Amazon Drive [:page_facing_up:](https://rclone.org/amazonclouddrive/) ([See note](https://rclone.org/amazonclouddrive/#status))\n  * Amazon S3 [:page_facing_up:](https://rclone.org/s3/)\n  * Backblaze B2 [:page_facing_up:](https://rclone.org/b2/)\n  * Box [:page_facing_up:](https://rclone.org/box/)\n  * Ceph [:page_facing_up:](https://rclone.org/s3/#ceph)\n  * Citrix ShareFile [:page_facing_up:](https://rclone.org/sharefile/)\n  * DigitalOcean Spaces [:page_facing_up:](https://rclone.org/s3/#digitalocean-spaces)\n  * Dreamhost [:page_facing_up:](https://rclone.org/s3/#dreamhost)\n  * Dropbox [:page_facing_up:](https://rclone.org/dropbox/)\n  * FTP [:page_facing_up:](https://rclone.org/ftp/)\n  * Google Cloud Storage [:page_facing_up:](https://rclone.org/googlecloudstorage/)\n  * Google Drive [:page_facing_up:](https://rclone.org/drive/)\n  * Google Photos [:page_facing_up:](https://rclone.org/googlephotos/)\n  * HTTP [:page_facing_up:](https://rclone.org/http/)\n  * Hubic [:page_facing_up:](https://rclone.org/hubic/)\n  * Jottacloud [:page_facing_up:](https://rclone.org/jottacloud/)\n  * IBM COS S3 [:page_facing_up:](https://rclone.org/s3/#ibm-cos-s3)\n  * Koofr [:page_facing_up:](https://rclone.org/koofr/)\n  * Mail.ru Cloud [:page_facing_up:](https://rclone.org/mailru/)\n  * Memset Memstore [:page_facing_up:](https://rclone.org/swift/)\n  * Mega [:page_facing_up:](https://rclone.org/mega/)\n  * Microsoft Azure Blob Storage [:page_facing_up:](https://rclone.org/azureblob/)\n  * Microsoft OneDrive [:page_facing_up:](https://rclone.org/onedrive/)\n  * Minio [:page_facing_up:](https://rclone.org/s3/#minio)\n  * Nextcloud [:page_facing_up:](https://rclone.org/webdav/#nextcloud)\n  * OVH [:page_facing_up:](https://rclone.org/swift/)\n  * OpenDrive [:page_facing_up:](https://rclone.org/opendrive/)\n  * OpenStack Swift [:page_facing_up:](https://rclone.org/swift/)\n  * Oracle Cloud Storage [:page_facing_up:](https://rclone.org/swift/)\n  * ownCloud [:page_facing_up:](https://rclone.org/webdav/#owncloud)\n  * pCloud [:page_facing_up:](https://rclone.org/pcloud/)\n  * premiumize.me [:page_facing_up:](https://rclone.org/premiumizeme/)\n  * put.io [:page_facing_up:](https://rclone.org/putio/)\n  * QingStor [:page_facing_up:](https://rclone.org/qingstor/)\n  * Rackspace Cloud Files [:page_facing_up:](https://rclone.org/swift/)\n  * Scaleway [:page_facing_up:](https://rclone.org/s3/#scaleway)\n  * SFTP [:page_facing_up:](https://rclone.org/sftp/)\n  * Wasabi [:page_facing_up:](https://rclone.org/s3/#wasabi)\n  * WebDAV [:page_facing_up:](https://rclone.org/webdav/)\n  * Yandex Disk [:page_facing_up:](https://rclone.org/yandex/)\n  * The local filesystem [:page_facing_up:](https://rclone.org/local/)\n  \nPlease see [the full list of all storage providers and their features](https://rclone.org/overview/)\n\n## Features\n\n  * MD5/SHA-1 hashes checked at all times for file integrity\n  * Timestamps preserved on files\n  * Partial syncs supported on a whole file basis\n  * [Copy](https://rclone.org/commands/rclone_copy/) mode to just copy new/changed files\n  * [Sync](https://rclone.org/commands/rclone_sync/) (one way) mode to make a directory identical\n  * [Check](https://rclone.org/commands/rclone_check/) mode to check for file hash equality\n  * Can sync to and from network, e.g. two different cloud accounts\n  * Optional large file chunking ([Chunker](https://rclone.org/chunker/))\n  * Optional encryption ([Crypt](https://rclone.org/crypt/))\n  * Optional cache ([Cache](https://rclone.org/cache/))\n  * Optional FUSE mount ([rclone mount](https://rclone.org/commands/rclone_mount/))\n  * Multi-threaded downloads to local disk\n  * Can [serve](https://rclone.org/commands/rclone_serve/) local or remote files over HTTP/WebDav/FTP/SFTP/dlna\n\n## Installation & documentation\n\nPlease see the [rclone website](https://rclone.org/) for:\n\n  * [Installation](https://rclone.org/install/)\n  * [Documentation & configuration](https://rclone.org/docs/)\n  * [Changelog](https://rclone.org/changelog/)\n  * [FAQ](https://rclone.org/faq/)\n  * [Storage providers](https://rclone.org/overview/)\n  * [Forum](https://forum.rclone.org/)\n  * ...and more\n\n## Downloads\n\n  * https://rclone.org/downloads/\n\nLicense\n-------\n\nThis is free software under the terms of MIT the license (check the\n[COPYING file](/COPYING) included in this package).\n"}, {"repo": "marblexu/PythonPlantsVsZombies", "language": "Python", "readme_contents": "# PythonPlantsVsZombies\na simple PlantsVsZombies game\n* implement plants: sunflower, peashooter, wallnut, snowpeashooter, cherrybomb, threepeashooter, chomper, puffshroom, potatomine, spikeweed, scaredyshroom, squash, scaredyshroom, jalapeno, sunShroom, iceShroom.\n* implement zombies: zombie, flagzombie, coneheadzombie, bucketheadzombie, newspaperzombie.\n* use json file to store level data (e.g.position and time of zombies, background info)\n* support to select plant cards at the beginning of the level\n* support night level\n\n# Requirement\n* Python 3.7\n* Python-Pygame 1.9\n\n# How To Start Game\n$ python main.py\n\n# How to Play\n* use mouse to collect sun, select the plant cards and seed the plant \n\n# Demo\n![demo1](https://raw.githubusercontent.com/marblexu/PythonPlantsVsZombies/master/demo/demo1.jpg)\n![demo2](https://raw.githubusercontent.com/marblexu/PythonPlantsVsZombies/master/demo/demo2.jpg)\n\n"}, {"repo": "redox-os/orbtk", "language": "Rust", "readme_contents": "<img alt=\"OrbTk\" width=\"380\" src=\"https://gitlab.redox-os.org/redox-os/assets/raw/master/logos/orbtk/logo_dark.png\">\n\n[![Build and test](https://github.com/redox-os/orbtk/workflows/build/badge.svg)](https://github.com/redox-os/orbtk/actions)\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)\n[![crates.io](https://img.shields.io/badge/crates.io-v0.3.1alpha1-orange.svg)](https://crates.io/crates/orbtk/0.3.1-alpha1)\n[![docs.rs](https://docs.rs/orbtk/badge.svg)](https://docs.rs/orbtk)\n\nThe Orbital Widget Toolkit is a multi platform (G)UI toolkit for building scalable user interfaces with the programming language Rust. It's based\non the [Entity Component System Pattern](https://en.wikipedia.org/wiki/Entity_component_system) and provides a functional-reactive like API.\n\nThe main goals of OrbTk are speed, ease of use, and being cross platform.\n\n<img alt=\"Calculator\" width=\"350\" src=\"https://gitlab.redox-os.org/redox-os/assets/raw/master/screenshots/Calculator.png\">\n\n## Features:\n\n* Modern lightweight API\n* Cross platform\n* Modular crates\n* Based on Entity Component System library [DCES](https://gitlab.redox-os.org/redox-os/dces-rust)\n* Flexible event system\n* Integrated widget library\n* Custom widgets\n* Theming\n* Integrated debugging tools\n\n## Platforms\n\n* Redox OS (native | cargo-node)\n* Linux (native | cargo-node)\n* macOS (native | cargo-node)\n* Windows (native | cargo-node)\n* openBSD (not tested, but should work)\n* Web (cargo-node)\n* Android (native planned after 0.3 | cargo-node)\n* iOS (native planned after 0.3 | cargo-node planned after 0.3)\n* Ubuntu Touch (native planned  after 0.3 | cargo-node planned for 0.3)\n\n## Planned features\n\n* Conformable use of async\n* More default widgets\n* More examples\n* Book\n* Animations\n* Split application in modules\n* Theme update\n* 3D context\n* More integrated debugging tools\n\n\n## Usage\n\nTo include OrbTk in your project, just add the dependency\nline to your `Cargo.toml` file:\n\n```text\norbtk = \"0.3.1-alpha1\"\n```\n\nTo use the latest development version of OrbTk, just add the dependency\nline to your `Cargo.toml` file:\n\n```text\norbtk = { git = \"https://github.com/redox-os/orbtk.git\", branch = \"develop\" }\n```\n\n## Minimal Example\n\n```rust\nuse orbtk::prelude::*;\n\nfn main() {\n      Application::new()\n        .window(|ctx| {\n            Window::create()\n                .title(\"OrbTk - minimal example\")\n                .position((100.0, 100.0))\n                .size(420.0, 730.0)\n                .child(TextBlock::create().text(\"OrbTk\").build(ctx))\n                .build(ctx)\n        })\n        .run();\n}\n```\n\n## Run Examples\n\nYou can find examples in the `examples/` directory.\n\nYou can start the widgets example by executing the following command:\n\n```text\ncargo run --example widgets --release\n```\n\nOrbTk has also an integrated `debug` tools. If you want to show the bounds of all widgets (also non visual widgets) and want to see a debug print of the whole widget\ntree you could run the examples as follows:\n\n```text\ncargo run --example widgets --release --features debug\n```\n\n## Run Examples with cargo-node\n\nTo run the examples on as browser, electron or cordova app you have to install\n\n```text\ncargo install -f cargo-node\n```\n\nBefore you could use cargo node you have to install `npm` version 6.9.0. It is included in the `Node.js` version 10.16.3. You could download it from https://nodejs.org/dist/v10.16.3/. \n\nRust's `cargo` is presumed. All other dependencies of cargo node will be installed automatic.\n\n### Start examples\n\nYou can start the widgets example by executing the following command:\n\n* Run as browser app:\n\n```text\ncargo node run --target browser --example widgets\n```\n\n* Run as electron app:\n\n```text\ncargo node run --target electron --example widgets\n```\n\n* Run as cordova app on android:\n\n```text\ncargo node run --target android --example widgets\n```\n\n## Build and run documentation\n\nYou can build and run the latest documentation by executing the following command:\n\n```text\ncargo doc --no-deps --open\n```\n\n## Sub Crates\n\n* [api](https://github.com/redox-os/orbtk/tree/develop/crates/api): base api elements of OrbTk e.g. widget and application parts\n* [css-engine](https://github.com/redox-os/orbtk/tree/develop/crates/css-engine): parse and read values from a css file\n* [proc-macros](https://github.com/redox-os/orbtk/tree/develop/crates/proc-macros): procedural helper macros\n* [render](https://github.com/redox-os/orbtk/tree/develop/crates/render): cross platform 2D/3D render library\n* [shell](https://github.com/redox-os/orbtk/tree/develop/crates/api): cross platform window and event handling\n* [theme](https://github.com/redox-os/orbtk/tree/develop/crates/theme): OrbTks default theme (light and dark)\n* [tree](https://github.com/redox-os/orbtk/tree/develop/crates/tree): tree structure based on DCES\n* [utils](https://github.com/redox-os/orbtk/tree/develop/crates/utils): helper structs and traits\n* [widgets](https://github.com/redox-os/orbtk/tree/develop/crates/widgets): base widget library\n\n## Inspirations\n\n* [Flutter](https://flutter.io/)\n* [React](https://reactjs.org/)\n* [Yew](https://github.com/DenisKolodin/yew)\n\n## Showcases\n\n* [Space Editor](https://codeberg.org/pinhead-galaxy/space-editor): 2D Tile Map Editor compatible with OrbGame\n* [OrbCalculator](https://gitlab.redox-os.org/redox-os/orbcalculator): Calculator based on OrbTk\n\n## Contribution\n\nIf you want to help bring OrbTk further or you have feedback check our issues https://github.com/redox-os/orbtk/issues. You could also discuss with us about OrbTk on the Redox chat https://redox-os.org/community/ (join the orbital channel).\n\n## License\n\nLicensed under MIT license ([LICENSE](LICENSE)).\n"}, {"repo": "sailay1996/UAC_Bypass_In_The_Wild", "language": "C", "readme_contents": "# UAC Bypass In The Wild\nWindows 10 UAC bypass for all executable files which are autoelevate true.\nThis is based on my first article.  <br>\nhttps://heynowyouseeme.blogspot.com/2019/08/windows-10-lpe-uac-bypass-in-windows.html\n\n\n##### Another my findings : \n##### https://github.com/sailay1996/Fileless_UAC_bypass_WSReset \n##### https://github.com/sailay1996/UAC_bypass_windows_store\n##### https://github.com/sailay1996/GUI_UAC_bypassX\n\n<br><br>\n\n![test1](https://github.com/sailay1996/UAC_Bypass_In_The_Wild/blob/master/img/bluetooth_device_task.jpg) <br><br>\n\n[@404death](https://twitter.com/404death)\n\n"}, {"repo": "ruanyf/weekly", "language": null, "readme_contents": "# \u79d1\u6280\u7231\u597d\u8005\u5468\u520a\n\n\u8bb0\u5f55\u6bcf\u5468\u503c\u5f97\u5206\u4eab\u7684\u79d1\u6280\u5185\u5bb9\uff0c\u5468\u4e94\u53d1\u5e03\u3002\n\n\u6b22\u8fce\u6295\u7a3f\uff0c\u63a8\u8350\u6216\u81ea\u8350\u6587\u7ae0/\u8f6f\u4ef6/\u8d44\u6e90\uff0c\u8bf7[\u63d0\u4ea4 issue](https://github.com/ruanyf/weekly/issues) \u3002\n\n## \u5b9e\u7528\u4fe1\u606f\n\n- [\u514d\u8d39\u7535\u5b50\u4e66](https://github.com/ruanyf/free-books)\n- [\u514d\u8d39\u97f3\u4e50](docs/free-music.md)\n- [\u514d\u8d39\u7167\u7247](docs/free-photos.md)\n- [\u514d\u8d39\u8f6f\u4ef6](docs/free-software.md)\n- [\u8c01\u5728\u62db\u4eba](https://github.com/ruanyf/weekly/issues/798)\uff1a\u514d\u8d39\u7684\u7a0b\u5e8f\u5458\u62db\u8058\u670d\u52a1\n\n## 2019\n\n**\u5341\u4e8c\u6708**\uff1a[\u7b2c 85 \u671f](docs/issue-85.md):high_brightness:\n\n**\u5341\u4e00\u6708**\uff1a[\u7b2c 84 \u671f](docs/issue-84.md) | [\u7b2c 83 \u671f](docs/issue-83.md) | [\u7b2c 82 \u671f](docs/issue-82.md) | [\u7b2c 81 \u671f](docs/issue-81.md) | [\u7b2c 80 \u671f](docs/issue-80.md)\n\n**\u5341\u6708**\uff1a[\u7b2c 79 \u671f](docs/issue-79.md) | [\u7b2c 78 \u671f](docs/issue-78.md) | [\u7b2c 77 \u671f](docs/issue-77.md) | [\u7b2c 76 \u671f](docs/issue-76.md)\n\n**\u4e5d\u6708**\uff1a[\u7b2c 75 \u671f](docs/issue-75.md) | [\u7b2c 74 \u671f](docs/issue-74.md) | [\u7b2c 73 \u671f](docs/issue-73.md) | [\u7b2c 72 \u671f](docs/issue-72.md)\n\n**\u516b\u6708**\uff1a[\u7b2c 71 \u671f](docs/issue-71.md) | [\u7b2c 70 \u671f](docs/issue-70.md) | [\u7b2c 69 \u671f](docs/issue-69.md) | [\u7b2c 68 \u671f](docs/issue-68.md) | [\u7b2c 67 \u671f](docs/issue-67.md)\n\n**\u4e03\u6708**\uff1a[\u7b2c 66 \u671f](docs/issue-66.md) | [\u7b2c 65 \u671f](docs/issue-65.md) | [\u7b2c 64 \u671f](docs/issue-64.md) | [\u7b2c 63 \u671f](docs/issue-63.md)\n\n**\u516d\u6708**\uff1a[\u7b2c 62 \u671f](docs/issue-62.md) | [\u7b2c 61 \u671f](docs/issue-61.md) | [\u7b2c 60 \u671f](docs/issue-60.md) | [\u7b2c 59 \u671f](docs/issue-59.md)\n\n**\u4e94\u6708**\uff1a[\u7b2c 58 \u671f](docs/issue-58.md) | [\u7b2c 57 \u671f](docs/issue-57.md) | [\u7b2c 56 \u671f](docs/issue-56.md) | [\u7b2c 55 \u671f](docs/issue-55.md) | [\u7b2c 54 \u671f](docs/issue-54.md)\n\n**\u56db\u6708**\uff1a[\u7b2c 53 \u671f](docs/issue-53.md) | [\u7b2c 52 \u671f](docs/issue-52.md) | [\u7b2c 51 \u671f](docs/issue-51.md) | [\u7b2c 50 \u671f](docs/issue-50.md)\n\n**\u4e09\u6708**\uff1a[\u7b2c 49 \u671f](docs/issue-49.md) | [\u7b2c 48 \u671f](docs/issue-48.md) | [\u7b2c 47 \u671f](docs/issue-47.md) | [\u7b2c 46 \u671f](docs/issue-46.md) | [\u7b2c 45 \u671f](docs/issue-45.md)\n\n**\u4e8c\u6708**\uff1a[\u7b2c 44 \u671f](docs/issue-44.md) | [\u7b2c 43 \u671f](docs/issue-43.md) | [\u7b2c 42 \u671f](docs/issue-42.md)\n\n**\u4e00\u6708**\uff1a[\u7b2c 41 \u671f](docs/issue-41.md) | [\u7b2c 40 \u671f](docs/issue-40.md) | [\u7b2c 39 \u671f](docs/issue-39.md) | [\u7b2c 38 \u671f](docs/issue-38.md)\n\n## 2018\n\n**\u5341\u4e8c\u6708**\uff1a[\u7b2c 37 \u671f](docs/issue-37.md) | [\u7b2c 36 \u671f](docs/issue-36.md) | [\u7b2c 35 \u671f](docs/issue-35.md) | [\u7b2c 34 \u671f](docs/issue-34.md)\n\n**\u5341\u4e00\u6708**\uff1a[\u7b2c 33 \u671f](docs/issue-33.md) | [\u7b2c 32 \u671f](docs/issue-32.md) | [\u7b2c 31 \u671f](docs/issue-31.md) | [\u7b2c 30 \u671f](docs/issue-30.md) | [\u7b2c 29 \u671f](docs/issue-29.md)\n\n**\u5341\u6708**\uff1a[\u7b2c 28 \u671f](docs/issue-28.md) | [\u7b2c 27 \u671f](docs/issue-27.md) | [\u7b2c 26 \u671f](docs/issue-26.md) | [\u7b2c 25 \u671f](docs/issue-25.md)\n\n**\u4e5d\u6708**\uff1a[\u7b2c 24 \u671f](docs/issue-24.md) | [\u7b2c 23 \u671f](docs/issue-23.md) | [\u7b2c 22 \u671f](docs/issue-22.md) | [\u7b2c 21 \u671f](docs/issue-21.md)\n\n**\u516b\u6708**\uff1a[\u7b2c 20 \u671f](docs/issue-20.md) | [\u7b2c 19 \u671f](docs/issue-19.md) | [\u7b2c 18 \u671f](docs/issue-18.md) | [\u7b2c 17 \u671f](docs/issue-17.md) | [\u7b2c 16 \u671f](docs/issue-16.md)\n\n**\u4e03\u6708**\uff1a[\u7b2c 15 \u671f](docs/issue-15.md) | [\u7b2c 14 \u671f](docs/issue-14.md) | [\u7b2c 13 \u671f](docs/issue-13.md) | [\u7b2c 12 \u671f](docs/issue-12.md)\n\n**\u516d\u6708**\uff1a[\u7b2c 11 \u671f](docs/issue-11.md) | [\u7b2c 10 \u671f](docs/issue-10.md) | [\u7b2c 9 \u671f](docs/issue-9.md) | [\u7b2c 8 \u671f](docs/issue-8.md) | [\u7b2c 7 \u671f](docs/issue-7.md)\n\n**\u4e94\u6708**\uff1a[\u7b2c 6 \u671f](docs/issue-6.md) | [\u7b2c 5 \u671f](docs/issue-5.md) | [\u7b2c 4 \u671f](docs/issue-4.md) | [\u7b2c 3 \u671f](docs/issue-3.md)\n\n**\u56db\u6708**\uff1a[\u7b2c 2 \u671f](docs/issue-2.md) | [\u7b2c 1 \u671f](docs/issue-1.md)\n"}, {"repo": "alirezadir/Production-Level-Deep-Learning", "language": null, "readme_contents": "# :bulb: A Guide to Production Level Deep Learning :clapper: :scroll:  :ferry:\n[NOTE: This repo is still under development, and all feedback and contribution are very welcome :blush:]\n\nDeploying deep learning models in production can be challenging, as it is far beyond training models with good performance. Several distinct components need to be designed and developed in order to deploy a production level deep learning system (seen below):\n\n<p align=\"center\">\n<img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/components.png\" title=\"\" width=\"95%\" height=\"95%\">\n</p>\n\nThis repo aims to be an engineering guideline for building production-level deep learning systems which will be deployed in real world applications. \n\nThe material presented here is borrowed from [Full Stack Deep Learning Bootcamp](https://fullstackdeeplearning.com) (by [Pieter Abbeel](https://people.eecs.berkeley.edu/~pabbeel/) at UC Berkeley, [Josh Tobin](http://josh-tobin.com/) at OpenAI, and [Sergey Karayev](https://sergeykarayev.com/) at Turnitin), [TFX workshop](https://conferences.oreilly.com/tensorflow/tf-ca/public/schedule/detail/79327) by [Robert Crowe](https://www.linkedin.com/in/robert-crowe/), and [Pipeline.ai](https://pipeline.ai/)'s [Advanced KubeFlow Meetup](https://www.meetup.com/Advanced-KubeFlow/) by [Chris Fregly](https://www.linkedin.com/in/cfregly/).\n\n# Machine Learning Projects\nFun :flushed: fact: **85% of AI projects fail**. <sup>[1](#fsdl)</sup> Potential reasons include: \n- Technically infeasible  or poorly scoped \n- Never make the leap to production \n- Unclear success criteria (metrics)\n- Poor team management \n  \n## 1. ML Projects lifecycle\n<p align=\"center\">\n<img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/lifecycle.png\" title=\"\" width=\"95%\" height=\"95%\"></p>\n\n- Importance of understanding state of the art in your domain:\n  - Helps to understand what is possible \n  - Helps to know what to try next \n## 2. Mental Model for ML project \n  The two important factors to consider when defining and prioritizing ML projects:\n  - High Impact:\n    - Complex parts of your pipeline \n    - Where \"cheap prediction\" is valuable\n    - Where automating complicated manual process is valuable \n  - Low Cost:\n    - Cost is driven by: \n      - Data availability \n      - Performance requirements: costs tend to scale super-linearly in the accuracy requirement \n      - Problem difficulty: \n        - Some of the hard problems include: unsupervised learning, reinforcement learning, and certain categories of supervised learning \n<p align=\"center\">\n<img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/prioritize.png\" title=\"\" width=\"90%\" height=\"90%\">\n</p>\n  \n# Full stack pipeline \n\nThe following figure represents a high level overview of different components in a production level deep learning system:\n<p align=\"center\">\n<img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/infra_tooling.png\" title=\"\" width=\"100%\" height=\"100%\">\n</p>\nIn the following, we will go through each module and recommend toolsets and frameworks as well as best practices from practitioners that fit each component. \n\n## 1. Data Management \n### 1.1 Data Sources \n* Supervised deep learning requires a lot of labeled data\n* Labeling own data is costly! \n* Here are some resources for data: \n  * Open source data (good to start with, but not an advantage) \n  * Data augmentation (a MUST for computer vision, an option for NLP)\n  * Synthetic data (almost always worth starting with, esp. in NLP)\n### 1.2  Data Labeling \n* Requires: separate software stack (labeling platforms), temporary labor, and QC\n* Sources of labor for labeling: \n  * Crowdsourcing (Mechanical Turk): cheap and scalable, less reliable, needs QC\n  * Hiring own annotators: less QC needed, expensive, slow to scale \n  * Data labeling service companies:\n    * [FigureEight](https://www.figure-eight.com/)  \n* Labeling platforms: \n  * [Diffgram](https://diffgram.com/): Training Data Software (Computer Vision)\n  * [Prodigy](https://prodi.gy/): An annotation tool powered\nby active learning (by developers of Spacy), text and image \n  * [HIVE](https://thehive.ai/): AI as a Service platform for computer vision  \n  * [Supervisely](https://supervise.ly/): entire computer vision platform \n  * [Labelbox](https://labelbox.com/): computer vision  \n  * [Scale](https://scale.com/) AI data platform (computer vision & NLP)\n\n    \n### 1.3. Data Storage \n* Data storage options: \n  * **Object store**: Store binary data (images, sound files, compressed texts) \n    * [Amazon S3](https://aws.amazon.com/s3/) \n    * [Ceph](https://ceph.io/) Object Store\n  * **Database**: Store metadata (file paths, labels, user activity, etc). \n    * [Postgres](https://www.postgresql.org/) is the right choice for most of applications, with the best-in-class SQL and great support for unstructured JSON. \n  * **Data Lake**: to aggregate features which are not obtainable from database (e.g. logs)\n    * [Amazon Redshift](https://aws.amazon.com/redshift/)\n  * **Feature Store**: store, access, and share machine learning features \n (Feature extraction could be computationally expensive and nearly impossible to scale, hence re-using features by different models and teams is a key to high performance ML teams). \n    * [FEAST](https://github.com/gojek/feast) (Google cloud, Open Source)\n    * [Michelangelo Palette](https://eng.uber.com/michelangelo/) (Uber)\n* Suggestion: At training time, copy data into a local or networked **filesystem** (NFS). <sup>[1](#fsdl)</sup> \n\n### 1.4. Data Versioning \n* It's a \"MUST\" for deployed ML models:  \n  **Deployed ML models are part code, part data**. <sup>[1](#fsdl)</sup>  No data versioning means no model versioning. \n* Data versioning platforms: \n  * [DVC](https://dvc.org/): Open source version control system for ML projects \n  * [Pachyderm](https://www.pachyderm.com/): version control for data \n  * [Dolt](https://www.liquidata.co/): versioning for SQL database \n    \n### 1.5. Data Processing \n* Training data for production models may come from different sources, including *Stored data in db and object stores*, *log processing*, and *outputs of other classifiers*.\n* There are dependencies between tasks, each needs to be kicked off after its dependencies are finished. For example, training on new log data, requires a preprocessing step before training. \n* Makefiles are not scalable. \"Workflow manager\"s become pretty essential in this regard.\n* **Workflow orchestration:**\n  * [Luigi](https://github.com/spotify/luigi) by Spotify\n  * [Airflow](https://airflow.apache.org/) by Airbnb: Dynamic, extensible, elegant, and scalable (the most widely used)\n      * DAG workflow \n      * Robust conditional execution: retry in case of failure  \n      * Pusher supports docker images with tensorflow serving \n      * Whole workflow in a single .py file \n\n<p align=\"center\">\n  <img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/airflow_pipe.png\" title=\"\" width=\"65%\" height=\"65%\">\n   </p>\n   \n\n## 2. Development, Training, and Evaluation \n### 2.1. Software engineering\n* Winner language: Python\n* Editors:\n   * Vim\n   * Emacs  \n   * [VS Code](https://code.visualstudio.com/) (Recommended by the author): Built-in git staging and diff, Lint code, open projects remotely through ssh \n   * Notebooks: Great as starting point of the projects, hard to scale (fun fact: Netflix\u2019s Notebook-Driven Architecture is an exception, which is entirely based on [nteract](https://nteract.io/) suites). \n      * [nteract](https://nteract.io/): a next-gen React-based UI for Jupyter notebooks\n      * [Papermill](https://github.com/nteract/papermill): is an [nteract](https://nteract.io/) library built for *parameterizing*, *executing*, and *analyzing* Jupyter Notebooks.\n      * [Commuter](https://github.com/nteract/commuter): another [nteract](https://nteract.io/) project which provides a read-only display of notebooks (e.g. from S3 buckets).\n   * [Streamlit](https://streamlit.io/): interactive data science tool with applets\n * Compute recommendations <sup>[1](#fsdl)</sup>:\n   * For *individuals* or *startups*: \n     * Development: a 4x Turing-architecture PC\n     * Training/Evaluation: Use the same 4x GPU PC. When running many experiments, either buy shared servers or use cloud instances.\n   * For *large companies:* \n     * Development: Buy a 4x Turing-architecture PC per ML scientist or let them use V100 instances\n     * Training/Evaluation: Use cloud instances with proper provisioning and handling of failures\n * Cloud Providers: \n   * GCP: option to connect GPUs to any instance + has TPUs \n   * AWS:  \n### 2.2. Resource Management \n  * Allocating free resources to programs \n  * Resource management options: \n    * Old school cluster job scheduler ( e.g. [Slurm](https://slurm.schedmd.com/) workload manager )\n    * Docker + Kubernetes\n    * Kubeflow \n    * [Polyaxon](https://polyaxon.com/) (paid features)\n    \n### 2.3. DL Frameworks \n  * Unless having a good reason not to, use Tensorflow/Keras or PyTorch. <sup>[1](#fsdl)</sup> \n  * The following figure shows a comparison between different frameworks on how they stand for *\"developement\"* and *\"production\"*.  \n\n  <p align=\"center\">\n  <img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/frameworks.png\" title=\"\" width=\"95%\" height=\"95%\">\n   </p>\n\n  \n### 2.4. Experiment management\n\n* Development, training, and evaluation strategy:\n  * Always start **simple** \n    * Train a small model on a small batch. Only if it works, scale to larger data and models, and hyperparameter tuning!  \n  * Experiment management tools: \n  * [Tensorboard](https://www.tensorflow.org/tensorboard)\n      * provides the visualization and tooling needed for ML experimentation  \n  * [Losswise](https://losswise.com/) (Monitoring for ML)\n  * [Comet](https://www.comet.ml/): lets you track code, experiments, and results on ML projects\n  * [Weights & Biases](https://www.wandb.com/): Record and visualize every detail of your research with easy collaboration \n  * [MLFlow Tracking](https://www.mlflow.org/docs/latest/tracking.html#tracking): for logging parameters, code versions, metrics, and output files as well as visualization of the results.\n    * Automatic experiment tracking with one line of code in python\n    * Side by side comparison of experiments \n    * Hyper parameter tuning \n    * Supports Kubernetes based jobs \n    \n### 2.5. Hyperparameter Tuning \n  * Approaches: \n    * Grid search \n    * Random search \n    * Bayesian Optimization\n    * HyperBand (and ASHA)\n    * Population-based Training\n\n  * Platforms: \n    * [RayTune](http://tune.io/): Ray Tune is a Python library for hyperparameter tuning at any scale (with  a focus on deep learning and deep reinforcement learning). Supports any machine learning framework, including PyTorch, XGBoost, MXNet, and Keras.\n    * [Katib](https://github.com/kubeflow/katib): Kubernete's Native System   for Hyperparameter Tuning and Neural Architecture Search, inspired by   [Google vizier](https://static.googleusercontent.com/media/ research.google.com/ja//pubs/archive/  bcb15507f4b52991a0783013df4222240e942381.pdf) and supports multiple ML/DL   frameworks (e.g. TensorFlow, MXNet, and PyTorch). \n    * [Hyperas](https://maxpumperla.com/hyperas/): a simple wrapper around  hyperopt for Keras, with a simple template notation to define  hyper-parameter ranges to tune.\n    * [SIGOPT](https://sigopt.com/):  a scalable, enterprise-grade  optimization platform \n    * [Sweeps](https://docs.wandb.com/library/sweeps) from [Weights & Biases] (https://www.wandb.com/): Parameters are not explicitly specified by a   developer. Instead they are approximated and learned by a machine   learning model.\n    * [Keras Tuner](https://github.com/keras-team/keras-tuner): A hyperparameter tuner for Keras, specifically for tf.keras with TensorFlow 2.0.\n\n### 2.6. Distributed Training \n  * Data parallelism: Use it when iteration time is too long (both tensorflow and PyTorch support)\n    * [Ray Distributed Training](https://ray.readthedocs.io/en/latest/distributed_training.html)\n  * Model parallelism: when model does not fit on a single GPU \n  * Other solutions: \n    * Horovod\n\n## 3. Troubleshooting [TBD]\n\n## 4. Testing and Deployment \n### 4.1. Testing and CI/CD\nMachine Learning production software requires a more diverse set of test suites than traditional software:\n<p align=\"center\">\n  <img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/testing.png\" title=\"\" width=\"75%\" height=\"75%\">\n   </p>\n   \n* Unit and Integration Testing: \n   * Types of tests: \n     * Training system tests: testing training pipeline\n     * Validation tests: testing prediction system on validation set \n     * Functionality tests: testing prediction system on few important examples \n* Continuous Integration: Running tests after each new code change pushed to the repo \n * SaaS for continuous integration: \n    * [Argo](https://argoproj.github.io/): Open source Kubernetes native workflow engine for orchestrating parallel jobs (incudes workflows, events, CI and CD).\n    * [CircleCI](https://circleci.com/): Language-Inclusive Support, Custom Environments, Flexible Resource Allocation, used by instacart, Lyft, and StackShare.\n    * [Travis CI](https://travis-ci.org/)\n    * [Buildkite](https://buildkite.com/): Fast and stable builds, Open source agent runs on almost any machine and architecture, Freedom to use your own  tools and services\n    * Jenkins: Old school build system  \n\n\n### 4.2. Web Depolyment\n  * Consists of a **Prediction System** and a **Serving System**\n      * Prediction System: Process input data, make predictions \n      * Serving System (Web server): \n        * Serve prediction with scale in mind  \n        * Use REST API to serve prediction HTTP requests\n        * Calls the prediction system to respond \n  * Serving options: \n      * 1. Deploy to VMs, scale by adding instances \n      * 2. Deploy as containers, scale via orchestration \n          * Containers \n              * Docker \n          * Container Orchestration:\n              * Kubernetes (the most popular now)\n              * MESOS \n              * Marathon \n      * 3. Deploy code as a \"serverless function\"\n      * 4. Deploy via a **model serving** solution\n  * Model serving:\n      * Specialized web deployment for ML models\n      * Batches request for GPU inference \n      * Frameworks:\n         * Tensorflow serving \n         * MXNet Model server \n         * Clipper (Berkeley)\n         * SaaS solutions\n            * [Seldon](https://www.seldon.io/): serve and scale models built in any framework on Kubernetes\n            * [Algorithmia](https://algorithmia.com/)\n   * Decision making: CPU or GPU? \n      * CPU inference:\n         * CPU inference is preferable if it meets the requirements.\n         * Scale by adding more servers, or going serverless. \n      * GPU inference: \n         * TF serving or Clipper \n         * Adaptive batching is useful \n  * (Bonus) Deploying Jupyter Notebooks:\n      * [Kubeflow Fairing](https://github.com/kubeflow/fairing) is a hybrid deployment package that let's you deploy your *Jupyter notebook* codes! \n    \n### 4.5 Service Mesh and Traffic Routing \n* Transition from monolithic applications towards a distributed microservice architecture could be challenging. \n* A **Service mesh** (consisting of a network of microservices) reduces the complexity of such deployments, and eases the strain on development teams.\n  * [Istio](https://istio.io/): a service mesh to ease creation of  a network of deployed services with load balancing, service-to-service authentication, monitoring, with few or no code changes in service code. \n### 4.4. Monitoring:\n* Purpose of monitoring: \n   * Alerts for downtime, errors, and distribution shifts \n   * Catching service and data regressions \n* Cloud providers solutions are decent \n* [Kiali](https://kiali.io/):an observability console for Istio with service mesh configuration capabilities. It answers these questions: How are the microservices connected? How are they performing?\n\n#### Are we done?\n<p align=\"center\">\n   <img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/post-deploy.png\" title=\"\" width=\"65%\" height=\"65%\">\n</p>\n\n### 4.5. Deploying on Embedded and Mobile Devices  \n* Main challenge: memory footprint and compute constraints \n* Solutions: \n   * Quantization \n   * Reduced model size \n      * MobileNets \n   * Knowledge Distillation \n      * DistillBERT (for NLP)\n* Embedded and Mobile Frameworks: \n   * Tensorflow Lite\n   * PyTorch Mobile\n   * Core ML \n   * ML Kit \n   * FRITZ \n   * OpenVINO\n* Model Conversion:\n   * Open Neural Network Exchange (ONNX): open-source format for deep learning models \n### 4.6. All-in-one solutions\n   * Tensorflow Extended (TFX)\n   * Michelangelo (Uber)\n   * Google Cloud AI Platform \n   * Amazon SageMaker \n   * Neptune \n   * FLOYD \n   * Paperspace \n   * Determined AI \n   * Domino data lab \n<p align=\"center\">\n   <img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/infra-cmp.png\" title=\"\" width=\"100%\" height=\"100%\">\n</p>\n\n# Tensorflow Extended (TFX) \n[TBD]\n<p align=\"center\">\n<img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/tfx_config.png\" title=\"\" width=\"95%\" height=\"95%\">\n</p>\n\n# Airflow and KubeFlow ML Pipelines \n[TBD]\n<p align=\"center\">\n    <img src=\"https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/images/kubeflow_pipe.png\" title=\"\" width=\"45%\" height=\"45%\">\n</p>\n\n\n## Other useful links: \n* [Lessons learned from building practical deep learning systems](https://www.slideshare.net/xamat/lessons-learned-from-building-practical-deep-learning-systems)\n* [Machine Learning: The High Interest Credit Card of Technical Debt](https://ai.google/research/pubs/pub43146)\n \n## [Contributing](https://github.com/alirezadir/Production-Level-Deep-Learning/blob/master/CONTRIBUTING.md)\n\n## References: \n\n<a name=\"fsdl\">[1]</a>: [Full Stack Deep Learning Bootcamp](https://fullstackdeeplearning.com/), Nov 2019. \n\n<a name=\"pipe\">[2]</a>: [Advanced KubeFlow Workshop](https://www.meetup.com/Advanced-KubeFlow/) by [Pipeline.ai](https://pipeline.ai/), 2019. \n\n<a name=\"pipe\">[3]</a>: [TFX: Real World Machine Learning in Production](https://cdn.oreillystatic.com/en/assets/1/event/298/TFX_%20Production%20ML%20pipelines%20with%20TensorFlow%20Presentation.pdf)\n\n   \n    \n"}, {"repo": "sdmg15/Best-websites-a-programmer-should-visit", "language": null, "readme_contents": "<h1 align=\"center\">\n\t<br>\n\t<img width=\"200\" src=\"https://cdn.rawgit.com/sindresorhus/awesome/master/media/logo.svg\" alt=\"awesome\">\n\t<br>\n</h1>\n\n[![Build Status](https://api.travis-ci.org/sdmg15/Best-websites-a-programmer-should-visit.svg?branch=master)](https://travis-ci.org/sdmg15/Best-websites-a-programmer-should-visit)\n\n# Best-websites-a-programmer-should-visit\nSome useful websites for programmers.\n\nWhen learning CS, there are some useful sites you must know to get always informed in order to do your technologies even better and learn new things. Here is a non exhaustive list of some sites you should visit. This list will get updated as soon as I can get another link, but you can also contribute by adding those you know :wink:\n\n**Note** : [Chinese Version](https://github.com/tuteng/Best-websites-a-programmer-should-visit-zh)\n\n<h3>Index</h3>\n<ul>\n<li><a href=\"#when-you-get-stuck\">When you get stuck</a></li>\n<li><a href=\"#news\">News</a></li>\n<li><a href=\"#magazines\">Magazines</a></li>\n<li><a href=\"#coding-practice-for-beginners\">Coding practice for beginners</a></li>\n<li><a href=\"#cryptocurrency\">Cryptocurrency</a></li>\n<li><a href=\"#for-those-who-want-to-start-a-small-project-but-cant-find-the-ideas\">For those who want to start a small project but can't find the ideas</a></li>\n<li><a href=\"#general-coding-advice\">General Coding advice</a></li>\n<li><a href=\"#coding-style\">Coding Style</a></li>\n<li><a href=\"#general-tools\">General Tools</a></li>\n<li><a href=\"#interview-preparation\">Interview Preparation</a></li>\n<li><a href=\"#documentaries\">Documentaries</a></li>\n<li><a href=\"#moocs-for-learning-something-new\">MOOCs for learning something new</a></li>\n<li><a href=\"#sites-related-to-your-preferred-programming-language-for-me-java\">Sites related to your preferred programming language (For me Java)</a></li>\n<li><a href=\"#learn-ai\">Learn AI</a></li>\n<li><a href=\"#seminar--research-writing--talks-etc\">Seminar , research writing , talks etc</a></li>\n<li><a href=\"#everything-in-one-place\">Everything in one place</a></li>\n<li><a href=\"#youtube-channels\">YouTube Channels</a></li>\n<li><a href=\"#good-articles\">Good Articles</a></li>\n<li><a href=\"#bash-and-shell-scripting\">Bash and Shell scripting</a></li>\n<li><a href=\"#podcasts\">Podcasts</a></li>\n<li><a href=\"#building-a-simple-compilerinterpreter\">Building a Simple Compiler/Interpreter</a></li>\n<li><a href=\"#watch-others-code\">Watch others code</a></li>\n<li><a href=\"#tutorials\">Tutorials</a></li>\n<li><a href=\"#what-should-a-programmer-know\">What should a programmer know</a></li>\n<li><a href=\"#competitive-programming\">Competitive programming</a></li>\n<li><a href=\"#computer-books\">Computer Books</a></li>\n<li><a href=\"#video-tutorials\">Video Tutorials</a></li>\n<li><a href=\"#online-compiler-and-sharing-code-snippets\">Online Compiler and Sharing Code snippets</a></li>\n<li><a href=\"#blogs-of-developers\">Blogs of Developers</a></li>\n<li><a href=\"#for-improving-your-english\">For improving your English</a></li>\n<li><a href=\"#when-you-get-bored-from-cs-related-stuff\">When you get bored from CS related stuff</a></li>\n<li><a href=\"#open-source-websites\">Open Source Websites</a></li>\n<li><a href=\"#internships\">Internships</a></li>\n<li><a href=\"#jobs\">Jobs</a></li>\n</ul>\n\n## When you get stuck\n- [Codementor](https://www.codementor.io) : A mentorship community to learn from fellow developers via live 1:1 help and more.\n- [devRant](https://www.devrant.io) : Community where you can rant and release your stress\n- [Learn Anything](https://learn-anything.xyz) : Community curated knowledge graph of best paths for learning anything\n- [Quora](https://www.quora.com) : A place to share knowledge and better understand the world\n- [Stack Overflow](https://stackoverflow.com) : subscribe to their weekly newsletter and any other topic which you find interesting\n\n\n## News\n- [ACM TechNews](http://technews.acm.org) : TechNews\n- [Stratechery](https://stratechery.com) : Stratechery by Ben Thompson\n- [AlternativeTo](https://alternativeto.net) : Crowdsourced software recommendations\n- [Ars Technica](https://arstechnica.com) : posts unique quality articles\n- [Better Dev Links](https://betterdev.link) : Weekly links to help you become a better developer\n- [DevOpsLinks](http://devopslinks.com) : An online community of thousands of developers and IT experts interested in DevOps\n- [GSMArena.com](http://www.gsmarena.com) : news related to latest mobile phones and android.\n- [Hacker News Digest](https://hndigest.com) : curated automatically, delivered as frequently as you want\n- [Hacker News](https://news.ycombinator.com) : news aggregator for programmers where civility is king, try a newsletter to get top news to your inbox:\n- [Hacker Newsletter](http://www.hackernewsletter.com) : curated by hand, delivered weekly\n- [Hacker Noon](https://hackernoon.com) : How hackers start their afternoons.\n- [High Scalability](http://highscalability.com) : Success stories of various companies on their apps, infra scaling.\n- [Lobsters](https://lobste.rs) : Lobsters is a technology-focused community centered around link aggregation and discussion.\n- [product hunt](https://www.producthunt.com) : Discover your next favorite thing\n- [Recode](https://www.recode.net) : Tech news that focuses on the business of Silicon Valley\n- [Reddit.com/r/programming](https://www.reddit.com/r/programming/) : Subreddit with aggregated tech news and articles\n- [Slashdot](https://slashdot.org) : News, Social news (Originally \"News for Nerds. Stuff that Matters\")\n- [StackShare](https://stackshare.io) : See what tools are popular with developers and companies and read about their technology decisions\n- [TechCrunch](https://techcrunch.com) : dedicated to obsessively profiling startups, reviewing new Internet products, and breaking tech news\n- [The DEV Community](https://dev.to) : Where programmers share ideas and help each other grow.\n- [The Verge](https://www.theverge.com) : More product oriented tech news\n- [WCCF Tech](https://wccftech.com) : curated news related to Computer Hardware, Software and everything else in the Tech World. \n- [XDA](https://www.xda-developers.com) : Android Developers News\n- [Hashnode](https://hashnode.com/) : Hashnode is a friendly and inclusive community for software developers\n\n## Magazines\n- [MIT Technology Review](https://www.technologyreview.com/magazine/) : MIT's tech review magazine.\n- [Nautilus](http://nautil.us) : NewYorker for tech.\n- [LWN](https://lwn.net) : Weekly news coverage of opensource technologies, programming, etc. ( Originally Linux Weekly News).\n\n\n## Coding practice for beginners\n- [freeCodeCamp](https://www.freecodecamp.com) : Learn to code and build projects for nonprofits. Build your full stack web development portfolio today\n- [Blackbird School](https://blackbird.school) : Learn to code online with our beginner-friendly platform.\n- [Glitch](https://glitch.com/) : Great place to play around with code in an easy-to-set-up environment.\n- [Reddit.com/r/dailyprogrammer](https://www.reddit.com/r/dailyprogrammer/) : interesting programming challenges where you can learn from looking at other's code , even if you are not able to solve code you can look at how others solved.\n- [Programming by Doing](http://programmingbydoing.com) : very good site for those who want to start with absolute basics\n- [CodeAbbey - a place where everyone can master programming](http://www.codeabbey.com) : Best place to begin with problems that start at the easiest and gradually increase difficulty with each problem.\n- [Exercism.io](http://exercism.io) : download and solve practice problems in over 30 different languages, and share your solution with others.\n- [InterviewBit | Coding Interview Questions](https://www.interviewbit.com) : Gamifies the experience of practicing for your interview and includes lots of sample problems to solve.\n- [karan/Projects-Solutions](https://github.com/karan/Projects-Solutions) : Solutions to most of the problems in the link above\n- [Lod - Cloud](http://lod-cloud.net) : The Linking Open Data cloud diagram\n- [Cave of programming](https://caveofprogramming.com) : Learn to program, Upgrade your skills.\n- [Vim adventures](https://vim-adventures.com/) : Learn VIM by playing\n- [Programming Tasks](http://rosettacode.org/wiki/Category:Programming_Tasks) : large collection of small programs\n- [Pramp](https://www.pramp.com) : It's your turn to be the interviewer. when done, click on the swap roles button on the left\n- [Paqmind](http://paqmind.com) : Guides and challenges to learn programming\n- [gitignore](https://www.gitignore.io/) : A collection of useful .gitignore templates for your project. Select from 442 Operating System, IDE, and Programming Language\n- [Codeacademy](https://www.codecademy.com) : Learn to code interactively, for free.\n- [treehouse](https://teamtreehouse.com) : The fast, easy, and affordable way to build your skills.\n- [GeeksforGeeks](https://practice.geeksforgeeks.org) : Learn to code, Study for placement, Do competitive coding.\n\n\n## CryptoCurrency\n- [Blockchain demo](https://blockchaindemo.io/) : A visual demo of Blockchain technology\n- [Coin demo](https://coindemo.io/) : CryptoCurrency demo\n- [Lopp Bitcoin Resources](https://lopp.net/bitcoin.html) : Some Bitcoin Resources\n- [Blockchain Basics](https://www.sitepen.com/blog/2017/09/21/blockchain-basics/) : Great introduction to blockchain\n- [GitCoin](https://gitcoin.co) : Gitcoin is the easiest way to monetize or incentivize work in Open Source Software.\n- [Lite Paper](https://litepaper.com/) : Cryptocurrencies & Blockchain made effortless\n\n\n## For those who want to start a small project but can't find the ideas\n- [freeCodeCamp | React project ideas](https://medium.freecodecamp.org/every-time-you-build-a-to-do-list-app-a-puppy-dies-505b54637a5d?gi=c786640fbd11) : 27 fun app ideas you can build while learning React.\n- [martyr2s-mega-project-ideas-list](http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/) : contains about 125 project ideas from beginner to intermediate level.\n- [karan/Projects](https://github.com/karan/Projects) : a large collection of small projects for beginners with\n- [Wrong \"big projects\" for beginners](http://rodiongork.tumblr.com/post/108155476418/wrong-big-projects-for-beginners) : How to choose where to start\n- [vicky002/1000-Projects](https://github.com/vicky002/1000_Projects) : Mega List of practical projects that one can solve in any programming language!\n- [reddit.com/r/AppIdeas](https://www.reddit.com/r/AppIdeas/) : A place to discuss ideas for applications, for bored developers.\n- [reddit.com/r/SomebodyMakeThis](https://www.reddit.com/r/SomebodyMakeThis/) : A home for ideas by people who lack time, money, or skills.\n\n\n## General Coding advice\n- [10-ways-to-be-a-better-developer](https://stephenhaunts.files.wordpress.com/2014/04/10-ways-to-be-a-better-developer.png) : Ways to become a better dev!\n- [Code Review Best Practices](https://www.kevinlondon.com/2015/05/05/code-review-best-practices.html) : Kevin London's blog\n- [Design Patterns](https://sourcemaking.com/design_patterns) : Design Patterns explained in detail with examples.\n- [Develop for Performance](http://developforperformance.com) : High-performance computing techniques for software architects and developers\n- [How to become a programmer, or the art of Googling well](https://okepi.wordpress.com/2014/08/21/how-to-become-a-programmer-or-the-art-of-googling-well/) : How to become a programmer, or the art of Googling well\n- [How to escape tutorial purgatory as a new developer\u200a\u2014\u200aor at any time in your career](https://medium.freecodecamp.org/how-to-escape-tutorial-purgatory-as-a-new-developer-or-at-any-time-in-your-career-e3a4b2384a40) : How to escape tutorial purgatory\n- [JS Project Guidelines](https://github.com/wearehive/project-guidelines) : A set of best practices for JavaScript projects.\n- [Learn to Code With Me](https://learntocodewith.me) : A comprehensive site resource by Laurence Bradford for developers who aims to build a career in the tech world\n- [Lessons From A Lifetime Of Being A Programmer](http://thecodist.com/article/lessons_from_a_lifetime_of_being_a_programmer) : The Codist Header Lessons From A Lifetime Of Being A Programmer  \n- [Programming Principles](https://webpro.github.io/programming-principles/) : Categorized overview of Programming Principles & Patterns\n- [Software design pattern](https://en.wikipedia.org/wiki/Software_design_pattern) : The entire collection of Design Patterns.\n- [Things I Wish Someone Had Told Me When I Was Learning How to Code \u2014 Free Code Camp](https://medium.freecodecamp.com/things-i-wish-someone-had-told-me-when-i-was-learning-how-to-code-565fc9dcb329?gi=fc6d0a309be ) : What I\u2019ve learned from teaching others\n- [What every computer science major should know](http://matt.might.net/articles/what-cs-majors-should-know/) : The Principles of Good Programming\n- [Working as a Software Developer](https://henrikwarne.com/2012/12/12/working-as-a-software-developer/) : Henrik Warne's blog\n- [The Open Web Application Security Project (OWASP)](https://www.owasp.org) : OWASP is an open community dedicated to enabling organizations to conceive, develop, acquire, operate, and maintain applications that can be trusted.\n\n\n## Coding Style\n- [Airbnb JS Style Guide](https://github.com/airbnb/javascript) : A mostly reasonable approach to JavaScript\n- [Airbnb Ruby Style Guide](https://github.com/airbnb/ruby) : A ruby style guide by Airbnb\n- [Ruby coding style guide](https://github.com/bbatsov/ruby-style-guide) : A community-driven Ruby coding style guide\n- [Angular 1 Style Guide](https://github.com/johnpapa/angular-styleguide/tree/master/a1) : Officially endorsed style guide by John Pappa\n- [CS 106B Coding Style Guide](http://stanford.edu/class/archive/cs/cs106b/cs106b.1158/styleguide.shtml) : must see for those who create spaghetti\n- [Debugging Faqs](http://www.umich.edu/~eecs381/generalFAQ/Debugging.html) : Check out how to debug your program\n- [Directory of CS Courses (many with online lectures)](https://github.com/prakhar1989/awesome-courses) : Another online CS courses\n- [Directory of Online CS Courses](https://github.com/ossu/computer-science) : Free online CS courses\n- [Good C programming habits. \u2022 /r/C_Programming](https://www.reddit.com/r/C_Programming/comments/1vuubw/good_c_programming_habits/) : C programming habits to adopt\n- [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html)\n- [How to Report Bugs Effectively](https://www.chiark.greenend.org.uk/~sgtatham/bugs.html) : Want to report a bug but you don't how? Check out this post\n- [What are some bad coding habits you would recommend a beginner avoid getting into?](https://www.reddit.com/r/learnprogramming/comments/1i4ds4/what_are_some_bad_coding_habits_you_would/) : Bad habits to avoid when you get start\n- [PEP8 - Style Guide for Python Code](https://www.python.org/dev/peps/pep-0008/) : Style Guide for Python Code\n- [Standard JS Style Guide](https://standardjs.com) : JavaScript style guide, with linter & automatic code fixer\n- [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html) : Google Python Style Guide\n- [Aurelia Style Guide](https://github.com/behzad888/Aurelia-styleguide) : An Aurelia style guide by Behzad Abbasi(Behzad888)\n- [Source Making ](https://sourcemaking.com/): Design Patterns & Refactoring\n\n## General Tools\n- [CodePad](https://codepad.remoteinterview.io/DDCUYLAEYS) : Quickly Conduct Coding Interviews and Phone Screen Interviews.\n- [CodePen](https://codepen.io) : Front End Developer Playground & Code Editor in the Browser\n- [Devicons](http://vorillaz.github.io/devicons/#/main) : Cheatsheet for devs icons\n- [regex101](https://regex101.com) : Online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript\n- [regexr](https://regexr.com) : Another online tool to learn, build & test Regular Expressions\n- [Wit AI](https://wit.ai) : Natural Language for Developers\n- [Seymour](https://harc.github.io/seymour-live2017) : Live Programming for the Classroom\n- [Code share](https://codeshare.io) : Share code in real-time with other developers\n- [Solid Tools for Developers](https://soliddevtools.com) : Online debugging tools for developers and system administrators\n- [OS Query](https://osquery.io) : Easily ask questions about your Linux, Windows, and macOS infrastructure\n- [LaunchPad](https://launchpad.graphql.com) : Appollo launchepad for testing GraphQl queries\n- [IDE Onlang](https://ide.onelang.io) : Write in one language and get the same result in other languages.\n- [PullRequest](https://www.pullrequest.com/) : Code review as a service from vetted, professional reviewers\n- [Extends Class](https://extendsclass.com/) : Online developer tools: REST and SOAP clients, SQLite browser, testers (Regex, XPath, JSONPath) and other tools (Encoders, Converters and formatters)\n- [EmailDrop](https://www.emaildrop.io/): Emaildrop is a free disposable email provider.\n\n\n## Bash and Shell scripting  \n- [Advanced Bash-Scripting Guide](http://tldp.org/LDP/abs/html/) : An in-depth exploration of the art of shell scripting\n- [Bash Guide for Beginners](http://www.tldp.org/LDP/Bash-Beginners-Guide/html/) : Bash Guide for Beginners Machtelt Garrels\n- [Bash Programming](http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html) : by Mike G mikkey at dynamo.com.ar\n- [Bash Reference Manual](https://www.gnu.org/software/bash/manual/bashref.html) : Bash Reference Manual\n- [BashGuide](http://mywiki.wooledge.org/BashGuide) : BashGuide - Greg's Wiki\n- [Conquering the Command Line](http://conqueringthecommandline.com/book/frontmatter) : Unix and Linux Commands for Developers\n- [Airbon OS](https://www.airbornos.com) :  Private Google Docs Alternative\n\n## Interview Preparation\n- [/r/cscareerquestions](https://www.reddit.com/r/cscareerquestions/comments/20ahfq/heres_a_pretty_big_list_of_programming_interview/) : Here's a pretty big list of programming interview questions I compiled while studying for big 4 interviews. I think you guys will find it useful!\n- [10 Frequently asked SQL Query Interview Questions](http://www.java67.com/2013/04/10-frequently-asked-sql-query-interview-questions-answers-database.html)\n- [A Collection of Quant Riddles With Answers](http://puzzles.nigelcoldwell.co.uk)\n- [Algorithm design canvas](https://www.hiredintech.com/algorithm-design)\n- [Aptitude Questions and Answers](http://www.indiabix.com) : Quant and aptitude preparation\n- [A site for technical interview questions, brain teasers, puzzles, quizzles](https://www.techinterview.org) : whatever the heck those are) and other things that make you think!\n- [BeehYve](https://www.beehyve.io) : Student crowdsourced resources for any topic\n- [Big collection of interview preparation links \u2022 /r/cscareerquestions](https://www.reddit.com/r/cscareerquestions/comments/2lzc4h/big_collection_of_interview_preparation_links/)\n- [Big-O Algorithm Complexity Cheat Sheet](http://bigocheatsheet.com/#)\n- [BIG O Misconceptions](http://ssp.impulsetrain.com/big-o.html)\n- [Bitwise tricks](https://gist.github.com/dideler/2365607)\n- [ChiperSoft/InterviewThis](https://github.com/Twipped/InterviewThis) : questions to ask during on a interview to know more about the company.\n- [Code Project](https://www.codeproject.com) : For those who code!\n- [Core Java Interview questions - Interview question on each topic](http://javahonk.com/core-java-interview-questions/)\n- [C PUZZLES, Some interesting C problems](http://www.gowrikumar.com/c/index.php)\n- [CS9: Problem-Solving for the CS Technical Interview](http://web.stanford.edu/class/cs9/)\n- [Delightful Puzzles](http://gurmeet.net/puzzles/)\n- [Determining the big-O runtimes of these different loops?](https://stackoverflow.com/questions/11094330/determining-the-big-o-runtimes-of-these-different-loops) : really good stackoverflow question that covers basics of calculating runtime complexity.\n- [five-essential-phone-screen-questions - steveyegge2](https://sites.google.com/site/steveyegge2/five-essential-phone-screen-questions)\n- [Freshers Interviews](http://placementsindia.blogspot.com)\n- [Gainlo](http://www.gainlo.co/#!/) : Mock interview from professionals \n- [GeeksforGeeks | A computer science portal for geeks](http://www.geeksforgeeks.org) : also subscribe to their feeds to get links to their new articles.\n- [github.com/odino/interviews](https://github.com/odino/interviews) : list of important questions for interview\n- [Give your r\u00e9sum\u00e9 a face lift](http://www.lifeclever.com/give-your-resume-a-face-lift/)\n- [Here's How to Prepare for Tech Interviews \u2022 /r/cscareerquestions](https://www.reddit.com/r/cscareerquestions/comments/1jov24/heres_how_to_prepare_for_tech_interviews/)\n- [How to Answer \"Tell Me a Little About Yourself\" | The Art of Manliness](http://www.artofmanliness.com/2016/01/05/tell-me-a-little-about-yourself/)\n- [How to Answer the Toughest 40 Job Interview Questions | ICS Job Portal](http://www.icsjobportal.com/blog/job-interview-questions)\n- [How to Break Into the Tech Industry - a Guide to Job Hunting and Tech Interviews](http://haseebq.com/how-to-break-into-tech-job-hunting-and-interviews)\n- [How to interview](http://kelukelu.me/interview/index.html)\n- [How to prepare for an interview - 1](http://se7so.blogspot.com/2014/01/how-to-prepare-for-interview-1.html)\n- [IIT Delhi Placement Experience](http://placement-iit2013.blogspot.com)\n- [samwincott/Internship-Guide](https://github.com/samwincott/Internship-Guide) : An aggregrate of links related to internships.\n- [Interviewing At Jane Street](https://blog.janestreet.com/interviewing-at-jane-street/) : Interviewing At Jane Street\n- [Interview Archives - Java Honk](http://javahonk.com/category/interview/)\n- [Job Interview: How to Ace a Job Interview | The Art of Manliness](http://www.artofmanliness.com/2012/08/06/how-to-ace-a-job-interview/)\n- [Job interviews News, Videos, Reviews and Gossip - Lifehacker](https://lifehacker.com/tag/job-interviews)\n- [Job Interview Questions and Best Answers](https://www.thebalance.com/job-interview-questions-and-answers-2061204)\n- [kimberli/interviews](https://github.com/kimberli/interviews) : study sheet for Interview\n- [LeetCode](https://leetcode.com/) : A new way to learn.here you can prepare for your interview.\n- [Mission-peace/interview problems](https://github.com/mission-peace/interview/wiki) : A large collection of coding interview problems\n- [Pramp | A free on demand interview practice platform for Software Engineers](https://www.pramp.com/ref/gt1) : Practice coding interviews with real peers\n- [Problems | LeetCode OJ](https://leetcode.com/problemset/algorithms/) : Coding practice for interviews\n- [Programmer And Software Interview Questions Answers](http://www.programmerinterview.com)\n- [Reddit.com/user/ashish2199/m/puzzles](https://www.reddit.com/user/ashish2199/m/puzzles/) : Logic Puzzles\n- [SQL interview questions](https://www.jitbit.com/news/181-jitbits-sql-interview-questions/) : great SQL test\n- [SQL Joins explained using venn diagram](http://stevestedman.com/wp-content/uploads/VennDiagram1.pdf)\n- [svozniuk/java-interviews](https://github.com/svozniuk/java-interviews) : Java interview questions\n- [The 25 most difficult HR questions](http://www.datsi.fi.upm.es/~frosal/docs/25mdq.html)\n- [Top 10 Algorithms for Coding Interview](https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/) : Algorithms for Coding Interview\n- [Unix / Linux Cheat Sheet](http://cheatsheetworld.com/programming/unix-linux-cheat-sheet/)\n- [Unsolicited_advice_for_job_seekers_and_employers](https://www.reddit.com/r/india/comments/1clgdj/unsolicited_advice_for_job_seekers_and_employers/)\n- [Visualising Data Structures and Algorithms through Animation](https://visualgo.net/en)\n- [We Help Coders Get Hired](https://www.hiredintech.com/app) : website offering courses on system design, interview strategies, soft skills etc\n- [what_are_your_goto_questions_for_the_do_you_have?](https://www.reddit.com/r/cscareerquestions/comments/209rkq/what_are_your_goto_questions_for_the_do_you_have/)\n- [Why You Make Less Money \u2022 /r/cscareerquestions](https://www.reddit.com/r/cscareerquestions/comments/1b8wa3/why_you_make_less_money/)\n- [wu :: riddles(hard)](https://www.ocf.berkeley.edu/~wwu/riddles/hard.shtml) : logic puzzles and riddles\n\n\n## Documentaries\n- [Breaking the Code](https://ia801908.us.archive.org/27/items/youtube-S23yie-779k/) : Biography of Alan Turing\n- [Cracking The Code Interview](https://www.youtube.com/watch?v=4NIb9l3imAo) : Cracking the Code Interview\n- [Cracking the Coding Interview](https://www.youtube.com/watch?v=Eg5-tdAwclo) : Cracking the Coding Interview, Fullstack Speaker Series\n- [Download: The True Story of the Internet](https://www.youtube.com/playlist?list=PL_IlIlrxhtPMqW4b0-v8OgLvFZQes6SoZ) : Play-list of discovery channel documentary on browser wars, dot com bubble and more.\n- [Harvard CS50 - Asymptotic Notation (video)](https://www.youtube.com/watch?v=iOq5kSKqeR4) : Asymptotic Notation explained by Harvard\n- [How does CPU execute program (video)](https://www.youtube.com/watch?v=42KTvGYQYnA) : Take a look at how a CPU executes programs\n- [Machine Code Instructions (video)](https://www.youtube.com/watch?v=Mv2XQgpbTNE) : Code instructions\n- Machine that Changed the World - a very good documentary about history of computers\n  - Part 1 is unavailable for free streaming due to widespread copyright claims.\n  - [Part 2: Inventing the Future](https://www.youtube.com/watch?v=0iPiYxjsYKk)\n  - [Part 3: The Paperback Computer](https://www.youtube.com/watch?v=d7DKVfOXr54)\n  - [Part 4: The Thinking Machine](https://www.youtube.com/watch?v=enWWlx7-t0k)\n  - [Part 5: The World at Your Fingertips](https://www.youtube.com/watch?v=fLLXiP7diEo)\n- [Mechanical Computer (All Parts)](https://www.youtube.com/watch?v=s1i-dnAH9Y4) : a very good video from 1950s explaining how mechanical computers used to work without all the modern day electronics.\n- [Project Code Rush](https://www.youtube.com/watch?v=a-49a_CjH0M) : The Beginnings of Netscape / Mozilla Documentary\n- [Revolution OS Linux Documentary](https://www.youtube.com/watch?v=4vW62KqKJ5A) : a film that traces the history of GNU, Linux, open source, and the free software movement.\n- [Teach Yourself Computer Science](https://teachyourselfcs.com) : Teach Yourself Computer Science\n- [The Code](https://www.youtube.com/watch?v=XMm0HsmOTFI) : Story of Linux documentary\n- [Triumph of the Nerds](https://www.youtube.com/playlist?list=PLn-Y3vvQbmHO5WUcBdIWqiUfNawhC1cn3) : Play-list\n- [The Internet's Own Boy](https://www.youtube.com/watch?v=9vz06QO3UkQ) : The Story of Aaron Swartz\n\n\n## MOOCs for learning something new\n- [Class Central](https://www.class-central.com) : a directory of 100,000+ student reviews of thousands of MOOCs.\n- [Classpert](https://classpert.com) : a website that gathers MOOCs and online courses from several providers, focusing on computer science and data science courses.\n- [Computer Science Resources](https://docs.google.com/spreadsheets/d/1BD8BJJUNaX63m2QmySWMGDp71nx4W4MyyiIBlfMoN3Q/htmlview?sle=true#) : list of MOOCs for autodidacts\n- [Coursera.org](https://www.coursera.org) : Take the world's best courses, online.\n- [CS50](https://www.youtube.com/user/cs50tv/videos) : A set of goods tutorials from cs50\n- [edX](https://www.edx.org) : Free Online Courses, Advance Your Career, Improve Your Life.\n- [Kadenze | Creative Programming](https://www.kadenze.com/courses?subjects%5B%5D=7) : Programming courses focused on art and creativity\n- [MIT OCW Electrical Engineering and Computer Science](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/)\n- [MOOC.fi](http://mooc.fi/english.html) : Free online courses from the University of Helsinki\n- [NPTEL](http://nptel.ac.in) : Free online courses by IIT with certificates\n- [prakhar1989/awesome-CS-courses](https://github.com/prakhar1989/awesome-courses/blob/master/README.md) : List containing large amount of CS courses\n\n\n## Sites related to your preferred programming language (For me C++)\n- [Best books for learning java must read](https://javahungry.blogspot.com/2014/02/best-books-for-learning-java-must-read.html) : Get basics of Java\n- [Bjarne Stroustrup's C++ Style and Technique FAQ](http://www.stroustrup.com/bs_faq2.html) : The C++ FAQ\n- [Bjarne Stroustrup's FAQ](http://www.stroustrup.com/bs_faq.html) : The C++ FAQ\n- [C++11 - the new ISO C++ standard](http://www.stroustrup.com/C++11FAQ.html) : The C++11 FAQ\n- [Compilers (video)](https://www.youtube.com/playlist?list=PLO9y7hOkmmSGTy5z6HZ-W4k2y8WXF7Bff) : A set of videos on how the GC works\n- [Deep Dive Java](https://www.infoq.com/presentations/garbage-collection-benefits) : Garbage Collection is Good!\n- [Free Online Chapters of Inside the Java Virtual Machine by Bill Venners](http://www.artima.com/insidejvm/ed2/index.html) : Java Corner\n- [How Garbage Collection Works](https://www.dynatrace.com/resources/ebooks/javabook/how-garbage-collection-works/) : Java memory management\n- [Implementation of Algorithms and Data Structures, Interview Questions and Answers](https://github.com/sherxon/AlgoDS)\n- [IntelliJ Keyboard Shortcuts](https://www.jetbrains.com/help/idea/keyboard-shortcuts-you-cannot-miss.html) : Keyboard shortcuts to enhance your productivity when working in IntelliJ.\n- [Java Corner at Artima.com](http://www.artima.com/java/index.html) : Java Corner at Artima.com\n- [Java Lecture Notes](http://www.cafeaulait.org/course/) : Java Student's Resource\n- [Java Off Heap](http://www.javaoffheap.com) : Java Off the Heap house\n- [Java Revisited](http://javarevisited.blogspot.com) : good for learning about Java Language and interview preparation.\n- [Java-source](http://www.java-source.net) : Java source\n- [Java Visualizer](http://www.cs.princeton.edu/~cos126/java_visualize/) : helps visualize references, values of variables, etc\n- [JournalDev - Java, Java EE, Android, Web Development Tutorials](https://www.journaldev.com) : Java, Java EE, Android, Web Development Tutorials\n- [Learning Java](http://chimera.labs.oreilly.com/books/1234000001805/index.html) : a free online textbook for learning Java\n- [Netbeans Keyboard Shortcuts](https://netbeans.org/project_downloads/usersguide/shortcuts-80.pdf) : Keyboard shortcuts to enhance your productivity when working in Netbeans.\n- [Search Open Source Java API](http://www.docjar.com) : view source of java library and learn how things are implemented.\n- [The C++ Programming Language](http://www.stroustrup.com/C++.html) : The C++ Programming Language.\n- [The Java Memory Model](http://www.cs.umd.edu/~pugh/java/memoryModel/): The Java Memory Model\n- [The Java\u2122 Tutorials](https://docs.oracle.com/javase/tutorial/) : The best tutorials for Java.\n- [Understanding JVM Internals](http://www.cubrid.org/blog/understanding-jvm-internals) : Understanding JVM Internals\n- [what-is-garbage-collection](https://plumbr.eu/handbook/what-is-garbage-collection) : Demystify the garbage collection\n- [JavaWorld](https://www.javaworld.com) : Welcome to Javaworld\n- [XyzWs Java FAQs](http://www.xyzws.com/javafaq/page/1) : large collection of java interview questions\n- [JavatPoint](https://www.javatpoint.com/java-tutorial) : Best website to get a basic Java programming tutorial\n\n\n## Learn AI\n- [aima](http://aima.cs.berkeley.edu) : The leading textbook in Artificial Intelligence (4th most cited publication of the century). Includes Github repositories and more AI resources!\n- [fast.ai](http://course.fast.ai) : Free practical *deep learning* course for coders without grad-level maths!\n- [grakn.ai](https://grakn.ai) : The Database for AI\n- [Robots that learn](https://blog.openai.com/robots-that-learn/) : Robots that Learn\n- [Unsupervised Sentiment Neuron](https://blog.openai.com/unsupervised-sentiment-neuron/) : Unsupervised Sentiment Neuron\n- [What's the difference between AI- DP and ML?](https://blogs.nvidia.com/blog/2016/07/29/whats-difference-artificial-intelligence-machine-learning-deep-learning-ai/) : Difference artificial intelligence, machine-learning, deep-learning-ai\n- [TensorFlow](https://www.tensorflow.org) : An open-source software library for Machine Intelligence\n- [Scikit-learn](http://scikit-learn.org) : A Python module for machine learning build on top of SciPy\n- [DeepLearning.ai](https://www.deeplearning.ai) : Deep Learning course by Andrew Ng, Founder of coursera\n- [Coding the History of Deep Learning](http://blog.floydhub.com/coding-the-history-of-deep-learning/) : Coding the History of Deep Learning\n- [Serpent AI](https://github.com/SerpentAI/SerpentAI) : Game Agent Framework. Helping you create AIs / Bots to play any game you own! BETA\n- [Blog Floydhub](https://blog.floydhub.com/colorizing-b&w-photos-with-neural-networks/) : Colorizing B&W Photos with Neural Networks\n- [MLCOURSE.AI](https://mlcourse.ai/) : Open Machine Learning course by OpenDataScience\n\n\n## Seminar , research writing , talks etc\n- [Advice on Research and Writing](http://www.cs.cmu.edu/~mleone/how-to.html) : A collection of advice about how to do research and how to communicate effectively (primarily for computer scientists).\n- [PHD MS Articles](http://www.cse.iitd.ac.in/~srsarangi/articles.html) : articles and views\n- [Seminar and reports](https://www.cse.iitb.ac.in/~ranade/communicationskills.html) : Everyone must read this tiny book before writing the seminar report\n- [Latex reference](http://latex.knobs-dials.com) : Arbitrary reference\n- [Begin Latex in minutes](https://github.com/LewisVo/Begin-Latex-in-minutes) : Brief Intro to LaTeX for beginners that helps you use LaTeX with ease\n- [Lshort](https://tobi.oetiker.ch/lshort/lshort.pdf) : The Not So Short Introduction to LATEX2\u03b5\n\n\n## Everything in one place\n- [reddit.com/user/ashish2199/m/cs_student_subs](https://www.reddit.com/user/ashish2199/m/cs_student_subs/) : a multisubreddit of all subreddits of topics related to computer science and programming.\n- [Websites a programmer should visit](https://www.quora.com/What-are-the-best-websites-a-programmer-should-visit/answer/Ashish-Padalkar?srid=OH96) : Response on Quora by ashish2199\n- [Rico's cheatsheets](https://devhints.io) : A set of good cheatsheets\n- [API Documentation](http://devdocs.io) : A one-place well known API Documentation with searchable interface\n- [MDN](https://developer.mozilla.org/en-US/) : A place with all the documentation of the web standards\n- [cheat.sh](https://github.com/chubin/cheat.sh) : `curl cheat.sh` \u2014 the only cheat sheet you need \u2014 instant answers on programming questions with `curl`\n\n\n## YouTube Channels\n- [C++Now (BoostCon)](https://www.youtube.com/channel/UC5e__RG9K3cHrPotPABnrwg) : C++Now (previously BoostCon) conference\n- [code::dive conference](https://www.youtube.com/channel/UCU0Rt8VHO5-YNQXwIjkf-1g) : code::dive conference organized by NOKIA Wroc\u0142aw Technology Center\n- [Coding Blocks](https://www.youtube.com/user/codingblocks) : Tutorials, how to's, tips and tricks\n- [Computerphile](https://www.youtube.com/user/Computerphile/videos) : Must watch for every CS student\n- [ComputerHistory](https://www.youtube.com/user/ComputerHistory/videos) : for those who like to know how we reached where we are.\n- [CppCon](https://www.youtube.com/user/CppCon/videos?shelf_id=0&view=0&sort=dd) : C++ Conference\n- [Facebook Developers](https://www.youtube.com/user/FacebookDevelopers/videos)\n- [Google Developers](https://www.youtube.com/user/GoogleDevelopers/videos)\n- [GoogleTechTalks](https://www.youtube.com/user/GoogleTechTalks/videos) : videos on trending topics and cool stuff happening in the tech industry.\n- [Gynvael Coldwin](https://www.youtube.com/user/GynvaelEN) : Awesome reverse engineering and hacking(CTF) videocasts. Every wednesday are new live streams.\n- [HowToBecomeTV](https://www.youtube.com/user/HowToBecomeTV/videos) : contains good interviews of developers and people related to tech industry.\n- [Java](https://www.youtube.com/user/java/videos) : talks related to java\n- [JavaOne](https://www.youtube.com/channel/UCdDhYMT2USoLdh4SZIsu_1g/videos) : Java Conference\n- [javidx9](https://www.youtube.com/channel/UC-yuWVUplUJZvieEligKBkA/videos) : Game and graphics tutorials\n- [Meeting C++ YT Kanalseite](https://www.youtube.com/user/MeetingCPP/videos) : Talks on C++\n- [MIT OpenCourseWare](https://www.youtube.com/user/MIT/) : MIT OpenCourseWare for learning in depth algorithms, data structures and computer engineering\n- [Netflix UI Engineering](https://www.youtube.com/channel/UCGGRRqAjPm6sL3-WGBDnKJA/videos) : great videos to watch for web developers, mobile developers and those interested in some of Netflix's tech stack\n- [O'Reilly](https://www.youtube.com/user/OreillyMedia/videos) : interviews and talks of world's best technical writers.\n- [Placement Grid](https://www.youtube.com/user/PlacementGrid/videos) : Interview and campus placement experience\n- [Scott Meyers: Past Talks](http://www.aristeia.com/presentations.html)\n- [Siraj Raval](https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A) : Artificial Intelligence and deep learning tutorials videos\n- [ThinMatrix](https://www.youtube.com/user/ThinMatrix/videos) : blogs and tutorials developer making a 3d game in Java using opengl\n- [thoughtbot](https://www.youtube.com/user/ThoughtbotVideo/videos) : talks on various topics\n- [Traversy Media](https://www.youtube.com/user/TechGuyWeb/videos) :Web development and programming\n- [yegor256](https://www.youtube.com/user/technoparkcorp/videos)\n- [GOTO Conference](https://www.youtube.com/user/GotoConferences) : tech talks from the GOTO Conference by Developers for Developers\n- [freeCodeCamp](https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ) : freecodecamp youtube channel\n- [Bo Qian](https://www.youtube.com/channel/UCEOGtxYTB6vo6MQ-WQ9W_nQ) : Learn advanced c++\n- [Geeksforgeeks](https://www.youtube.com/channel/UC0RhatS1pyxInC00YKjjBqQ/videos) : geeksforgeeks youtube\n- [Hacker earth](https://www.youtube.com/channel/UCYU6nvKyRYnE5kiG9JXkXpA) : Hacker earth youtube\n- [Hak5](https://www.youtube.com/user/Hak5Darren) : Put together by a band of IT ninjas, security professionals and hardcore gamers, Hak5 isn't your typical tech show. We take on hacking in the old-school sense.\n- [Khan Academy](https://www.youtube.com/channel/UC4a-Gbdw7vOaccHmFo40b9g) : Khan Academy youtube\n- [LearnCode.academy](https://www.youtube.com/channel/UCVTlvUkGslCV_h-nSAId8Sw) : 100% FREE Web Development tutorials, web site design tutorials and more. Including, but not limited to: HTML, CSS, JavaScript, CSS Layouts, Responsive Design, React.js, Node.js, Angular.js, Docker, Dev\n- [Rachit Jain](https://www.youtube.com/channel/UC9fDC_eBh9e_bogw87DbGKQ/featured) : competetive programming\n- [sentdex](https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ) : Python Programming tutorials, going further than just the basics. Learn about machine learning, finance, data analysis, robotics, web development, game development and more.\n- [Steve Griffith](https://www.youtube.com/channel/UCTBGXCJHORQjivtgtMsmkAQ) : The videos on this channel are largely about web design & development with a good dose of mobile development thrown in just for fun. \n- [The Coding Train](https://www.youtube.com/channel/UCvjgXvBlbQiydffZU7m1_aw) : In this YouTube channel I publish \"creative coding\" video tutorials every week. Subjects covered range from the basics of programming languages like JavaScript (with p5.js) and Java (with Processing) to generative algorithms like physics simulation, computer vision, and data visualization.\n- [TheHappieCat](https://www.youtube.com/channel/UCBsuOBu-dxj5bx1KMgmar5g) : Videos on technology, storytelling, and being happie.\n- [Tutorials Point (India) Pvt. Ltd.](https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg) : Tutorials Point originated from the idea that there exists a class of readers who respond better to online content and prefer to learn new skills at their own pace from the comforts of their drawing rooms. We bring simple to understand Text and Video tutorials at zero cost and cover many subjects including IT, Engineering, MBA, MCA, Management, Various Exams Preparation and Academic subjects. If you are really not extravagant and willing to save your money and time then we recommend you to try our tutorials.experience\n- [Udacity](https://www.youtube.com/channel/UCBVCi5JbYmfG3q5MEuoWdOw) : Udacity, a pioneer in online education, is building \"University by Silicon Valley\", a new type of online university\n- [V. Anton Spraul](https://www.youtube.com/channel/UCLEMTlEe5RE04EoULMHWEEQ) : Videos for people who want to understand software better, including explanations of how software performs some of its most important jobs and tools programmers can use to to solve programming problems.\n- [xdadevelopers](https://www.youtube.com/channel/UCk1SpWNzOs4MYmr0uICEntg) : You have found the world-famous XDA-Developers.com YouTube Channel, known as XDA TV. We cover Android and Windows Mobile from HTC, Samsung, Motorola, Sony, and more. Learn about rooting your Android, how to build applications, and more.\n- [KudVenkat](https://www.youtube.com/user/kudvenkat/) : Microsoft .NET technologies and SQL Server tutorials.\n- [The Net Ninja](https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg): Web development tutorials\n\n\n## Good Articles\n- [40 Keys Computer Science Concepts Explained In Layman\u2019s Terms](http://carlcheo.com/compsci)\n- [A Gentle Introduction To Graph Theory](https://dev.to/vaidehijoshi/a-gentle-introduction-to-graph-theory)\n- [A programmer friendly language that compiles to Lua.](http://moonscript.org)\n- [A Software Developer\u2019s Reading List](https://stevewedig.com/2014/02/03/software-developers-reading-list/) : Some good books and links in there.\n- [Code a TCP/IP stack](http://www.saminiir.com/lets-code-tcp-ip-stack-5-tcp-retransmission/) : Let's code a TCP/IP stack, 5: TCP Retransmission\n- [Codewords.recurse](https://codewords.recurse.com/issues/four/the-language-of-choice) : The language of choice\n- [Data structure and Algorithms](https://techiedelight.quora.com/500-Data-Structures-and-Algorithms-practice-problems-and-their-solutions) : List of some algorithms and datastructure with their solutions.\n- [Dive into the byte code](https://www.wikiwand.com/en/Java_bytecode)\n- [Expectations of a Junior Developer](http://blog.thefirehoseproject.com/posts/expectations-of-a-junior-developer/)\n- [Linux Inside](https://0xax.gitbooks.io/linux-insides/content/Booting/linux-bootstrap-1.html)\n- [List of algorithms](https://www.wikiwand.com/en/List_of_algorithms)\n- [Step by Step Guide to Database Normalization](https://www.databasestar.com/normalization-in-dbms/): A guide to database normalization.\n- [The Key To Accelerating Your Coding Skills](http://blog.thefirehoseproject.com/posts/learn-to-code-and-be-self-reliant/)\n- [Unicode](https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/)\n- [We are reinventing the retail industry through innovative technology](http://multithreaded.stitchfix.com)\n- [What every programmer absolutely, positively needs to know about encodings and character sets to work with text](http://kunststube.net/encoding/)\n- [What every programmer should know about memory - PDF](http://futuretech.blinkenlights.nl/misc/cpumemory.pdf)\n- [Why fast pages are important](https://fly.io/articles/why-fast-pages-are-important/) : Why App Speed Matters, Revenue\n- [qotoqot - improving-focus](https://qotoqot.com/blog/improving-focus/) : How I got to 200 productive hours a month\n- [Pixel Beat - Unix](http://www.pixelbeat.org/docs/unix-parallel-tools.html) : Parallel processing with unix tools\n- [Learning Vim](https://hackernoon.com/learning-vim-what-i-wish-i-knew-b5dca186bef7) : What I Wish I Knew\n- [Write a Kernel](http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel) : Kernel 101 \u2013 Let\u2019s write a Kernel\n- [Learning JavaScript Design Patterns](https://addyosmani.com/resources/essentialjsdesignpatterns/book/) : online version of the Learning JavaScript Design Patterns published by O'Reilly, released by the author Addy Osmani under CC BY-NC-ND 3.0\n- [Working with Webhooks](https://requestbin.com/blog/working-with-webhooks/) : a comprehensive guide on webhooks\n\n## Podcasts\n- [Coding Blocks](http://www.codingblocks.net) : A podcast covering topics such as best programming practices, design patterns, coding for performance, object oriented coding, database design and implementation, tips, tricks and a whole lot of other things.\n- [Developer On Fire](http://developeronfire.com/episodes) : A podcast that shares the humanity of developers and tells stories of some of the amazing people in software, hosted by Dave Rael.\n- [Developer Tea](https://spec.fm/podcasts/developer-tea) : A podcast for developers designed to fit inside your tea break.\n- [Front End Happy Hour](http://frontendhappyhour.com) : A podcast featuring a panel of Software Engineers from Netflix, Evernote, Atlassian & LinkedIn talking over drinks about all things Front End development.\n- [Full Stack Radio](http://www.fullstackradio.com) : Everything from product design and user experience to unit testing and system administration.\n- [Groovy Podcast](http://groovypodcast.podbean.com) : A podcast dedicated to the Groovy programming language and its ecosystem.\n- [IPhreaks](https://devchat.tv/iphreaks) : A weekly group discussion about iOS development and related technology by development veterans. We discuss Apple, tools, practices, and code.\n- [JavaScript Jabber](https://devchat.tv/js-jabber) : A weekly discussion about JavaScript, front-end development, community, careers, and frameworks.\n- [Learn To Code With Me Podcast](https://learntocodewith.me/podcast/) : A Season by season of tech podcast episodes by Laurence Bradford with topics ranging from Career in Tech to lessons in doing tech business\n- [MS Dev Show](http://msdevshow.com) : Jason Young and Carl Schweitzer talk about the latest in developer news covering topics such as the Azure cloud, Windows, Windows Phone, Visual Studio, and cross-platform development using the Microsoft platform.\n- [React Native Radio](https://devchat.tv/react-native-radio) : A weekly discussion of the tools, techniques, and technologies used to build mobile applications with JavaScript and React.\n- [Soft Skills Engineering](https://softskills.audio/) : A weekly advice podcast for software developers about non-technical topics.\n- [Software Engineering Daily](https://softwareengineeringdaily.com) : A daily technical interview about software topics.\n- [Software Engineering Radio](http://www.se-radio.net) : A podcast targeted at the professional software developer. The goal is to be a lasting educational resource, not a newscast.\n- [Syntax](https://syntax.fm) : A Tasty Treats Podcast for Web Developers by Wes Bos & Scott Tolinski.\n- [The Bike Shed](http://bikeshed.fm) : Guests discuss their development experience and challenges with Ruby, Rails, JavaScript, and others.\n- [The Changelog](https://changelog.com/podcast) : A weekly conversation that gets to the heart of open source technologies and the people who create them.\n- [The Cynical Developer](https://cynicaldeveloper.com) : A podcast that aims to help you to improve your development knowledge and career, through explaining the latest and greatest in development technology and providing you with what you need to succeed as a developer. Covering Desktop, web and mobile development, mainly around the .Net Stack but often looking into other software and frameworks.\n- [Blockchain Insider by 11:FS](blockchain.global/blockchain-innovation) : Podcast to learn about the Blockchain Technology\n- [Unchained](unchainedpodcast.co) Podcast to learn about the Blockchain Technology\n- [Talk python to me](https://talkpython.fm/) Podcast to learn about Python through interviews and discussions \n- [Python bytes](https://pythonbytes.fm) Podcast to learn about the latest happenings and trends in Python\n\n\n## Building a Simple Compiler/Interpreter\n- [:snowman: Possibly the smallest compiler ever](https://github.com/thejameskyle/the-super-tiny-compiler) : This is an ultra-simplified example of all the major pieces of a modern compiler written in easy to read JavaScript.\n- [Awesome Compilers](http://aalhour.com/awesome-compilers/) : Curated list of awesome resources on Compilers, Interpreters and Runtimes.\n- [Growing a compiler](http://www.cs.dartmouth.edu/~mckeeman/cs48/mxcom/gem/html/GrowingCompiler.html) : Learn how to grow a compiler\n- [Let\u2019s Build A Simple Interpreter. Part 1.](https://ruslanspivak.com/lsbasi-part1/) : Try to demystify compilers by building one\n- [Resources for Amateur Compiler Writers](http://c9x.me/compile/bib/) : Resources for Amateur Compiler Writers\n- [Structure and Interpretation of Computer Programs](https://sarabander.github.io/sicp/html/index.xhtml) : Structure and Interpretation of Computer Programs\n- [Writing My First Compiler](https://dev.to/fcpauldiaz/writing-my-first-compiler) : Write out your first compiler\n- [An Intro to Compilers](https://nicoleorchard.com/blog/compilers) : How to Speak to Computers, Pre-Siri\n- [Write your own compiler](http://staff.polito.it/silvano.rivoira/HowToWriteYourOwnCompiler.htm) : How to write your own compiler\n- [Crafting Interpreters](http://craftinginterpreters.com/) A handbook for writing interpreters, first implementing a tree walking interpreter and later a bytecode virtual machine\n\n\n\n## Tutorials\n- [A Hacker's Guide to Git](https://wildlyinaccurate.com/a-hackers-guide-to-git/) : for those wanting to learn git with a solid foundation\n- [Best Of - Gustavo Duarte](http://duartes.org/gustavo/blog/best-of/) : contains articles on various topics\n- [CMSI 281: Data Structures](http://cs.lmu.edu/~ray/classes/dsa/) : light weight introduction to DS\n- [Collecting all the cheat sheets](http://overapi.com) : cheat sheets for lots of programming languages\n- [C Programming](http://users.cs.cf.ac.uk/Dave.Marshall/C/CE.html)\n- [Programming Community Curated C++ Resources](https://hackr.io/tutorials/learn-c-plus-plus) : resources recommended by developers\n- [Deep C](https://www.slideshare.net/olvemaudal/deep-c) : very good presentation on C language\n- [Design Patterns: Elements of Reusable Object-Oriented Software](https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612) : aka the \"Gang Of Four\" book, or GOF\n- [Dynamic programming - PrismoSkills](http://prismoskills.appspot.com/lessons/Dynamic_Programming/Chapter_01_-_Introduction.jsp) : very good resource if want to learn how to solve DP problems.\n- [Git from the inside out](https://maryrosecook.com/blog/post/git-from-the-inside-out)\n- [Head First Design Patterns](https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124)\n- [How to Program in C++](http://cs.fit.edu/~mmahoney/cse2050/how2cpp.html) : Good resource for revising C++ topics and STL\n- [http://www.mysqltutorial.org/](http://www.mysqltutorial.org)\n- [indradhanush tutotials](https://indradhanush.github.io/blog/writing-a-unix-shell-part-3/) : Writing a Unix Shell\n- [Introduction to C Programming](http://www.le.ac.uk/users/rjm1/cotter/index.htm)\n- [Learn UNIX in 10 minutes](http://freeengineer.org/learnUNIXin10minutes.html)\n- [Learning the shell.](http://linuxcommand.org)\n- [Linux Journey](https://linuxjourney.com) : good site for learning linux\n- [Linux Tutorial](https://ryanstutorials.net/linuxtutorial/) : good resource for learning Linux\n- [More about Github-flavored markdown](https://guides.github.com/features/mastering-markdown/)\n- [MySQL Essentials](http://www.techotopia.com/index.php/MySQL_Essentials)\n- [Open Data Structures](http://opendatastructures.org) : Excellent resource for learning about DS and algos, provides code in various languages C++, Java and pseudocode.\n- [OS Course Notes](https://www2.cs.uic.edu/~jbell/CourseNotes/OperatingSystems/) : Chapter wise course notes according to Galvin's book\n- [Programming, Web Development, and DevOps news, tutorials and tools for beginners to experts](https://dzone.com)\n- [SQL (Structured Query Language) in one page : SQL.SU](http://www.cheat-sheets.org/sites/sql.su/) : a very good SQL cheat sheet\n- [Subtle | Poor Man's CI](https://www.subtle.press/course/poor-mans-ci) : Learn how continuous integration platforms work under the hood, by building one of your own on top of git with Node.js\n- [TCP/IP Illustrated Series](https://en.wikipedia.org/wiki/TCP/IP_Illustrated)\n- [The Bash Guide](http://guide.bash.academy) : very good guide for learning the Bash Shell\n- [The Descent to C](https://www.chiark.greenend.org.uk/~sgtatham/cdescent/) : for those moving to C from some higher programming language like java or python.\n- [The Linux Command Line: A Complete Introduction](https://www.amazon.com/Linux-Command-Line-Complete-Introduction/dp/1593273894)\n- [The Unix Programming Environment](http://product.half.ebay.com/The-UNIX-Programming-Environment-by-Brian-W-Kernighan-and-Rob-Pike-1983-Other/54385&tg=info)\n- [TopCoder Tutorials](https://www.topcoder.com/community/data-science/data-science-tutorials/)\n- [Tutorialspoint](https://www.tutorialspoint.com) : Text and Video Tutorials for UPSC, IAS, PCS, Civil Services, Banking, Aptitude, Questions, Answers, Explanation, Interview, Entrance, Exams, Solutions\n- [UNIX and Linux System Administration Handbook, 4th Edition](https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0131480057)\n- [VimTutor+](https://vimtutorplus.herokuapp.com/exercise/1) : Learn VIM from the browser.\n- [W3Schools Online Web Tutorials](https://www.w3schools.com)\n- [Unix Shell](https://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml) : Unix shell scripting with ksh/bash\n- [Snap SVG](http://snapsvg.io) : The JavaScript SVG library for the modern web\n- [vim.rtorr](https://vim.rtorr.com) : Vim Cheat Sheet\n- [Open Vim](http://www.openvim.com/tutorial.html) :  Interactive Vim tutorials\n- [Algorithm Using Dynamic Programming and A](http://thume.ca/2017/06/17/tree-diffing/) : Designing a Tree Diff Algorithm Using Dynamic Programming and A*\n- [Learn Python](https://www.learnpython.org) : Free Interactive Python Tutorial\n- [C++17](https://www.viva64.com/en/b/0533/) : A guide of C++17\n- [The Bash Academy](http://www.bash.academy) : The Bash Academy is an initiative to promote the bash shell language and educate people on its use.\n- [Learn Shell Programming](http://learnshell.org) : This website is intended for everyone who wishes to learn programming with Unix/Linux shell interpreters.\n- [Java tutorial](https://hackr.io/tutorials/learn-java) : A programming community & a great place to find the best online programming courses and tutorials.\n- [Explain Shell](https://explainshell.com/): Match command-line arguments to their help text\n- [Speaking io](https://speaking.io/) : Tips for public speaking\n\n## Watch others code\n- [Education Ecosystem](https://www.education-ecosystem.com) : screencast of people building application, websites, games, etc.\n- [Twitch.tv](https://www.twitch.tv/directory/game/Science%20%26%20Technology) : The programming community of twitch.\n\n\n## What should a programmer know\n- [GitHub.com Build software better, together](https://github.com) : Place to showcase your project and collaborate with others. (Must know Git in order to use it effectively)\n- [Gitlab offers free unlimited (private) repositories and unlimited collaborators](https://about.gitlab.com)\n- [Programmer Competency Matrix](http://sijinjoseph.com/programmer-competency-matrix/) : article for knowing what our level as a programmer is.\n\n\n## Competitive programming\n- [Topic Wise Problem For Competitive Programmer](https://a2oj.com/categories) : Topic wise Practise Problem\n- [Archived Problems - Project Euler](https://projecteuler.net/archives) : Problems Archives\n- [Art of Problem Solving](https://artofproblemsolving.com) : Is math class too easy for you? You've come to the right place!\n- [CodeChef](https://www.codechef.com) : The only programming contests Web 2.0 platform\n- [Codefights](https://codefights.com) : Test your coding skills\n- [Codeforces](http://codeforces.com) : Programming Competition,Programming Contest,Online Computer Programming\n- [Codewars](https://www.codewars.com) : Rank up by completing code kata\n- [Codility](https://codility.com) : Verify and improve coding skills\n- [Codingame](https://www.codingame.com/start) : Learn coding through games and challenges!\n- [Facebook Hacker Cup](https://www.facebook.com/hackercup/) : Facebook's Programming Contest, past problems solutions and FAQ\n- [Google Code Jam Practice and](https://code.google.com/codejam/past-contests) : past contest problems for practice\n- [HackerEarth - Programming challenges and Developer jobs](https://www.hackerearth.com)\n- [HackerRank](https://www.hackerrank.com) : Practice coding. Compete. Find jobs.\n- [PKU ACM ICPC Practice problems](http://poj.org/problemlist) : Judge online for ACMACPC\n- [Sphere Online Judge (SPOJ)](http://www.spoj.com) : Become a true programming master Learn how to code and build efficient algorithms\n- [Topcoder](https://www.topcoder.com) : Deliver Faster through Crowdsourcing\n- [URI Online Judge](https://www.urionlinejudge.com.br/judge/en/register) : Practice coding, Compete and be a better coder.\n- [UVa Online Judge](https://uva.onlinejudge.org) : hundreds of problems supporting multiple languages.\n- [WakaTime](https://wakatime.com) : leaderboards of coding metrics collected via editor plugins\n\n\n## Computer Books\n- [Become a Programmer, Motherfucker (list of books)](http://programming-motherfucker.com/become.html) : Exhaustive list of books from Zed A. Shaw.\n- [Best books for GATE CSE](http://gatecse.in/best-books-for-gatecse/)\n- [cses.fi/book.html](https://cses.fi/book.html)\n- [github.com/vhf/free-programming-books](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md) : More than 500 free ebooks on almost any language you can think of\n- [GitBook](https://www.gitbook.com) : GitBook helps your team write, collaborate and publish content online.\n- [Data Science course](https://jakevdp.github.io/PythonDataScienceHandbook/) : Python Data Science Handbook\n- [Goal Kicker](https://goalkicker.com) : Programming Notes for Professionals books\n- [The GraphQL Guide](https://graphql.guide) : The complete guide to GraphQL, the new REST \u2728\n\n\n## Video Tutorials\n- [codedamn](https://www.youtube.com/channel/UCJUmE61LxhbhudzUugHL2wQ/videos) : front end web dev tutorials\n- [Code School](https://www.codeschool.com) : A PluralSight Company and an Interactive learning destination for aspiring and experienced Developers\n- [CodingMadeEasy](https://www.youtube.com/user/CodingMadeEasy/videos) : C++ tutorials\n- [CS1: Higher Computing - Richard Buckland UNSW](https://www.youtube.com/playlist?list=PL6B940F08B9773B9F) : a very good introductory CS course\n- [Derek Banas](https://www.youtube.com/user/derekbanas/videos) : good quality tutorials\n- [Design and Analysis of Algorithms](http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=IntroToAlgorithms)\n- [DevTips](https://www.youtube.com/user/DevTipsForDesigners/videos) : web dev tutorials\n- [FreeCourses](https://freecourses.github.io) : Free courses about programming\n- [Kathryn Hodge](https://www.youtube.com/channel/UC4DwZ2VXM2KWtzHjVk9M_xg/videos) : Has good videos for beginners\n- [mycodeschool](https://www.youtube.com/user/mycodeschool/videos) : Data structures and algorithms tutorials\n- [Pluralsight](https://www.pluralsight.com) : Learn Software Development, DevOps and Data Science through multiple short courses\n- [thenewboston](https://www.youtube.com/user/thenewboston/videos) : good but with too much talk as compared to actual content\n- [Tushar Roy](https://www.youtube.com/user/tusharroy2525/videos) : Algorithm and Data structure tutorial by an Indian Youtuber.\n- [Vim Tutorial Videos - Flarfnoogins](http://derekwyatt.org/vim/tutorials/index.html) : good video tutorial for learning vim\n- [XDA-University - Helping You Learn Android Development](https://forum.xda-developers.com/general/xda-university)\n- [Khan Academy](https://www.khanacademy.org/computing/computer-science) : learn about computer science for free\n- [Functional programming](https://www.youtube.com/watch?v=1PhArSujR_A) : John Carmack on Functional Programming (2013)\n- [Video about vims](https://vimeo.com/album/2838732) : A serie of tutorials about Vim\n\n\n## Online Compiler and Sharing Code snippets\n- [CodePad](https://codepad.remoteinterview.io) : Code editor to try, test and run 25+ languages\n- [Codesandbox.io](https://codesandbox.io) : CodeSandbox makes it easier to create, share and reuse React projects with others.\n- [Godbolt.org](https://godbolt.org) : Excellent tool for exploring the assembly output of different compilers with and without optimization.\n- [Ideone.com](https://ideone.com) : online compiler and debugging tool for more than 60 programming languages\n- [JSFiddle](https://jsfiddle.net) : Test your JavaScript, CSS, HTML or CoffeeScript with online code editor\n- [JSBin](https://jsbin.com/) : Front end playground, Output is not framed, so it allow you to share those snippet that will break inside iframe.\n- [Judge0 IDE](https://ide.judge0.com) : Online compiler with 40+ interpreters and compilers.\n- [Pastebin.com](https://pastebin.com) : Pastebin can store texts like code, notes, and snippets online for a set period of time which can be shared instantly.\n- [C9.io](https://c9.io) : Your development environment, in the cloud\n- [Github Gist](https://gist.github.com) : Instantly share code, notes, and snippets.\n- [Coder](https://coder.com) : A Web-based development environment using Visual Studio Code as code editor \n\n\n## Blogs of Developers\n- [Algo-Geeks](http://algo-geeks.blogspot.com) : Programming Puzzles, Math Tricks, Algorithms etc\n- [Amit Merchant](https://www.amitmerchant.com) : Tutorials, tips & tricks and rants about programming and design.\n- [Andy Heathershaw](https://www.andyheathershaw.uk) : Personal website and blog of software developer Andy Heathershaw\n- [Antonio081014's Algorithms Codes](http://code.antonio081014.com) : The world is under the RULE.  \n- [Archives \u2014 Ask a Manager](http://www.askamanager.org/archives) : HR related stuff\n- [Armin Ronacher's Thoughts and Writings](http://lucumr.pocoo.org) : blog on Python and open source\n- [blog.might.net](http://matt.might.net/articles/) : the blog of might dot net\n- [Brendon Gregg - Linux Kernel Dev](http://www.brendangregg.com) : the blog of Brendon D. Gregg\n- [Clean Coder Blog](http://blog.cleancoder.com) : blog of author of book \"Clean Code\"\n- [CodeAhoy](https://codeahoy.com) : Blog on software and human factors. 100% Tested on Humans.\n- [CoderGears Blog Insights from](http://www.codergears.com/Blog/) : the CoderGears Team\n- [Coding Geek - A blog about IT, programming and Java](http://coding-geek.com) : A blog about IT, programming and Java\n- [Coding Horror](https://blog.codinghorror.com) : one the best coding blog\n- [CSE Blog](http://www.cseblog.com) : quant, math, computer science puzzles\n- [Daedtech.com](https://www.daedtech.com) : Stories about software\n- [Dan Dreams of Coding](https://dandreamsofcoding.com)\n- [Daniel Lemire's Blog](https://lemire.me/blog/) : Daniel Lemire's blog\n- [Eli Bendersky](http://eli.thegreenplace.net) : everything from Python to LLVM\n- [Geek Land](https://avidullu.wordpress.com) : My precious collectibles\n- [HackerEarth Blog](http://blog.hackerearth.com) : The hackerearth blog\n- [IT Enthusiast](http://rodiongork.tumblr.com) : IT Enthusiast\n- [Joel on Software](https://www.joelonsoftware.com) : The blog of the CEO of StackOverflow\n- [Late Developer](https://latedev.wordpress.com) :  Random thoughts of an old C++ guy\n- [1ucasvb's laboriginal math and physics visualization](http://1ucasvb.tumblr.com) : Lucas Vieira Barbosa's lab original math and physics visualization\n- [Math \u2229 Programming](https://jeremykun.com) : Math \u2229 Programming\n- [My Tech Interviews](http://www.mytechinterviews.com) : PREPARE FOR A TECHNICAL INTERVIEW\n- [Paul Graham Essays](http://www.paulgraham.com/articles.html) : Paul Grahan Essays\n- [Programming Blog](http://www.yegor256.com) : programming blog of Yegor Bugayenko\n- [Programming in the 21st Century](http://prog21.dadgum.com) : programming in the twenty-first century\n- [rudhakar Rayavaram](http://sudhakar.online) : Sudhakar Rayavaram Blog's\n- [Runhe Tian Coding Practice](https://tianrunhe.wordpress.com) : Technical interview questions from Apple, Google, Facebook, Amazon and Microsoft\n- [Small Programming Challenges and Puzzles](https://www.nayuki.io/category/programming) : Project Nayuki\n- [stevehanov.ca](http://stevehanov.ca/blog/) : I know how to make and sell software online, and I can share my tips with you.\n- [Takipi Blog](http://blog.takipi.com) : mainly focuses on Java and JVM languages\n- [XDA - Android Developer Forum](https://forum.xda-developers.com) : Android Open Source Developers Forum\n- [The Net Ninja](https://www.thenetninja.co.uk/): Web development tutorials\n\n## For improving your English\n- [Englishclub.com/learn-english](https://www.englishclub.com/learn-english.htm)\n- [Guide to Grammar and Writing](http://grammar.ccc.commnet.edu/grammar/) : for those who want to improve their english language skills\n- [Punctuation and Capitalization Rules](http://www.grammarbook.com/english_rules.asp)\n- [Purdue University Online Writing Lab (OWL)](https://owl.english.purdue.edu)\n- [Quia - English](https://www.quia.com/shared/english/)\n\n\n## When you get bored from CS related stuff\n- [Barcroft TV](https://www.youtube.com/user/barcroftmedia/featured) : Daily short documentaries about the incredible variety of people that make up the world\n- [Big Think](https://www.youtube.com/user/bigthink/videos) : Expert driven, actionable, educational content, featuring experts ranging from Bill Clinton to Bill Nye\n- [ColdFusion](https://www.youtube.com/user/coldfustion/videos) : Past, present, and future of technology\n- [CrashCourse](https://www.youtube.com/user/crashcourse/videos) : small courses on various subjects\n- [Every Frame a Painting](https://www.youtube.com/user/everyframeapainting/videos) : High quality analysis of films and filmmaking\n- [National Geographic](https://www.youtube.com/user/NationalGeographic/videos) : High volume of high quality content from all over the world\n- [r/ProgrammerHumor](https://www.reddit.com/r/ProgrammerHumor/) : Subreddit dedicated to exactly what it sounds like\n- [Reddit the front page of the internet](https://www.reddit.com) : Where free time goes to die\n- [Ridddle](https://www.youtube.com/user/VineMontanaTV/videos) : A youtube channel about science, mainly, but not only, the universe and space.\n- [Regex Crossword](https://regexcrossword.com) : A simple crossword game where clues are regex that must be mached.\n- [SciShow](https://www.youtube.com/user/scishow/videos) : Answers to interesting questions that you've always wondered about\n- [SmarterEveryDay](https://www.youtube.com/user/destinws2/videos) : Lots of amazing scientific information about the world around us, usually captured with a high-speed camera\n- [TED](https://www.youtube.com/user/TEDtalksDirector/videos) : Great talks about technology, entertainment, and design\n- [TestTube News](https://www.youtube.com/user/TestTubeNetwork/videos) : Interesting information about news from around the world\n- [How to live for long time ?](http://www.bbc.com/future/story/20170601-the-secret-to-a-long-and-healthy-life-eat-less) : The secret of longevity\n- [Vsauce](https://www.youtube.com/user/Vsauce/videos) : The best youtube channel\n- [Ox A cuk](http://www.ox.ac.uk/research/research-in-conversation/how-live-happy-life/dr-bronwyn-tarr#) : How to live a happy life\n- [lonelyspeck](https://www.lonelyspeck.com/the-milky-way-in-los-angeles-light-pollution/) : Expose to the Right for Astrophotography in Light Pollution \u2013 Palos Verdes, Los Angeles, California\n\n## Open Source Websites\n- [Open Hatch](https://openhatch.org) : OpenHatch is a non-profit dedicated to matching prospective free software contributors with communities, tools, and education.\n- [Source Forge](https://sourceforge.net) : SourceForge hosts nearly 280,000 projects (at last count). It serves more than 2 million downloads a day and includes apps and tools in a wide variety of categories.\n- [Google Code](https://code.google.com/projecthosting) : Google offers free hosting for open source projects using the Subversion or Mercurial version control systems. It offers 2 GB of storage, integrated code review tools, a wiki, and an issue tracker. The Google Code site also provides links to Google's many publicly available APIs and other developer tools.\n- [Launch Pad](https://launchpad.net) : Maintained by Canonical, LaunchPad is particularly targeted at projects that run on Ubuntu. It provides hosting for more than 21,000 projects that use the Bazaar version control system.\n- [Google Open Source](https://opensource.google.com) : Google Open Source\n- [Red Hat Developer](https://developers.redhat.com) : The world's leading provider of open source solutions\n- [Open Source](https://opensource.com) : Open Source\n- [Google Summer of Code](https://summerofcode.withgoogle.com) : Google Summer of Code is a global program focused on bringing more student developers into open source software development. Students work with an open source organization on a 3 month programming project during their break from school.\n- [Open Source Web Design](http://www.oswd.org) : Open Source Web Design is a platform for sharing standards-compliant free web design templates. We give web publishers a voice through good design.\n- [Mozilla Winter of Security](https://wiki.mozilla.org/Security/Automation/Winter_Of_Security_2016) : The Winter of Security (MWOS) is a program organized by Mozilla's Security teams to involve students with Security projects. Students who have to perform a semester project as part of their university curriculum can apply to one of the MWOS project.\n- [Eclipse Lab](http://www.eclipse.org/org/foundation/eclipselabs/faq.php) : Eclipse Labs is a community of open source projects that build technology based on the Eclipse platform. It provides the infrastructure services typically required by open source projects, such as code repositories, bug tracking, project web sites/wiki. Eclipse Labs is hosted by Google Code Project Hosting, so it will be very familiar to developers already using Google Code Project Hosting.\n- [Bit Bucket](https://bitbucket.org) : Like GitHub, BitBucket hosts both public and private projects. On this site, open source projects and private projects with fewer than five users are free. It hosts more than 48,000 repositories, many of which are searchable on the site.\n- [Media Wiki](https://www.mediawiki.org/wiki/MediaWiki) : MediaWiki is a free software open source wiki package written in PHP, originally for use on Wikipedia. It is now also used by several other projects of the non-profit Wikimedia Foundation and by many other wikis, including this website, the home of MediaWiki.\n- [Code Curiosity](https://codecuriosity.org) : CodeCuriosity is a platform that encourages contributions to open source. Everyone is rewarded for their efforts, no matter how big or small they are.\n- [Code Triage](https://www.codetriage.com) : Help out your favorite open source projects and become a better developer while doing it.\n- [Issue Hub](http://issuehub.io) : Contribute to Open Source. Search issue labels to find the right project for you\n- [Up for Grabs](http://up-for-grabs.net) : This is a list of projects which have curated tasks specifically for new contributors. These are a great way to get started with a project, or to help share the load of working on open source projects.\n- [First Timers Only](http://www.firsttimersonly.com) : Contributing to open source for the first time can be scary and a little overwhelming. Perhaps you\u2019re a Code Newbie or maybe you\u2019ve been coding for a while but haven\u2019t found a project you felt comfortable contributing to.\n- [Your First PR](http://yourfirstpr.github.io) : Your First PR helps you get started contributing to Open Source by showcasing great starter issues on GitHub and elsewhere.\n\n## Internships\n- [Chegg](http://www.chegg.com) : It is an awesome resource for finding\n\tinternships, scholarships, tutors, etc.\n- [Internshala](https://internshala.com) : You can search internships here\n\taccording to your skill sets for your interested location. It also helps you\n\tin getting a good PPO offer from the company.\n- [Letsintern](https://www.letsintern.com) : Get a smart and challenging\n\tinternship for you from the LetsIntern.\n- [PerfectIntern](https://www.perfectintern.com): Get help finding a paid\n\tinternship, resume prep, interview prep, and more!\n\n## Jobs\n- [AngelList](https://angel.co/) : AngelList is a \n\twebsite for startups, angel investors, and job-seekers \n\tlooking to work at startups. \n- [CareerBuilder](https://hiring.careerbuilder.com) : CareerBuilder is one of\n\tthe largest job boards, providing job listings, resume posting, and career\n\tadvice and resources to job seekers.\n- [Dice](https://www.dice.com) : Dice is the leading site for tech job seekers.\n\tYou can search by company, job title, keyword, employment type, and location.\n- [Devsnap](https://devsnap.io) : Devsnap is a job aggregator for developer jobs. \n- [Glassdoor](https://www.glassdoor.co.in) : Find the job that's right for you.\n\tSearch all the open positions on the web. Get your own personalized salary estimate.\n- [IAESTE](http://iaesteunitedstates.org) : Find more and amazing international internships\n  and jobs.\n- [Indeed](https://www.indeed.com) : Find international jobs on Indeed and get\n\ta market salary for your dedication and devotion.\n- [Instahyre](https://www.instahyre.com) : Your dream job is now here. Showcase\n  yourself to a curated list of top companies. Complete privacy and no spam.\n- [Mentat](https://thementat.com) : Get your dream job 10x faster. Never apply\n\t  for a job ever again, talk directly to decision makers and hiring managers.\n- [The Muse](https://www.themuse.com) : Find everything you need to succeed from\n\tdream jobs to career advice. You can do a lot here on The Muse like exploring\n\tcompanies, browsing jobs, career advice,  discover careers,  career coaching. Try it.\n- [Paysa](https://www.paysa.com) : Paysa helps you in finding new and\n\tinteresting jobs according to your wish.\n- [SimplyHired](https://www.simplyhired.com) : Simply Hired is a free job search\n\tengine (and mobile app) that takes the hassle out of getting hired and provides\n\tyou with all the information you need to make a sound career move.\n- [SwissDev Jobs](https://swissdevjobs.ch) : Tech job board for Software Engineers that want to work in Switzerland.\n- [Undercover Recruiter](https://theundercoverrecruiter.com) : Become Recruiter,\n  Candidate or Employer. You can get your job easily here.\n- [Who is Hiring](https://whoishiring.io) : An awesome resource for searching,\n  filtering and finding new and attractive jobs according to your needs and\n  interests.\n- [ZipRecruiter](https://www.ziprecruiter.com) : The Smartest Way to Get Hired.\n- [RemoteML](https://remoteml.com/) : Remote Machine Learning jobs.\n- [Linkedin jobs](https://www.linkedin.com/jobs) : Very nice research tool for programming jobs\n\n### Special Thanks\n- Please consider a github star if you find this useful and/or consider making a contribution.\n- A special thanks to Ashish Padalkar (@ashish2199) for contributing a great amount of data and structure to the initial repository [Original Post](https://www.quora.com/How-to-Create-a-Blog-2/answer/Ashish-Padalkar?srid=OH96).\n"}, {"repo": "practicalAI/practicalAI", "language": "Jupyter Notebook", "readme_contents": "<div align=\"center\">\n<a href=\"https://practicalai.me\"><img src=\"https://raw.githubusercontent.com/practicalAI/images/master/images/logo.png\" width=\"200\" /></a>\n\nA <i><b>practical</b></i> approach to machine learning.\n\n<a class=\"ai-header-badge\" target=\"_blank\" href=\"https://github.com/practicalAI/practicalAI\">\n<img class=\"ai-header-badge-img\" src=\"https://img.shields.io/github/stars/practicalAI/practicalAI.svg?style=social&label=Star\">\n</a>\n<a class=\"ai-header-badge\" target=\"_blank\" href=\"https://www.linkedin.com/company/practicalai-me\">\n<img src=\"https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&logo=linkedin&style=social\">\n</a>\n<a class=\"ai-header-badge\" target=\"_blank\" href=\"https://twitter.com/practicalAIme\">\n<img class=\"ai-header-badge-img\" src=\"https://img.shields.io/twitter/follow/practicalAIme.svg?label=Follow&style=social\">\n</a>\n\n<sub>Created by\n<a href=\"https://goku.me\" target=\"_blank\">Goku Mohandas</a> and\n<a href=\"https://github.com/practicalAI/practicalAI/graphs/contributors\" target=\"_blank\">\ncontributors\n</a>\n</sub>\n</div>\n\n## Notebooks\n<ul>\n    <li>\n        \ud83c\udf0e \u2192 <a href=\"https://practicalai.me\">https://practicalai.me</a>\n    </li>\n    <li>\n        \ud83d\udcda Illustrative ML notebooks in <a href=\"https://tensorflow.org\">TensorFlow 2.0 + Keras</a>.\n    </li>\n    <li>\n        \u2692\ufe0f Build robust models using the functional API w/ custom components\n    </li>\n    <li>\n        \ud83d\udce6 Train using simple yet highly customizable loops to build products fast\n    </li>\n    <li>\n        If you prefer Jupyter Notebooks or want to add/fix content, check out the <a href=\"https://github.com/practicalAI/practicalAI/tree/master/notebooks\" target=\"_blank\">notebooks</a> directory.\n    </li>\n</ul>\n<!-- Basic Algorithm Notebooks -->\n<table class=\"table table-striped table-bordered table-vcenter\">\n    <thead class=\"ai-notebooks-table-header\">\n    <tr>\n        <td class=\"bg-white\" colspan=\"1\" rowspan=\"2\">\n        <h4 align=\"center\" class=\"ai-notebooks-table-title\">Basic ML</h4>\n        </td>\n    </tr>\n    <tr class=\"bg-light\">\n        <td align=\"center\"><b>Basics</b></td>\n        <td align=\"center\"><b>Machine Learning</b></td>\n        <td align=\"center\"><b>Tools</b></td>\n        <td align=\"center\"><b>Deep Learning</b></td>\n    </tr>\n    </thead>\n    <tbody class=ai-notebooks-table-content>\n    <tr>\n        <td colspan=\"1\" rowspan=\"4\" class=\"ai-notebooks-table-points ai-orange-link\">\n        <ul>\n            <li>Learn Python basics with notebooks.</li>\n            <li>Use data science libraries like <a href=\"https://www.numpy.org/\" target=\"_blank\">NumPy</a> and <a href=\"https://pandas.pydata.org/\" target=\"_blank\">Pandas</a>.</li>\n            <li>Implement basic ML models in <a href=\"https://www.tensorflow.org/overview/\" target=\"_blank\">TensorFlow 2.0 + Keras</a>.</li>\n            <li>Create deep learning models for improved performance.</li>\n        </ul>\n        </td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/00_Notebooks.ipynb\">\ud83d\udcd3 Notebooks</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/04_Linear_Regression.ipynb\">\ud83d\udcc8 Linear Regression</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/07_Data_and_Models.ipynb\">\ud83d\udd0e Data & Models</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/10_Convolutional_Neural_Networks.ipynb\">\ufe0f\ud83d\uddbc Convolutional Neural Networks</a></td>\n    </tr>\n    <tr>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/01_Python.ipynb\">\ud83d\udc0d Python</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/05_Logistic_Regression.ipynb\">\ud83d\udcca Logistic Regression</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/08_Utilities.ipynb\">\ud83d\udee0 Utilities</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/11_Embeddings.ipynb\">\ud83d\udc51 Embeddings</a></td>\n    </tr>\n    <tr>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/02_NumPy.ipynb\">\ud83d\udd22 NumPy</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/06_Multilayer_Perceptrons.ipynb\">\ufe0f\ud83c\udf9b Multilayer Perceptrons</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/09_Preprocessing.ipynb\">\ufe0f\u2702\ufe0f Preprocessing</a></td>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/12_Recurrent_Neural_Networks.ipynb\">\ud83d\udcd7 Recurrent Neural Networks</a></td>\n    </tr>\n    <tr>\n        <td><a href=\"https://colab.research.google.com/github/practicalAI/practicalAI/blob/master/notebooks/03_Pandas.ipynb\">\ud83d\udc3c Pandas</a></td>\n        <td></td>\n        <td></td>\n        <td></td>\n    </tr>\n    </tbody>\n</table>\n<br>\n<table class=\"table table-striped table-bordered table-vcenter\">\n    <thead class=\"ai-notebooks-table-header\">\n    <tr>\n        <td colspan=\"1\" rowspan=\"2\"><h4 align=\"center\" class=\"ai-notebooks-table-title\">Production ML</h4></td>\n    </tr>\n    <tr class=\"bg-light\">\n        <td align=\"center\"><b>Local</b></td>\n        <td align=\"center\"><b>Applications</b></td>\n        <td align=\"center\"><b>Scale</b></td>\n        <td align=\"center\"><b>Miscellaneous</b></td>\n    </tr>\n    </thead>\n    <tbody class=ai-notebooks-table-content>\n    <tr>\n        <td colspan=\"1\" rowspan=\"3\" class=\"ai-notebooks-table-points ai-orange-link\">\n        <ul>\n            <li>Setup your local environment for ML.</li>\n            <li>Wrap your ML in RESTful APIs using <a href=\"http://flask.pocoo.org/\" target=\"_blank\">Flask</a> to create applications.</li>\n            <li>Standardize and scale your ML applications with <a href=\"https://www.docker.com/\" target=\"_blank\">Docker</a> and <a href=\"https://kubernetes.io/\" target=\"_blank\">Kubernetes</a>.</li>\n            <li>Deploy simple and scalable ML workflows using <a href=\"https://www.kubeflow.org/\" target=\"_blank\">Kubeflow</a>.</li>\n        </ul>\n        </td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udcbb Local Setup</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udf32 Logging</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udc33 Docker</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83e\udd1d Distributed Training</a></td>\n    </tr>\n    <tr>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udc0d ML Scripts</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\u26b1\ufe0f Flask Applications</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udea2 Kubernetes</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udd0b Databases</a></td>\n    </tr>\n    <tr>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\u2705 Unit Tests</a></td>\n        <td></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udf0a Kubeflow</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udd10 Authentication</a></td>\n    </tr>\n    </tbody>\n</table>\n<br>\n<table class=\"table table-striped table-bordered table-vcenter\">\n    <thead class=\"ai-notebooks-table-header\">\n    <tr>\n        <td colspan=\"1\" rowspan=\"2\"><h4 align=\"center\" class=\"ai-notebooks-table-title\">Advanced ML</h4></td>\n    </tr>\n    <tr class=\"bg-light\">\n        <td align=\"center\"><b>General</b></td>\n        <td align=\"center\"><b>Sequential</b></td>\n        <td align=\"center\"><b>Popular</b></td>\n        <td align=\"center\"><b>Miscellaneous</b></td>\n    </tr>\n    </thead>\n    <tbody class=ai-notebooks-table-content>\n    <tr>\n        <td colspan=\"1\" rowspan=\"3\" class=\"ai-notebooks-table-points ai-orange-link\">\n        <ul>\n            <li>Dive into architectural and interpretable advancements in neural networks.</li>\n            <li>Implement state-of-the-art NLP techniques.</li>\n            <li>Learn about popular deep learning algorithms used for generation, time-series, etc.</li>\n        </ul>\n        </td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83e\uddd0 Attention</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udc1d Transformers</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udfad Generative Adversarial Networks</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udd2e Autoencoders</a></td>\n    </tr>\n    <tr>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udfce\ufe0f Highway Networks</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udc79 BERT, GPT2, XLNet</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udfb1 Bayesian Deep Learning</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udd77\ufe0f Graph Neural Networks</a></td>\n    </tr>\n    <tr>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udca7 Residual Networks</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udd58 Temporal CNNs</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udf52 Reinforcement Learning</a></td>\n        <td></td>\n    </tr>\n    </tbody>\n</table>\n<br>\n<table class=\"table table-striped table-bordered table-vcenter\">\n    <thead class=\"ai-notebooks-table-header\">\n    <tr>\n        <td colspan=\"1\" rowspan=\"2\"><h4 align=\"center\" class=\"ai-notebooks-table-title\">Topics</h4></td>\n    </tr>\n    <tr class=\"bg-light\">\n        <td align=\"center\"><b>Computer Vision</b></td>\n        <td align=\"center\"><b>Natural Language</b></td>\n        <td align=\"center\"><b>Unsupervised Learning</b></td>\n        <td align=\"center\"><b>Miscellaneous</b></td>\n    </tr>\n    </thead>\n    <tbody class=ai-notebooks-table-content>\n    <tr>\n        <td colspan=\"1\" rowspan=\"4\" class=\"ai-notebooks-table-points ai-orange-link\">\n        <ul>\n            <li>Learn how to use deep learning for computer vision tasks.</li>\n            <li>Implement techniques for natural language tasks.</li>\n            <li>Derive insights from unlabeled data using unsupervised learning.</li>\n        </ul>\n        </td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udcf8 Image Recognition</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udcd6 Text classification</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udf61 Clustering</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\u23f0 Time-series Analysis</a></td>\n    </tr>\n    <tr>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\uddbc\ufe0f Image Segmentation</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\udcac Named Entity Recognition</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udfd8\ufe0f Topic Modeling</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\uded2 Recommendation Systems</a></td>\n    </tr>\n    <tr>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udfa8 Image Generation</a></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83e\udde0 Knowledge Graphs</a></td>\n        <td></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83c\udfaf One-shot Learning</a></td>\n    </tr>\n    <tr>\n        <td></td>\n        <td></td>\n        <td></td>\n        <td><a data-toggle=\"tooltip\" data-placement=\"top\" title=\"\ud83d\udcc5 Coming soon\">\ud83d\uddc3\ufe0f Interpretability</a></td>\n    </tr>\n    </tbody>\n</table>\n<br>\n\n\n## Updates\n<a href=\"https://practicalai.me/#newsletter\">\ud83d\udcec Newsletter</a> - Subscribe to get updates on new content.\n"}, {"repo": "HuaweiJoke/Huawei-Joke", "language": null, "readme_contents": "# Huawei-Joke\n\u672c\u9879\u76ee\u5c06\u6536\u96c6\u56e0\u5ba1\u67e5\u800c\u88ab\u5220\u9664\u7684\u5173\u4e8e\u534e\u4e3a\u516c\u53f8\u7684\u7b11\u8bdd\u3002\u6b22\u8fce\u5927\u5bb6\u6295\u7a3f\u3002\n\nThis project is collecting jokes about Huawei company that are deleted due to censorship. You are welcome to contribute.\n\n------\n\n- [251\u51b2\u5854\u7b11\u8bdd](https://github.com/HuaweiJoke/Huawei-Joke/blob/master/251%E5%86%B2%E5%A1%94%E7%AC%91%E8%AF%9D.md):\u9879\u76ee\u521b\u5efa\u8005\u6240\u4f5c\uff0c\u539f\u53d1\u4e8e\u77e5\u4e4e\uff0c\u540e\u88ab\u5220\u9664\u3002\n- [\u51b2\u5854\u7b11\u8bdd(\u6295\u7a3f)](https://github.com/HuaweiJoke/Huawei-Joke/blob/master/%E5%86%B2%E5%A1%94%E7%AC%91%E8%AF%9D(%E6%8A%95%E7%A8%BF).md)\uff1a\u6765\u81ea\u7f51\u53cb\u6295\u7a3f\n- [\u539f\u7248\u82cf\u4e1c\u653f\u6cbb\u7b11\u8bdd\u5408\u96c6](https://github.com/HuaweiJoke/Huawei-Joke/blob/master/%E5%8E%9F%E7%89%88%E8%8B%8F%E4%B8%9C%E6%94%BF%E6%B2%BB%E7%AC%91%E8%AF%9D%E5%90%88%E9%9B%86.txt)\uff1a\u539f\u7248\u7b11\u8bdd\u5408\u96c6\uff0c\u6765\u6e90\u4e0d\u8be6\u3002\n"}, {"repo": "trekhleb/javascript-algorithms", "language": "JavaScript", "readme_contents": "# Algoritmos y Estructuras de Datos en JavaScript\n\n[![Build Status](https://travis-ci.org/trekhleb/javascript-algorithms.svg?branch=master)](https://travis-ci.org/trekhleb/javascript-algorithms)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nEste repositorio contiene ejemplos basados en JavaScript de muchos\nalgoritmos y estructuras de datos populares.\n\nCada algoritmo y estructura de datos tiene su propio L\u00c9AME con explicaciones relacionadas y \nenlaces para lecturas adicionales (incluyendo algunas a v\u00eddeos de YouTube).\n\n_L\u00e9elo en otros idiomas:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_\u7b80\u4f53\u4e2d\u6587_](README.zh-CN.md),\n[_\u7e41\u9ad4\u4e2d\u6587_](README.zh-TW.md),\n[_\ud55c\uad6d\uc5b4_](README.ko-KR.md),\n[_\u65e5\u672c\u8a9e_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Fran\u00e7ais_](README.fr-FR.md),\n[_Portugu\u00eas_](README.pt-BR.md)\n\n*\u261d N\u00f3tese que este proyecto est\u00e1 pensado con fines de aprendizaje e investigaci\u00f3n,\ny **no** para ser usado en producci\u00f3n.*\n\n## Estructuras de Datos\n\nUna estructura de datos es una forma particular de organizar y almacenar datos en un ordenador para que puedan accederse\ny modificarse de forma eficiente. M\u00e1s concretamente, una estructura de datos es un conjunto de valores\nde datos, las relaciones entre ellos y las funciones u operaciones que se pueden aplicar a\nlos datos.\n\n`P` - Principiante, `A` - Avanzado\n\n* `P` [Lista enlazada](src/data-structures/linked-list)\n* `P` [Lista doblemente enlazada](src/data-structures/doubly-linked-list)\n* `P` [Cola](src/data-structures/queue)\n* `P` [Pila](src/data-structures/stack)\n* `P` [Tabla hash](src/data-structures/hash-table)\n* `P` [Heap](src/data-structures/heap) - versiones m\u00e1x y m\u00edn\n* `P` [Cola de prioridad](src/data-structures/priority-queue)\n* `A` [Trie](src/data-structures/trie)\n* `A` [\u00c1rbol](src/data-structures/tree)\n  * `A` [\u00c1rbol de b\u00fasqueda binaria](src/data-structures/tree/binary-search-tree)\n  * `A` [\u00c1rbol AVL](src/data-structures/tree/avl-tree)\n  * `A` [\u00c1rbol Rojo-Negro](src/data-structures/tree/red-black-tree)\n  * `A` [\u00c1rbol de segmentos](src/data-structures/tree/segment-tree) - con ejemplos de consultas de rango m\u00edn/m\u00e1x/suma\n  * `A` [\u00c1rbol de Fenwick](src/data-structures/tree/fenwick-tree) (\u00c1rbol binario indexado)\n* `A` [Grafo](src/data-structures/graph) (dirigido y no dirigido)\n* `A` [Conjuntos disjuntos](src/data-structures/disjoint-set)\n* `A` [Filtro de Bloom](src/data-structures/bloom-filter)\n\n## Algoritmos\n\nUn algoritmo es una especificaci\u00f3n inequ\u00edvoca de c\u00f3mo resolver una clase de problemas. Es un conjunto de reglas que \ndefinen con precisi\u00f3n una secuencia de operaciones.\n\n`P` - Principiante, `A` - Avanzado\n\n### Algoritmos por Tema\n\n* **Matem\u00e1ticas**\n  * `P` [Manipulaci\u00f3n de bits](src/algorithms/math/bits) - asignar/obtener/actualizar/limpiar bits, multiplicaci\u00f3n/divisi\u00f3n por dos, hacer negativo, etc.\n  * `P` [Factorial](src/algorithms/math/factorial)\n  * `P` [N\u00famero de Fibonacci](src/algorithms/math/fibonacci)\n  * `P` [Prueba de primalidad](src/algorithms/math/primality-test) (m\u00e9todo de divisi\u00f3n de prueba)\n  * `P` [Algoritmo de Euclides](src/algorithms/math/euclidean-algorithm) - calcular el M\u00e1ximo com\u00fan divisor (MCD)\n  * `P` [M\u00ednimo com\u00fan m\u00faltiplo](src/algorithms/math/least-common-multiple) (MCM)\n  * `P` [Criba de Erat\u00f3stenes](src/algorithms/math/sieve-of-eratosthenes) - encontrar todos los n\u00fameros primos hasta un l\u00edmite dado\n  * `P` [Es una potencia de dos?](src/algorithms/math/is-power-of-two) - comprobar si el n\u00famero es una potencia de dos (algoritmos ingenuos y de bits)\n  * `P` [Tri\u00e1ngulo de Pascal](src/algorithms/math/pascal-triangle)\n  * `P` [N\u00fameros complejos](src/algorithms/math/complex-number) - n\u00fameros complejos y operaciones con ellos\n  * `P` [Radianes & Grados](src/algorithms/math/radian) - conversi\u00f3n de radianes a grados y viceversa\n  * `P` [Exponenciaci\u00f3n r\u00e1pida](src/algorithms/math/fast-powering)\n  * `A` [Partici\u00f3n entera](src/algorithms/math/integer-partition)\n  * `A` [Algortimo \u03c0 de Liu Hui](src/algorithms/math/liu-hui) - aproximar el c\u00e1lculo de  \u03c0 basado en pol\u00edgonos de N lados\n  * `A` [Transformada discreta de Fourier](src/algorithms/math/fourier-transform) - descomponer una funci\u00f3n de tiempo (se\u00f1al) en las frecuencias que la componen\n* **Conjuntos**\n  * `P` [Producto cartesiano](src/algorithms/sets/cartesian-product) - producto de m\u00faltiples conjuntos\n  * `P` [Permutaci\u00f3n de Fisher\u2013Yates](src/algorithms/sets/fisher-yates) - permutaci\u00f3n aleatoria de una secuencia finita\n  * `A` [Conjunto potencia](src/algorithms/sets/power-set) - todos los subconjuntos de un conjunto\n  * `A` [Permutaciones](src/algorithms/sets/permutations) (con y sin repeticiones)\n  * `A` [Combinaciones](src/algorithms/sets/combinations) (con y sin repeticiones)\n  * `A` [Subsecuencia com\u00fan m\u00e1s larga](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Subsecuencia creciente m\u00e1s larga](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Supersecuencia com\u00fan m\u00e1s corta](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Problema de la mochila](src/algorithms/sets/knapsack-problem) - \"0/1\" y \"sin l\u00edmite\"\n  * `A` [M\u00e1ximo subarreglo](src/algorithms/sets/maximum-subarray) - versiones de \"fuerza bruta\" y \"programaci\u00f3n din\u00e1mica\" (de Kadane)\n  * `A` [Suma combinada](src/algorithms/sets/combination-sum) - encuentra todas las combinaciones que forman una suma espec\u00edfica\n* **Cadenas de caracteres**\n  * `P` [Distancia de Hamming](src/algorithms/string/hamming-distance) - n\u00famero de posiciones en las que los s\u00edmbolos son diferentes\n  * `A` [Distancia de Levenshtein](src/algorithms/string/levenshtein-distance) - distancia m\u00ednima de edici\u00f3n entre dos secuencias\n  * `A` [Algoritmo Knuth-Morris-Pratt](src/algorithms/string/knuth-morris-pratt) (Algoritmo KMP) - b\u00fasqueda de subcadenas (coincidencia de patrones)\n  * `A` [Algoritmo Z](src/algorithms/string/z-algorithm) - b\u00fasqueda de subcadenas (coincidencia de patrones)\n  * `A` [Algoritmo de Rabin Karp](src/algorithms/string/rabin-karp) - b\u00fasqueda de subcadenas\n  * `A` [Subcadena com\u00fan m\u00e1s larga](src/algorithms/string/longest-common-substring)\n  * `A` [Coincidencia por expresiones regulares](src/algorithms/string/regular-expression-matching)\n* **B\u00fasquedas**\n  * `P` [B\u00fasqueda lineal](src/algorithms/search/linear-search)\n  * `P` [B\u00fasqueda de salto](src/algorithms/search/jump-search) (o B\u00fasqueda de bloque) - b\u00fasqueda en una lista ordenada\n  * `P` [B\u00fasqueda binaria](src/algorithms/search/binary-search) - b\u00fasqueda en una lista ordenada\n  * `P` [B\u00fasqueda por interpolaci\u00f3n](src/algorithms/search/interpolation-search) - b\u00fasqueda en una lista ordenada uniformemente distribuida\n* **Ordenamiento**\n  * `P` [Ordenamiento de burbuja](src/algorithms/sorting/bubble-sort)\n  * `P` [Ordenamiento por selecci\u00f3n](src/algorithms/sorting/selection-sort)\n  * `P` [Ordenamiento por inserci\u00f3n](src/algorithms/sorting/insertion-sort)\n  * `P` [Ordenamiento por Heap](src/algorithms/sorting/heap-sort)\n  * `P` [Ordenamiento por mezcla](src/algorithms/sorting/merge-sort)\n  * `P` [Quicksort](src/algorithms/sorting/quick-sort) - implementaciones in situ y no in situ\n  * `P` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `P` [Ordenamiento por cuentas](src/algorithms/sorting/counting-sort)\n  * `P` [Ordenamiento Radix](src/algorithms/sorting/radix-sort)\n* **Listas enlazadas**\n  * `P` [Recorrido directo](src/algorithms/linked-list/traversal)\n  * `P` [Recorrido inverso](src/algorithms/linked-list/reverse-traversal)\n* **\u00c1rboles**\n  * `P` [B\u00fasqueda en profundidad](src/algorithms/tree/depth-first-search) (DFS)\n  * `P` [B\u00fasqueda en anchura](src/algorithms/tree/breadth-first-search) (BFS)\n* **Grafos**\n  * `P` [B\u00fasqueda en profundidad](src/algorithms/graph/depth-first-search) (DFS)\n  * `P` [B\u00fasqueda en anchura](src/algorithms/graph/breadth-first-search) (BFS)\n  * `P` [Algoritmo de Kruskal](src/algorithms/graph/kruskal) - encontrar el \u00e1rbol de cubrimiento m\u00ednimo (MST) para un grafo no dirigido ponderado\n  * `A` [Algoritmo de Dijkstra](src/algorithms/graph/dijkstra) - encontrar los caminos m\u00e1s cortos a todos los v\u00e9rtices del grafo desde un solo v\u00e9rtice\n  * `A` [Algoritmo de Bellman-Ford](src/algorithms/graph/bellman-ford) - encontrar los caminos m\u00e1s cortos a todos los v\u00e9rtices del grafo desde un solo v\u00e9rtice\n  * `A` [Algortimo de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - encontrar los caminos m\u00e1s cortos entre todos los pares de v\u00e9rtices\n  * `A` [Detectar ciclos](src/algorithms/graph/detect-cycle) - para grafos dirigidos y no dirigidos (versiones basadas en DFS y conjuntos disjuntos)\n  * `A` [Algoritmo de Prim](src/algorithms/graph/prim) - encontrar el \u00e1rbol de cubrimiento m\u00ednimo (MST) para un grafo no dirigido ponderado\n  * `A` [Ordenamiento topol\u00f3gico](src/algorithms/graph/topological-sorting) - m\u00e9todo DFS\n  * `A` [Puntos de articulaci\u00f3n](src/algorithms/graph/articulation-points) - algoritmo de Tarjan (basado en DFS)\n  * `A` [Puentes](src/algorithms/graph/bridges) - algoritmo basado en DFS\n  * `A` [Camino euleriano y circuito euleriano](src/algorithms/graph/eulerian-path) - algoritmo de Fleury - visitar cada arista exactamente una vez\n  * `A` [Ciclo hamiltoniano](src/algorithms/graph/hamiltonian-cycle) - visitar cada v\u00e9rtice exactamente una vez\n  * `A` [Componentes fuertemente conexos](src/algorithms/graph/strongly-connected-components) - algoritmo de Kosaraju\n  * `A` [Problema del viajante](src/algorithms/graph/travelling-salesman) - la ruta m\u00e1s corta posible que visita cada ciudad y vuelve a la ciudad de origen\n* **Criptografia**\n  * `P` [Hash polinomial](src/algorithms/cryptography/polynomial-hash) - funci\u00f3n de hash rodante basada en polinomio\n* **Sin categor\u00eda**\n  * `P` [Torre de Han\u00f3i](src/algorithms/uncategorized/hanoi-tower)\n  * `P` [Rotaci\u00f3n de matriz cuadrada](src/algorithms/uncategorized/square-matrix-rotation) - algoritmo in situ\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game) - ejemplos de backtracking, programaci\u00f3n din\u00e1mica (de arriba hacia abajo + de abajo hacia arriba) y voraces\n  * `P` [Caminos \u00fanicos](src/algorithms/uncategorized/unique-paths) - ejemplos de backtracking, programaci\u00f3n din\u00e1mica y basados en el Tri\u00e1ngulo de Pascal\n  * `P` [Terrazas pluviales](src/algorithms/uncategorized/rain-terraces) - el problema de la retenci\u00f3n del agua de lluvia (programaci\u00f3n din\u00e1mica y fuerza bruta)\n  * `A` [Problema de las N Reinas](src/algorithms/uncategorized/n-queens)\n  * `A` [Problema del caballo (Knight tour)](src/algorithms/uncategorized/knight-tour)\n\n### Algoritmos por paradigma\n\nUn paradigma algor\u00edtmico es un m\u00e9todo o enfoque gen\u00e9rico que subyace al dise\u00f1o de una clase de algoritmos.\nEs una abstracci\u00f3n superior a la noci\u00f3n de algoritmo, del mismo modo que un algoritmo es una abstracci\u00f3n superior a un programa de ordenador.\n\n* **Fuerza Bruta** - mira todas las posibilidades y selecciona la mejor soluci\u00f3n\n  * `P` [B\u00fasqueda lineal](src/algorithms/search/linear-search)\n  * `P` [Terrazas pluviales](src/algorithms/uncategorized/rain-terraces) - el problema de la retenci\u00f3n del agua de lluvia\n  * `A` [M\u00e1ximo subarreglo](src/algorithms/sets/maximum-subarray)\n  * `A` [Problema del viajante](src/algorithms/graph/travelling-salesman) - la ruta m\u00e1s corta posible que visita cada ciudad y vuelve a la ciudad de origen\n  * `A` [Transformada discreta de Fourier](src/algorithms/math/fourier-transform) - descomponer una funci\u00f3n de tiempo (se\u00f1al) en las frecuencias que la componen\n* **Voraces** - escoge la mejor opci\u00f3n en el momento actual, sin ninguna consideraci\u00f3n sobre el futuro\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `A` [Problema de la mochila sin l\u00edmite](src/algorithms/sets/knapsack-problem)\n  * `A` [Algoritmo de Dijkstra](src/algorithms/graph/dijkstra) - encontrar los caminos m\u00e1s cortos a todos los v\u00e9rtices del grafo desde un solo v\u00e9rtice\n  * `A` [Algortimo de Prim](src/algorithms/graph/prim) - encontrar el \u00e1rbol de cubrimiento m\u00ednimo (MST) para un grafo no dirigido ponderado\n  * `A` [Algoritmo de Kruskal](src/algorithms/graph/kruskal) - encontrar el \u00e1rbol de cubrimiento m\u00ednimo (MST) para un grafo no dirigido ponderado\n* **Divide y Vencer\u00e1s** - divide el problema en partes m\u00e1s peque\u00f1as y luego resuelve esas partes\n  * `P` [B\u00fasqueda binaria](src/algorithms/search/binary-search)\n  * `P` [Torre de Han\u00f3i](src/algorithms/uncategorized/hanoi-tower)\n  * `P` [Tri\u00e1ngulo de Pascal](src/algorithms/math/pascal-triangle)\n  * `P` [Algoritmo de Euclides](src/algorithms/math/euclidean-algorithm) - calcular el M\u00e1ximo Com\u00fan Divisor (MCD)\n  * `P` [Ordenamiento por mezcla](src/algorithms/sorting/merge-sort)\n  * `P` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `P` [B\u00fasqueda en profundidad (\u00e1rboles)](src/algorithms/tree/depth-first-search) - (DFS)\n  * `P` [B\u00fasqueda en profundidad (grafos)](src/algorithms/graph/depth-first-search) - (DFS)\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `P` [Exponenciaci\u00f3n r\u00e1pida](src/algorithms/math/fast-powering)\n  * `A` [Permutaciones](src/algorithms/sets/permutations) - (con y sin repeticiones)\n  * `A` [Combinaciones](src/algorithms/sets/combinations) - (con y sin repeticiones)\n* **Programaci\u00f3n Din\u00e1mica** - construye una soluci\u00f3n usando sub-soluciones previamente encontradas\n  * `P` [N\u00famero de Fibonacci](src/algorithms/math/fibonacci)\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `P` [Caminos \u00fanicos](src/algorithms/uncategorized/unique-paths)\n  * `P` [Terrazas pluviales](src/algorithms/uncategorized/rain-terraces) - el problema de la retenci\u00f3n del agua de lluvia\n  * `A` [Distancia de Levenshtein](src/algorithms/string/levenshtein-distance) - distancia m\u00ednima de edici\u00f3n entre dos secuencias\n  * `A` [Subsecuencia com\u00fan m\u00e1s larga](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Subcadena com\u00fan m\u00e1s larga](src/algorithms/string/longest-common-substring)\n  * `A` [Subsecuencia creciente m\u00e1s larga](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Supersecuencia com\u00fan m\u00e1s corta](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Problema de la mochila 0/1](src/algorithms/sets/knapsack-problem)\n  * `A` [Partici\u00f3n entera](src/algorithms/math/integer-partition)\n  * `A` [M\u00e1ximo subarreglo](src/algorithms/sets/maximum-subarray)\n  * `A` [Algoritmo de Bellman-Ford](src/algorithms/graph/bellman-ford) - encontrar los caminos m\u00e1s cortos a todos los v\u00e9rtices del grafo desde un solo v\u00e9rtice\n  * `A` [Algoritmo de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - encontrar los caminos m\u00e1s cortos entre todos los pares de v\u00e9rtices\n  * `A` [Coincidencia por expresiones regulares](src/algorithms/string/regular-expression-matching)\n* **De Retorceso (Backtracking)** - De manera similar a la fuerza bruta, trata de generar todas las soluciones posibles, pero cada vez que genere la siguiente soluci\u00f3n, comprueba si cumple con todas las condiciones, y s\u00f3lo entonces contin\u00faa generando soluciones posteriores. De lo contrario, retrocede y sigue un camino diferente para encontrar una soluci\u00f3n. Normalmente se utiliza un recorrido en profundidad (DFS) del espacio de estados.\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `P` [Caminos \u00fanicos](src/algorithms/uncategorized/unique-paths)\n  * `P` [Conjunto potencia](src/algorithms/sets/power-set) - todos los subconjuntos de un conjunto\n  * `A` [Ciclo hamiltoniano](src/algorithms/graph/hamiltonian-cycle) - visitar cada v\u00e9rtice exactamente una vez\n  * `A` [Problema de las N Reinas](src/algorithms/uncategorized/n-queens)\n  * `A` [Problema del caballo (Knight tour)](src/algorithms/uncategorized/knight-tour)\n  * `A` [Suma combinada](src/algorithms/sets/combination-sum) - encuentra todas las combinaciones que forman una suma espec\u00edfica\n* **Ramas y Limites** - recuerda la soluci\u00f3n de menor costo encontrada en cada etapa de la b\u00fasqueda de rastreo, y utilizar el costo de la soluci\u00f3n de menor costo encontrada hasta el momento como un l\u00edmite inferior del costo de una soluci\u00f3n de menor costo para el problema, a fin de descartar soluciones parciales con costos mayores que la soluci\u00f3n de menor costo encontrada hasta el momento. Normalmente se utiliza un recorrido BFS en combinaci\u00f3n con un recorrido DFS del \u00e1rbol del espacio de estados.\n\n## C\u00f3mo usar este repositorio\n\n**Instalar las dependencias**\n\n```\nnpm install\n```\n\n**Correr ESLint**\n\nEs posible que desee ejecutarlo para comprobar la calidad del c\u00f3digo.\n\n```\nnpm run lint\n```\n\n**Correr los tests**\n\n```\nnpm test\n```\n\n**Correr tests por nombre**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Campo de juegos**\n\nPuede jugar con estructuras de datos y algoritmos en el archivo `./src/playground/playground.js` y escribir \npruebas para ello en `./src/playground/__test__/playground.test.js`.\n\nA continuaci\u00f3n, simplemente ejecute el siguiente comando para comprobar si el c\u00f3digo funciona como se espera:\n\n```\nnpm test -- 'playground'\n```\n\n## Informaci\u00f3n \u00fatil\n\n### Refrencias\n\n[\u25b6 Estructuras de datos y algoritmos en YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Notaci\u00f3n O Grande\n\nOrden de crecimiento de los algoritmos especificados en la notaci\u00f3n O grande.\n\n![Gr\u00e1ficas de Notaci\u00f3n O grande ](./assets/big-o-graph.png)\n\nFuente: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nA continuaci\u00f3n se muestra la lista de algunas de las notaciones de Big O m\u00e1s utilizadas y sus comparaciones de rendimiento \nfrente a diferentes tama\u00f1os de los datos de entrada.\n\n| Notaci\u00f3n O grande | C\u00e1lculos para 10 elementos | C\u00e1lculos para 100 elementos | C\u00e1lculos para 1000 elementos |\n| ----------------- | -------------------------- | --------------------------- | ---------------------------- |\n| **O(1)**          | 1                          | 1                           | 1                            |\n| **O(log N)**      | 3                          | 6                           | 9                            |\n| **O(N)**          | 10                         | 100                         | 1000                         |\n| **O(N log N)**    | 30                         | 600                         | 9000                         |\n| **O(N^2)**        | 100                        | 10000                       | 1000000                      |\n| **O(2^N)**        | 1024                       | 1.26e+29                    | 1.07e+301                    |\n| **O(N!)**         | 3628800                    | 9.3e+157                    | 4.02e+2567                   |\n\n### Complejidad de las operaciones de estructuras de datos\n\n| Estructura de Datos            | Accesso | Busqueda | Inserci\u00f3n | Borrado | Comentarios                                                     |\n| ------------------------------ | :-----: | :------: | :-------: | :-----: | :-------------------------------------------------------------- |\n| **Colecci\u00f3n**                  |    1    |    n     |     n     |    n    |                                                                 |\n| **Stack**                      |    n    |    n     |     1     |    1    |                                                                 |\n| **Cola**                       |    n    |    n     |     1     |    1    |                                                                 |\n| **Lista enlazada**             |    n    |    n     |     1     |    1    |                                                                 |\n| **Tabla hash**                 |    -    |    n     |     n     |    n    | En caso de funci\u00f3n hash perfecta los costos ser\u00edan O(1)         |\n| **B\u00fasqueda por \u00c1rbol binario** |    n    |    n     |     n     |    n    | En el caso de un \u00e1rbol equilibrado, los costos ser\u00edan O(log(n)) |\n| **\u00c1rbol B**                    | log(n)  |  log(n)  |  log(n)   | log(n)  |                                                                 |\n| **\u00c1rbol Rojo-Negro**           | log(n)  |  log(n)  |  log(n)   | log(n)  |                                                                 |\n| **\u00c1rbol AVL**                  | log(n)  |  log(n)  |  log(n)   | log(n)  |                                                                 |\n| **Filtro de Bloom**            |    -    |    1     |     1     |    -    | Falsos positivos son posibles durante la b\u00fasqueda               |\n\n### Complejidad de algoritmos de ordenamiento de arreglos\n\n| Nombre                           | Mejor         | Promedio                | Pero                        | Memorya | Estable | Comentarios                                                   |\n| -------------------------------- | :-----------: | :---------------------: | :-------------------------: | :-----: | :-----: | :------------------------------------------------------------ |\n| **Ordenamiento de burbuja**      |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |   1     |  Si     |                                                               |\n| **Ordenamiento por inserci\u00f3n**   |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |   1     |  Si     |                                                               |\n| **Ordenamiento por selecci\u00f3n**   | n<sup>2</sup> |      n<sup>2</sup>      |        n<sup>2</sup>        |   1     |   No    |                                                               |\n| **Ordenamiento por Heap**        | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |   1     |   No    |                                                               |\n| **Ordenamiento por mezcla**      | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |   n     |  Si     |                                                               |\n| **Quicksort**                    | n&nbsp;log(n) |      n&nbsp;log(n)      |        n<sup>2</sup>        | log(n)  |   No    | Quicksort utiliza O(log(n)) de espacio en el stack         |\n| **Shellsort**                    | n&nbsp;log(n) | depende de la secuencia de huecos | n&nbsp;(log(n))<sup>2</sup> |   1   |   No   |                                                               |\n| **Ordenamiento por cuentas**     |     n + r     |          n + r          |            n + r            | n + r   |  Si     | r - mayor n\u00famero en el arreglo                                |\n| **Ordenamiento Radix**           |    n \\* k     |         n \\* k          |           n \\* k            | n + k   |  Si     | k - largo de la llave m\u00e1s larga                                     |\n"}, {"repo": "521xueweihan/HelloGitHub", "language": "Python", "readme_contents": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/logo/readme.gif\"/>\n  <br>\u4e2d\u6587 | <a href=\"README_en.md\">English</a>\n  <br><strong>HelloGitHub</strong> \u4e00\u4e2a\u5206\u4eab GitHub \u4e0a\u6709\u8da3\u3001\u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee\u3002<br>\u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c\u8fd9\u91cc\u80fd\u591f\u5e2e\u4f60\u627e\u5230\u7f16\u7a0b\u7684\u5174\u8da3\uff01\n</p>\n\n<p align=\"center\">\n  <a href=\"https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/logo/weixin.png\"><img src=\"https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square\" alt=\"WeiXin\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/stargazers\"><img src=\"https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub stars\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/issues\"><img src=\"https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub issues\"></a>\n    <a href=\"https://weibo.com/hellogithub\"><img src=\"https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square\" alt=\"Sina Weibo\"></a>\n</p>\n\n## \u7b80\u4ecb\n\u8fd9\u662f\u4e00\u4e2a\u9762\u5411\u7f16\u7a0b\u65b0\u624b\u3001\u70ed\u7231\u7f16\u7a0b\u3001\u5bf9\u5f00\u6e90\u793e\u533a\u611f\u5174\u8da3\u4eba\u7fa4\u7684\u9879\u76ee\uff0c\u5185\u5bb9**\u6bcf\u6708 28 \u53f7**\u4ee5\u6708\u520a\u7684\u5f62\u5f0f\u66f4\u65b0\u53d1\u5e03\u3002\u5185\u5bb9\u5305\u62ec\uff1a**\u6d41\u884c\u9879\u76ee**\u3001**\u5165\u95e8\u7ea7\u9879\u76ee**\u3001**\u8ba9\u751f\u6d3b\u53d8\u5f97\u66f4\u7f8e\u597d\u7684\u5de5\u5177**\u3001**\u4e66\u7c4d**\u3001**\u5b66\u4e60\u5fc3\u5f97\u7b14\u8bb0**\u3001**\u4f01\u4e1a\u7ea7\u9879\u76ee**\u7b49\uff0c\u8fd9\u4e9b\u5f00\u6e90\u9879\u76ee\u5927\u591a\u90fd\u662f\u975e\u5e38\u5bb9\u6613\u4e0a\u624b\u3001\u5f88 Cool\uff0c\u80fd\u591f\u8ba9\u4f60\u7528\u5f88\u77ed\u65f6\u95f4\u611f\u53d7\u5230\u7f16\u7a0b\u7684\u9b45\u529b\u548c\u4fbf\u6377\u3002\u4ece\u800c\u8ba9\u5927\u5bb6\u611f\u53d7\u5230\u7f16\u7a0b\u7684\u4e50\u8da3\uff0c\u52a8\u624b\u5f00\u59cb\u7f16\u7a0b\u3002\n\n\u5e0c\u671b\u901a\u8fc7\u672c\u9879\u76ee\u80fd\u591f\u6709\u66f4\u591a\u4eba\u52a0\u5165\u5230\u5f00\u6e90\u793e\u533a\u3001\u56de\u9988\u793e\u533a\u3002**\u8ba9\u6709\u8da3\u3001\u6709\u4ef7\u503c\u7684\u9879\u76ee\u88ab\u66f4\u591a\u4eba\u53d1\u73b0\u548c\u52a0\u5165**\u3002\u5728\u53c2\u4e0e\u8fd9\u4e9b\u9879\u76ee\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5f97\u5230\uff1a**\u70ed\u7231\u7f16\u7a0b\u7684\u5c0f\u4f19\u4f34**\ud83d\udd7a \u3001**\u66f4\u591a\u7f16\u7a0b\u77e5\u8bc6**\ud83d\udcda \u3001**\u4f18\u79c0\u7684\u7f16\u7a0b\u6280\u5de7**\ud83d\udcbb \u3001**\u627e\u5230\u7f16\u7a0b\u7684\u4e50\u8da3**\ud83c\udfae \u3002\n\n- **\u300e\u6bcf\u65e5\u7cbe\u9009\u300f** \u5173\u6ce8\u6211\u4eec\u7684[\u6700\u60e8\u5b98\u5fae](https://weibo.com/hellogithub)\u83b7\u53d6\u6bcf\u65e5\u9879\u76ee\u63a8\u8350+\u62bd\u5956\u3002\n- **\u300e\u8bb2\u89e3\u5f00\u6e90\u9879\u76ee\u300f** \u6b22\u8fce\u5f00\u6e90\u7231\u597d\u8005\u7ed9\u6211\u4eec\u6295\u7a3f[\u67e5\u770b\u521b\u4f5c\u987b\u77e5](https://github.com/HelloGitHub-Team/Article/blob/master/%E5%88%9B%E4%BD%9C%E9%A1%BB%E7%9F%A5.md)\u3002\n\n\n## \u5185\u5bb9\n\u6bcf\u6708 28 \u53f7\u53d1\u5e03[\u6700\u65b0\u4e00\u671f](/content/last.md) | [\u5b98\u7f51](https://hellogithub.com) \n\n| :squirrel: | :jack_o_lantern: | :beer: | :fish_cake: | :octocat: |\n| ------- | ----- | ------------ | ------ | --------- |\n| [\u7b2c 44 \u671f](/content/44/HelloGitHub44.md) | [\u7b2c 43 \u671f](/content/43/HelloGitHub43.md) | [\u7b2c 42 \u671f](/content/42/HelloGitHub42.md) | [\u7b2c 41 \u671f](/content/41/HelloGitHub41.md) |\n| [\u7b2c 40 \u671f](/content/40/HelloGitHub40.md) | [\u7b2c 39 \u671f](/content/39/HelloGitHub39.md) | [\u7b2c 38 \u671f](/content/38/HelloGitHub38.md) | [\u7b2c 37 \u671f](/content/37/HelloGitHub37.md) | [\u7b2c 36 \u671f](/content/36/HelloGitHub36.md) |\n| [\u7b2c 35 \u671f](/content/35/HelloGitHub35.md) | [\u7b2c 34 \u671f](/content/34/HelloGitHub34.md) | [\u7b2c 33 \u671f](/content/33/HelloGitHub33.md) | [\u7b2c 32 \u671f](/content/32/HelloGitHub32.md) | [\u7b2c 31 \u671f](/content/31/HelloGitHub31.md) |\n| [\u7b2c 30 \u671f](/content/30/HelloGitHub30.md) | [\u7b2c 29 \u671f](/content/29/HelloGitHub29.md) | [\u7b2c 28 \u671f](/content/28/HelloGitHub28.md) | [\u7b2c 27 \u671f](/content/27/HelloGitHub27.md) | [\u7b2c 26 \u671f](/content/26/HelloGitHub26.md) |\n| [\u7b2c 25 \u671f](/content/25/HelloGitHub25.md) | [\u7b2c 24 \u671f](/content/24/HelloGitHub24.md) | [\u7b2c 23 \u671f](/content/23/HelloGitHub23.md) | [\u7b2c 22 \u671f](/content/22/HelloGitHub22.md) | [\u7b2c 21 \u671f](/content/21/HelloGitHub21.md) |\n| [\u7b2c 20 \u671f](/content/20/HelloGitHub20.md) | [\u7b2c 19 \u671f](/content/19/HelloGitHub19.md) | [\u7b2c 18 \u671f](/content/18/HelloGitHub18.md) | [\u7b2c 17 \u671f](/content/17/HelloGitHub17.md) | [\u7b2c 16 \u671f](/content/16/HelloGitHub16.md) |\n| [\u7b2c 15 \u671f](/content/15/HelloGitHub15.md) | [\u7b2c 14 \u671f](/content/14/HelloGitHub14.md) | [\u7b2c 13 \u671f](/content/13/HelloGitHub13.md) | [\u7b2c 12 \u671f](/content/12/HelloGitHub12.md) | [\u7b2c 11 \u671f](/content/11/HelloGitHub11.md) |\n| [\u7b2c 10 \u671f](/content/10/HelloGitHub10.md) | [\u7b2c 09 \u671f](/content/09/HelloGitHub09.md) | [\u7b2c 08 \u671f](/content/08/HelloGitHub08.md) | [\u7b2c 07 \u671f](/content/07/HelloGitHub07.md) | [\u7b2c 06 \u671f](/content/06/HelloGitHub06.md) |\n| [\u7b2c 05 \u671f](/content/05/HelloGitHub05.md) | [\u7b2c 04 \u671f](/content/04/HelloGitHub04.md) | [\u7b2c 03 \u671f](/content/03/HelloGitHub03.md) | [\u7b2c 02 \u671f](/content/02/HelloGitHub02.md) | [\u7b2c 01 \u671f](/content/01/HelloGitHub01.md) |\n\n\u6b22\u8fce[\u63a8\u8350\u6216\u81ea\u8350\u9879\u76ee](https://github.com/521xueweihan/HelloGitHub/issues/new)\u6210\u4e3a **HelloGitHub** \u7684[\u8d21\u732e\u8005](https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md) \n\n## \u8d21\u732e\u8005\n<table>\n  <tbody>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/521xueweihan\">\n          <img src=\"https://avatars2.githubusercontent.com/u/8255800?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>\u524a\u5fae\u5bd2</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/ming995\">\n          <img src=\"https://avatars0.githubusercontent.com/u/46031112?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>\u7cd6\u918b\u91cc\u810a</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/FrontMage\">\n          <img src=\"https://avatars0.githubusercontent.com/u/17007026?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>FrontMage</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/xibinyue\">\n          <img src=\"https://avatars0.githubusercontent.com/u/14122146?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>xibinyue</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/Eurus-Holmes\">\n          <img src=\"https://avatars3.githubusercontent.com/u/34226570?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>Feiyang Chen</sub>\n        </a><br>\n      </th>\n    </tr>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/ChungZH\">\n          <img src=\"https://avatars1.githubusercontent.com/u/42088872?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>ChungZH</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/daixiang0\">\n          <img src=\"https://avatars3.githubusercontent.com/u/26538619?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>daixiang0</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/nivance\">\n          <img src=\"https://avatars3.githubusercontent.com/u/3291404?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>nivance</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/hellowHuaairen\">\n          <img src=\"https://avatars2.githubusercontent.com/u/19610305?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>hellowHuaairen</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md\">\n          <img src=\"https://avatars1.githubusercontent.com/u/17665302?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>\u66f4\u591a\u8d21\u732e\u8005</sub>\n        </a><br>\n      </th>\n    </tr>\n  </tbody>\n</table>\n\n\n## \u5408\u4f5c\u7ec4\u7ec7\n\u6b22\u8fce\u5404\u79cd:octocat:\u5f00\u6e90\u7ec4\u7ec7\u5408\u4f5c[\u70b9\u51fb\u8054\u7cfb\u6211](Mailto:595666367@qq.com)\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/FGDBTKD\">\n          <img src=\"https://avatars3.githubusercontent.com/u/40509403?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>FGDBTKD</sub><br>\n          <sub>AI/ML/DL/NLP</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/d2-projects\">\n          <img src=\"https://avatars3.githubusercontent.com/u/40857578?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>D2 Projects</sub><br>\n          <sub>Vue/JavaScript</sub>\n        </a><br>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/doocs\">\n          <img src=\"https://avatars1.githubusercontent.com/u/43716716?s=50&v=4\" style=\"width: 50px;\"><br>\n          <sub>Doocs</sub><br>\n          <sub>Technical Knowledge</sub>\n        </a><br>\n      </th>\n    </tr>\n  </thead>\n</table>\n                    \n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n\n"}, {"repo": "getify/You-Dont-Know-JS", "language": null, "readme_contents": "# You Don't Know JS Yet (book series) - 2nd Edition\n\nThis is a series of books diving deep into the core mechanisms of the JavaScript language.\n\n**To read more about the motivations and perspective behind this book series, check out the [Preface](preface.md).**\n\n## Premier Sponsor\n\nThis edition of the **YDKJS** book series is exclusively sponsored by [Frontend Masters](https://frontendmasters.com).\n\nFrontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.\n\n----\n\nI teach [all my workshops](https://frontendmasters.com/kyle-simpson) exclusively through Frontend Masters. If you like this book content, please check out my video training courses.\n\nI want to extend a warm and deep thanks to Marc Grabanski and the entire Frontend Masters team, not only for their excellent work with the video training platform, but for their unwavering support of me and of the \"You Don't Know JS\" books!\n\n----\n\n## Titles\n\nI recommend reading the books in this order:\n\n* [Get Started](get-started/README.md)\n* [Scope & Closures](scope-closures/README.md)\n* [Objects & Classes](objects-classes/README.md)\n* [Types & Grammar](types-grammar/README.md)\n* [Sync & Async](sync-async/README.md)\n* [ES.Next & Beyond](es-next-beyond/README.md)\n\n## Publishing\n\nAs always, you'll be able to read these books online here entirely for free.\n\nThis edition of the books is being self-published through [GetiPub](https://geti.pub) publishing. The published books will be made available for sale through normal book retail sources.\n\nIf you'd like to contribute financially towards the effort (or any of my other OSS efforts) aside from purchasing the published books, please consider these options:\n\n* [Github Sponsorship](https://github.com/users/getify/sponsorship)\n* [Patreon](https://www.patreon.com/getify)\n* [Paypal](https://www.paypal.me/getify)\n\n## Contributions\n\nPlease feel free to contribute to the quality of this content by submitting PRs for improvements to code snippets, explanations, etc. While typo fixes are welcomed, they will likely be caught through normal editing/publishing processes, **so please don't worry about them right now.**\n\nAny contributions you make to this effort **are of course greatly appreciated**.\n\nBut **PLEASE** read the [Contributions Guidelines](CONTRIBUTING.md) carefully before submitting a PR.\n\n## License & Copyright\n\nThe materials herein are all &copy; 2019-2020 Kyle Simpson.\n\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License</a>.\n"}, {"repo": "kdn251/interviews", "language": "Java", "readme_contents": "> * \u539f\u6587\u5730\u5740\uff1a[github.com/kdn251/interviews](https://github.com/kdn251/interviews)\n> * \u8bd1\u6587\u51fa\u81ea\uff1a[\u6398\u91d1\u7ffb\u8bd1\u8ba1\u5212](https://github.com/xitu/gold-miner)\n> * \u8bd1\u8005\uff1a[\u738b\u4e0b\u9080\u6708\u718a](https://github.com/wxyyxc1992)\n> * \u6821\u5bf9\u8005\uff1a[PhxNirvana](https://github.com/phxnirvana)\u3001[\u6839\u53f7\u4e09](https://github.com/sqrthree)\n> * \u8fd9\u4e2a [\u94fe\u63a5](https://github.com/xitu/interviews/compare/master...kdn251:master) \u7528\u6765\u67e5\u770b\u672c\u7ffb\u8bd1\u4e0e\u82f1\u6587\u7248\u662f\u5426\u6709\u5dee\u522b\uff08\u5982\u679c\u4f60\u6ca1\u6709\u770b\u5230 README.md \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u5c31\u610f\u5473\u7740\u8fd9\u4efd\u7ffb\u8bd1\u6587\u6863\u662f\u6700\u65b0\u7684\uff09\u3002\n\n# Interviews\n> \u8f6f\u4ef6\u5de5\u7a0b\u6280\u672f\u9762\u8bd5\u4e2a\u4eba\u6307\u5357\u3002\n>\n> Maintainer - [Kevin Naughton Jr.](https://github.com/kdn251)\n\n## \u5176\u4ed6\u8bed\u8a00\u7248\u672c\n\n- [English](./README.md)\n\n## \u76ee\u5f55\n- [\u5728\u7ebf\u7ec3\u4e60](#\u5728\u7ebf\u7ec3\u4e60)\n- [\u5728\u7ebf\u9762\u8bd5\u7f16\u7a0b](#\u5728\u7ebf\u9762\u8bd5\u7f16\u7a0b)\n- [\u6570\u636e\u7ed3\u6784](#\u6570\u636e\u7ed3\u6784)\n- [\u7b97\u6cd5](#\u7b97\u6cd5)\n- [\u4f4d\u8fd0\u7b97](#\u4f4d\u8fd0\u7b97)\n- [\u7b97\u6cd5\u590d\u6742\u5ea6\u5206\u6790](#\u7b97\u6cd5\u590d\u6742\u5ea6\u5206\u6790)\n- [\u89c6\u9891\u6559\u7a0b](#\u89c6\u9891\u6559\u7a0b)\n- [\u9762\u8bd5\u4e66\u7c4d](#\u9762\u8bd5\u4e66\u7c4d)\n- [\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u8d44\u8baf](#\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u8d44\u8baf)\n- [\u6587\u4ef6\u7ed3\u6784](#\u6587\u4ef6\u7ed3\u6784)\n\n## \u5728\u7ebf\u7ec3\u4e60\n* [LeetCode](https://leetcode.com/)\n* [Virtual Judge](https://vjudge.net/)\n* [CareerCup](https://www.careercup.com/)\n* [HackerRank](https://www.hackerrank.com/)\n* [CodeFights](https://codefights.com/)\n* [Kattis](https://open.kattis.com/)\n* [HackerEarth](https://www.hackerearth.com)\n* [Codility](https://codility.com/programmers/lessons/1-iterations/)\n* [Code Forces](http://codeforces.com/)\n* [Code Chef](https://www.codechef.com/)\n* [Sphere Online Judge - SPOJ](http://www.spoj.com/)\n* [InterviewBit](https://www.interviewbit.com/)\n\n## \u5728\u7ebf\u9762\u8bd5\u7f16\u7a0b\n* [Pramp](https://www.pramp.com/ref/gt4-cn)\n* [Gainlo](http://www.gainlo.co/#!/)\n* [Refdash](https://refdash.com/)\n* [Interviewing.io](https://www.interviewing.io/)\n\n## \u6570\u636e\u7ed3\u6784\n### Linked List\n * \u94fe\u8868\u5373\u662f\u7531\u8282\u70b9\uff08Node\uff09\u7ec4\u6210\u7684\u7ebf\u6027\u96c6\u5408\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u5229\u7528\u6307\u9488\u6307\u5411\u5176\u4ed6\u8282\u70b9\u3002\u5b83\u662f\u4e00\u79cd\u5305\u542b\u4e86\u591a\u4e2a\u8282\u70b9\u7684\u3001\u80fd\u591f\u7528\u4e8e\u8868\u793a\u5e8f\u5217\u7684\u6570\u636e\u7ed3\u6784\u3002\n * **\u5355\u5411\u94fe\u8868**: \u94fe\u8868\u4e2d\u7684\u8282\u70b9\u4ec5\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u7a7a\u3002\n * **\u53cc\u5411\u94fe\u8868**: \u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u5177\u6709\u4e24\u4e2a\u6307\u9488 p\u3001n\uff0c\u4f7f\u5f97 p \u6307\u5411\u5148\u524d\u8282\u70b9\u5e76\u4e14 n \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff1b\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684 n \u6307\u9488\u6307\u5411 null\u3002\n * **\u5faa\u73af\u94fe\u8868**\uff1a\u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u5e76\u4e14\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u94fe\u8868\u3002\n * \u65f6\u95f4\u590d\u6742\u5ea6:\n   * \u7d22\u5f15: `O(n)`\n   * \u641c\u7d22: `O(n)`\n   * \u63d2\u5165: `O(1)`\n   * \u79fb\u9664: `O(1)`\n\n### Stack\n * \u6808\u662f\u5143\u7d20\u7684\u96c6\u5408\uff0c\u5176\u5305\u542b\u4e86\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\uff1apush \u64cd\u4f5c\u53ef\u4ee5\u7528\u4e8e\u5c06\u5143\u7d20\u538b\u5165\u6808\uff0cpop \u64cd\u4f5c\u53ef\u4ee5\u5c06\u6808\u9876\u5143\u7d20\u79fb\u9664\u3002\n * \u9075\u5faa\u540e\u5165\u5148\u51fa\uff08LIFO\uff09\u539f\u5219\u3002\n * \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u7d22\u5f15: `O(n)`\n  * \u641c\u7d22: `O(n)`\n  * \u63d2\u5165: `O(1)`\n  * \u79fb\u9664: `O(1)`\n\n### Queue\n * \u961f\u5217\u662f\u5143\u7d20\u7684\u96c6\u5408\uff0c\u5176\u5305\u542b\u4e86\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\uff1aenqueue \u64cd\u4f5c\u53ef\u4ee5\u7528\u4e8e\u5c06\u5143\u7d20\u63d2\u5165\u5230\u961f\u5217\u4e2d\uff0c\u800c dequeue \u64cd\u4f5c\u5219\u662f\u5c06\u5143\u7d20\u4ece\u961f\u5217\u4e2d\u79fb\u9664\u3002\n * \u9075\u5faa\u5148\u5165\u5148\u51fa\u539f\u5219 (FIFO)\u3002\n * \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u7d22\u5f15: `O(n)`\n  * \u641c\u7d22: `O(n)`\n  * \u63d2\u5165: `O(1)`\n  * \u79fb\u9664: `O(1)`\n\n### Tree\n* \u6811\u662f\u65e0\u5411\u3001\u8fde\u901a\u7684\u65e0\u73af\u56fe\u3002\n\n### Binary Tree\n * \u4e8c\u53c9\u6811\u5373\u662f\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u5305\u542b\u5de6\u5b50\u8282\u70b9\u4e0e\u53f3\u5b50\u8282\u70b9\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\u3002\n * **\u6ee1\u4e8c\u53c9\u6811**: \u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ec5\u5305\u542b 0 \u6216 2 \u4e2a\u8282\u70b9\u3002\n * **\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff08Perfect Binary Tree\uff09**: \u4e8c\u53c9\u6811\u4e2d\u7684\u6bcf\u4e2a\u53f6\u8282\u70b9\u90fd\u62e5\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u5177\u6709\u76f8\u540c\u7684\u9ad8\u5ea6\u3002\n * **\u5b8c\u5168\u4e8c\u53c9\u6811**: \u9664\u6700\u540e\u4e00\u5c42\u5916\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u7ed3\u70b9\u6570\u5747\u8fbe\u5230\u6700\u5927\u503c\uff1b\u5728\u6700\u540e\u4e00\u5c42\u4e0a\u53ea\u7f3a\u5c11\u53f3\u8fb9\u7684\u82e5\u5e72\u7ed3\u70b9\u3002\n\n### Binary Search Tree\n\n* \u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e8c\u53c9\u6811\uff0c\u5176\u4efb\u4f55\u8282\u70b9\u4e2d\u7684\u503c\u90fd\u4f1a\u5927\u4e8e\u6216\u8005\u7b49\u4e8e\u5176\u5de6\u5b50\u6811\u4e2d\u5b58\u50a8\u7684\u503c\u5e76\u4e14\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u5176\u53f3\u5b50\u6811\u4e2d\u5b58\u50a8\u7684\u503c\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u7d22\u5f15: `O(log(n))`\n  * \u641c\u7d22: `O(log(n))`\n  * \u63d2\u5165: `O(log(n))`\n  * \u5220\u9664: `O(log(n))`\n\n<img src=\"/images/BST.png?raw=true\" alt=\"Binary Search Tree\" width=\"400\" height=\"500\">\n\n### Trie\n* \u5b57\u5178\u6811\uff0c\u53c8\u79f0\u57fa\u6570\u6811\u6216\u8005\u524d\u7f00\u6811\uff0c\u80fd\u591f\u7528\u4e8e\u5b58\u50a8\u952e\u4e3a\u5b57\u7b26\u4e32\u7684\u52a8\u6001\u96c6\u5408\u6216\u8005\u5173\u8054\u6570\u7ec4\u7684\u641c\u7d22\u6811\u3002\u6811\u4e2d\u7684\u8282\u70b9\u5e76\u6ca1\u6709\u76f4\u63a5\u5b58\u50a8\u5173\u8054\u952e\u503c\uff0c\u800c\u662f\u8be5\u8282\u70b9\u5728\u6811\u4e2d\u7684\u6302\u8f7d\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u5176\u5173\u8054\u952e\u503c\u3002\u67d0\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u90fd\u62e5\u6709\u76f8\u540c\u7684\u524d\u7f00\uff0c\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9\u5219\u662f\u7a7a\u5b57\u7b26\u4e32\u3002\n\n![Alt text](/images/trie.png?raw=true \"Trie\")\n\n### Fenwick Tree\n* \u6811\u72b6\u6570\u7ec4\u53c8\u79f0 Binary Indexed Tree\uff0c\u5176\u8868\u73b0\u5f62\u5f0f\u4e3a\u6811\uff0c\u4e0d\u8fc7\u672c\u8d28\u4e0a\u662f\u4ee5\u6570\u7ec4\u5b9e\u73b0\u3002\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4ee3\u8868\u7740\u6811\u4e2d\u7684\u9876\u70b9\uff0c\u6bcf\u4e2a\u9876\u70b9\u7684\u7236\u8282\u70b9\u6216\u8005\u5b50\u8282\u70b9\u7684\u4e0b\u6807\u80fd\u591f\u901a\u8fc7\u4f4d\u8fd0\u7b97\u83b7\u5f97\u3002\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5305\u542b\u4e86\u9884\u8ba1\u7b97\u7684\u533a\u95f4\u503c\u4e4b\u548c\uff0c\u5728\u6574\u68f5\u6811\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\u540c\u6837\u4f1a\u66f4\u65b0\u8fd9\u4e9b\u9884\u8ba1\u7b97\u7684\u503c\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u533a\u95f4\u6c42\u503c: `O(log(n))`\n  * \u66f4\u65b0: `O(log(n))`\n\n![Alt text](/images/fenwickTree.png?raw=true \"Fenwick Tree\")\n\n### Segment Tree\n* \u7ebf\u6bb5\u6811\u662f\u7528\u4e8e\u5b58\u653e\u95f4\u9694\u6216\u8005\u7ebf\u6bb5\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5141\u8bb8\u5feb\u901f\u7684\u67e5\u627e\u67d0\u4e00\u4e2a\u8282\u70b9\u5728\u82e5\u5e72\u6761\u7ebf\u6bb5\u4e2d\u51fa\u73b0\u7684\u6b21\u6570.\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u533a\u95f4\u67e5\u8be2: `O(log(n))`\n  * \u66f4\u65b0: `O(log(n))`\n\n![Alt text](/images/segmentTree.png?raw=true \"Segment Tree\")\n\n### Heap\n* \u5806\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u57fa\u4e8e\u6811\u7684\u6ee1\u8db3\u67d0\u4e9b\u7279\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6574\u4e2a\u5806\u4e2d\u7684\u6240\u6709\u7236\u5b50\u8282\u70b9\u7684\u952e\u503c\u90fd\u4f1a\u6ee1\u8db3\u76f8\u540c\u7684\u6392\u5e8f\u6761\u4ef6\u3002\u5806\u66f4\u51c6\u786e\u5730\u53ef\u4ee5\u5206\u4e3a\u6700\u5927\u5806\u4e0e\u6700\u5c0f\u5806\uff0c\u5728\u6700\u5927\u5806\u4e2d\uff0c\u7236\u8282\u70b9\u7684\u952e\u503c\u6c38\u8fdc\u5927\u4e8e\u6216\u8005\u7b49\u4e8e\u5b50\u8282\u70b9\u7684\u503c\uff0c\u5e76\u4e14\u6574\u4e2a\u5806\u4e2d\u7684\u6700\u5927\u503c\u5b58\u50a8\u4e8e\u6839\u8282\u70b9\uff1b\u800c\u6700\u5c0f\u5806\u4e2d\uff0c\u7236\u8282\u70b9\u7684\u952e\u503c\u6c38\u8fdc\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u952e\u503c\uff0c\u5e76\u4e14\u6574\u4e2a\u5806\u4e2d\u7684\u6700\u5c0f\u503c\u5b58\u50a8\u4e8e\u6839\u8282\u70b9\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u8bbf\u95ee\u6700\u5927\u503c / \u6700\u5c0f\u503c: `O(1)`\n  * \u63d2\u5165: `O(log(n))`\n  * \u79fb\u9664\u6700\u5927\u503c / \u6700\u5c0f\u503c: `O(log(n))`\n\n<img src=\"/images/heap.png?raw=true\" alt=\"Max Heap\" width=\"400\" height=\"500\">\n\n\n### Hashing\n* \u54c8\u5e0c\u80fd\u591f\u5c06\u4efb\u610f\u957f\u5ea6\u7684\u6570\u636e\u6620\u5c04\u5230\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u636e\u3002\u54c8\u5e0c\u51fd\u6570\u8fd4\u56de\u7684\u5373\u662f\u54c8\u5e0c\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u4e0d\u540c\u7684\u952e\u5f97\u5230\u76f8\u540c\u7684\u54c8\u5e0c\u503c\uff0c\u5373\u5c06\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u78b0\u649e\u3002\n* **Hash Map**: Hash Map \u662f\u4e00\u79cd\u80fd\u591f\u5efa\u7acb\u8d77\u952e\u4e0e\u503c\u4e4b\u95f4\u5173\u7cfb\u7684\u6570\u636e\u7ed3\u6784\uff0cHash Map \u80fd\u591f\u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\u8f6c\u5316\u4e3a\u6876\u6216\u8005\u69fd\u4e2d\u7684\u4e0b\u6807\uff0c\u4ece\u800c\u4f18\u5316\u5bf9\u4e8e\u76ee\u6807\u503c\u7684\u641c\u7d22\u901f\u5ea6\u3002\n* \u78b0\u649e\u89e3\u51b3\n  * **\u94fe\u5730\u5740\u6cd5\uff08Separate Chaining\uff09**: \u94fe\u5730\u5740\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u6876\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7d22\u5f15\u7684\u5217\u8868\u3002\u641c\u7d22\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u662f\u641c\u7d22\u6876\u7684\u65f6\u95f4\uff08\u56fa\u5b9a\u65f6\u95f4\uff09\u4e0e\u904d\u5386\u5217\u8868\u7684\u65f6\u95f4\u4e4b\u548c\u3002\n  * **\u5f00\u5730\u5740\u6cd5\uff08Open Addressing\uff09**: \u5728\u5f00\u5730\u5740\u6cd5\u4e2d\uff0c\u5f53\u63d2\u5165\u65b0\u503c\u65f6\uff0c\u4f1a\u5224\u65ad\u8be5\u503c\u5bf9\u5e94\u7684\u54c8\u5e0c\u6876\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5219\u6839\u636e\u67d0\u79cd\u7b97\u6cd5\u4f9d\u6b21\u9009\u62e9\u4e0b\u4e00\u4e2a\u53ef\u80fd\u7684\u4f4d\u7f6e\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5c1a\u672a\u88ab\u5360\u7528\u7684\u5730\u5740\u3002\u6240\u8c13\u5f00\u5730\u5740\u6cd5\u4e5f\u662f\u6307\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u5e76\u4e0d\u6c38\u8fdc\u7531\u5176\u54c8\u5e0c\u503c\u51b3\u5b9a\u3002\n\n![Alt text](/images/hash.png?raw=true \"Hashing\")\n\n### Graph\n* \u56fe\u662f\u4e00\u79cd\u6570\u636e\u5143\u7d20\u95f4\u4e3a\u591a\u5bf9\u591a\u5173\u7cfb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u52a0\u4e0a\u4e00\u7ec4\u57fa\u672c\u64cd\u4f5c\u6784\u6210\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u3002\n    * **\u65e0\u5411\u56fe\uff08Undirected Graph\uff09**: \u65e0\u5411\u56fe\u5177\u6709\u5bf9\u79f0\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u56e0\u6b64\u5982\u679c\u5b58\u5728\u67d0\u6761\u4ece\u8282\u70b9 u \u5230\u8282\u70b9 v \u7684\u8fb9\uff0c\u53cd\u4e4b\u4ece v \u5230 u \u7684\u8fb9\u4e5f\u5b58\u5728\u3002\n    * **\u6709\u5411\u56fe\uff08Directed Graph\uff09**: \u6709\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u662f\u975e\u5bf9\u79f0\u7684\uff0c\u5373\u5982\u679c\u5b58\u5728\u4ece u \u5230 v \u7684\u8fb9\u5e76\u4e0d\u610f\u5473\u7740\u4e00\u5b9a\u5b58\u5728\u4ece v \u5230 u \u7684\u8fb9\u3002\n\n<img src=\"/images/graph.png?raw=true\" alt=\"Graph\" width=\"400\" height=\"500\">\n\n## \u7b97\u6cd5\n\n### \u6392\u5e8f\n\n#### \u5feb\u901f\u6392\u5e8f\n* \u7a33\u5b9a: \u5426\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u6700\u4f18\u65f6\u95f4: `O(nlog(n))`\n  * \u6700\u574f\u65f6\u95f4: `O(n^2)`\n  * \u5e73\u5747\u65f6\u95f4: `O(nlog(n))`\n\n![Alt text](/images/quicksort.gif?raw=true \"Quicksort\")\n\n#### \u5f52\u5e76\u6392\u5e8f\n* \u5f52\u5e76\u6392\u5e8f\u662f\u5178\u578b\u7684\u5206\u6cbb\u7b97\u6cd5\uff0c\u5b83\u4e0d\u65ad\u5730\u5c06\u67d0\u4e2a\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u5bf9\u5de6\u5b50\u6570\u7ec4\u4e0e\u53f3\u5b50\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u4e24\u4e2a\u6570\u7ec4\u5408\u5e76\u4e3a\u65b0\u7684\u6709\u5e8f\u6570\u7ec4\u3002\n* \u7a33\u5b9a: \u662f\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u6700\u4f18\u65f6\u95f4: `O(nlog(n))`\n  * \u6700\u574f\u65f6\u95f4: `O(nlog(n))`\n  * \u5e73\u5747\u65f6\u95f4: `O(nlog(n))`\n\n![Alt text](/images/mergesort.gif?raw=true \"Mergesort\")\n\n#### \u6876\u6392\u5e8f\n* \u6876\u6392\u5e8f\u5c06\u6570\u7ec4\u5206\u5230\u6709\u9650\u6570\u91cf\u7684\u6876\u5b50\u91cc\u3002\u6bcf\u4e2a\u6876\u5b50\u518d\u4e2a\u522b\u6392\u5e8f\uff08\u6709\u53ef\u80fd\u518d\u4f7f\u7528\u522b\u7684\u6392\u5e8f\u7b97\u6cd5\u6216\u662f\u4ee5\u9012\u5f52\u65b9\u5f0f\u7ee7\u7eed\u4f7f\u7528\u6876\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff09\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u6700\u4f18\u65f6\u95f4: `\u03a9(n + k)`\n  * \u6700\u574f\u65f6\u95f4: `O(n^2)`\n  * \u5e73\u5747\u65f6\u95f4:`\u0398(n + k)`\n\n\n![Alt text](/images/bucketsort.png?raw=true \"Bucket Sort\")\n\n#### \u57fa\u6570\u6392\u5e8f\n* \u57fa\u6570\u6392\u5e8f\u7c7b\u4f3c\u4e8e\u6876\u6392\u5e8f\uff0c\u5c06\u6570\u7ec4\u5206\u5272\u5230\u6709\u9650\u6570\u76ee\u7684\u6876\u4e2d\uff1b\u4e0d\u8fc7\u5176\u5728\u5206\u5272\u4e4b\u540e\u5e76\u6ca1\u6709\u8ba9\u6bcf\u4e2a\u6876\u5355\u72ec\u5730\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u662f\u76f4\u63a5\u8fdb\u884c\u4e86\u5408\u5e76\u64cd\u4f5c\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u6700\u4f18\u65f6\u95f4: `\u03a9(nk)`\n  * \u6700\u574f\u65f6\u95f4: `O(nk)`\n  * \u5e73\u5747\u65f6\u95f4: `\u0398(nk)`\n\n### \u56fe\u7b97\u6cd5\n\n#### \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n* \u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5\u662f\u4e00\u79cd\u4f18\u5148\u904d\u5386\u5b50\u8282\u70b9\u800c\u4e0d\u662f\u56de\u6eaf\u7684\u7b97\u6cd5\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6: `O(|V| + |E|)`\n\n![Alt text](/images/dfsbfs.gif?raw=true \"DFS / BFS Traversal\")\n\n#### \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n* \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u662f\u4f18\u5148\u904d\u5386\u90bb\u5c45\u8282\u70b9\u800c\u4e0d\u662f\u5b50\u8282\u70b9\u7684\u56fe\u904d\u5386\u7b97\u6cd5\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6: `O(|V| + |E|)`\n\n![Alt text](/images/dfsbfs.gif?raw=true \"DFS / BFS Traversal\")\n\n#### \u62d3\u6251\u6392\u5e8f\n* \u62d3\u6251\u6392\u5e8f\u662f\u5bf9\u4e8e\u6709\u5411\u56fe\u8282\u70b9\u7684\u7ebf\u6027\u6392\u5e8f\uff0c\u5982\u679c\u5b58\u5728\u67d0\u6761\u4ece u \u5230 v \u7684\u8fb9\uff0c\u5219\u8ba4\u4e3a u \u7684\u4e0b\u6807\u5148\u4e8e v\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6: `O(|V| + |E|)`\n\n#### Dijkstra \u7b97\u6cd5\n* **Dijkstra \u7b97\u6cd5** \u7528\u4e8e\u8ba1\u7b97\u6709\u5411\u56fe\u4e2d\u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6: `O(|V|^2)`\n\n![Alt text](/images/dijkstra.gif?raw=true \"Dijkstra's\")\n\n#### Bellman-Ford \u7b97\u6cd5\n* **Bellman-Ford \u7b97\u6cd5**\u662f\u5728\u5e26\u6743\u56fe\u4e2d\u8ba1\u7b97\u4ece\u5355\u4e00\u6e90\u70b9\u51fa\u53d1\u5230\u5176\u4ed6\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u7b97\u6cd5\u3002\n* \u5c3d\u7ba1\u7b97\u6cd5\u590d\u6742\u5ea6\u5927\u4e8e Dijkstra \u7b97\u6cd5\uff0c\u4f46\u662f\u5b83\u9002\u7528\u4e8e\u5305\u542b\u4e86\u8d1f\u503c\u8fb9\u7684\u56fe\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u6700\u4f18\u65f6\u95f4: `O(|E|)`\n  - \u6700\u574f\u65f6\u95f4: `O(|V||E|)`\n\n![Alt text](/images/bellman-ford.gif?raw=true \"Bellman-Ford\")\n\n#### Floyd-Warshall \u7b97\u6cd5\n* **Floyd-Warshall \u7b97\u6cd5** \u80fd\u591f\u7528\u4e8e\u5728\u65e0\u73af\u5e26\u6743\u56fe\u4e2d\u5bfb\u627e\u4efb\u610f\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6:\n  * \u6700\u4f18\u65f6\u95f4: `O(|V|^3)`\n  * \u6700\u574f\u65f6\u95f4: `O(|V|^3)`\n  * \u5e73\u5747\u65f6\u95f4: `O(|V|^3)`\n\n#### Prim \u7b97\u6cd5\n* **Prim \u7b97\u6cd5**\u662f\u7528\u4e8e\u5728\u5e26\u6743\u65e0\u5411\u56fe\u4e2d\u8ba1\u7b97\u6700\u5c0f\u751f\u6210\u6811\u7684\u8d2a\u5a6a\u7b97\u6cd5\u3002\u6362\u8a00\u4e4b\uff0cPrim \u7b97\u6cd5\u80fd\u591f\u5728\u56fe\u4e2d\u62bd\u53d6\u51fa\u8fde\u63a5\u6240\u6709\u8282\u70b9\u7684\u8fb9\u7684\u6700\u5c0f\u4ee3\u4ef7\u5b50\u96c6\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6: `O(|V|^2)`\n\n![Alt text](/images/prim.gif?raw=true \"Prim's Algorithm\")\n\n#### Kruskal \u7b97\u6cd5\n* **Kruskal \u7b97\u6cd5**\u540c\u6837\u662f\u8ba1\u7b97\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\uff0c\u4e0e Prim \u7684\u533a\u522b\u5728\u4e8e\u5e76\u4e0d\u9700\u8981\u56fe\u662f\u8fde\u901a\u7684\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6: `O(|E|log|V|)`\n\n![Alt text](/images/kruskal.gif?raw=true \"Kruskal's Algorithm\")\n\n## \u4f4d\u8fd0\u7b97\n* \u4f4d\u8fd0\u7b97\u5373\u662f\u5728\u4f4d\u7ea7\u522b\u8fdb\u884c\u64cd\u4f5c\u7684\u6280\u672f\uff0c\u5408\u9002\u7684\u4f4d\u8fd0\u7b97\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5f97\u5230\u66f4\u5feb\u5730\u8fd0\u7b97\u901f\u5ea6\u4e0e\u66f4\u5c0f\u7684\u5185\u5b58\u4f7f\u7528\u3002\n* \u6d4b\u8bd5\u7b2c k \u4f4d: `s & (1 << k)`\n* \u8bbe\u7f6e\u7b2c k \u4f4d: `s |= (1 << k)`\n* \u7b2c k \u4f4d\u7f6e\u96f6: `s &= ~(1 << k)`\n* \u5207\u6362\u7b2c k \u4f4d\u503c: `s ^= ~(1 << k)`\n* \u4e58\u4ee5 2<sup>n</sup>: `s << n`\n* \u9664\u4ee5 2<sup>n</sup>: `s >> n`\n* \u4ea4\u96c6: `s & t`\n* \u5e76\u96c6: `s | t`\n* \u51cf\u6cd5: `s & ~t`\n* \u4ea4\u6362 `x = x ^ y ^ (y = x)`\n* \u53d6\u51fa\u6700\u5c0f\u975e 0 \u4f4d\uff08Extract lowest set bit\uff09: `s & (-s)`\n* \u53d6\u51fa\u6700\u5c0f 0 \u4f4d\uff08Extract lowest unset bit\uff09: `~s & (s + 1)`\n* \u4ea4\u6362\u503c:\n             ```\n                x ^= y;\n                y ^= x;\n                x ^= y;\n             ```\n\n## \u7b97\u6cd5\u590d\u6742\u5ea6\u5206\u6790\n\n#### \u5927 O \u8868\u793a\n* **\u5927 O \u8868\u793a** \u7528\u4e8e\u8868\u793a\u67d0\u4e2a\u7b97\u6cd5\u7684\u4e0a\u9650\uff0c\u5f80\u5f80\u7528\u4e8e\u63cf\u8ff0\u6700\u574f\u7684\u60c5\u51b5\u3002\n\n![Alt text](/images/bigO.png?raw=true \"Theta Notation\")\n\n#### \u5c0f O \u8868\u793a\n* **\u5c0f O \u8868\u793a**\u7528\u4e8e\u63cf\u8ff0\u67d0\u4e2a\u7b97\u6cd5\u7684\u6e10\u8fdb\u4e0a\u754c\uff0c\u4e0d\u8fc7\u4e8c\u8005\u8981\u66f4\u4e3a\u7d27\u5bc6\u3002\n\n#### \u5927 \u03a9 \u8868\u793a\n* **\u5927 \u03a9 \u8868\u793a**\u7528\u4e8e\u63cf\u8ff0\u67d0\u4e2a\u7b97\u6cd5\u7684\u6e10\u8fdb\u4e0b\u754c\u3002\n\n![Alt text](/images/bigOmega.png?raw=true \"Theta Notation\")\n\n#### \u5c0f \u03c9 \u8868\u793a\n* **Little Omega Notation**\u7528\u4e8e\u63cf\u8ff0\u67d0\u4e2a\u7279\u5b9a\u7b97\u6cd5\u7684\u4e0b\u754c\uff0c\u4e0d\u8fc7\u4e0d\u4e00\u5b9a\u5f88\u9760\u8fd1\u3002\n\n#### Theta \u0398 \u8868\u793a\n* **Theta Notation**\u7528\u4e8e\u63cf\u8ff0\u67d0\u4e2a\u786e\u5b9a\u7b97\u6cd5\u7684\u786e\u754c\u3002\n\n![Alt text](/images/theta.png?raw=true \"Theta Notation\")\n\n## \u89c6\u9891\u6559\u7a0b\n* Data Structures\n  * [UC Berkeley Data Structures](https://www.youtube.com/watch?v=mFPmKGIrQs4&index=1&list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd)\n  * [MIT Advanced Data Structures](https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=1)\n* Algorithms\n  * [MIT Introduction to Algorithms](https://www.youtube.com/watch?v=HtSuA80QTyo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=1)\n  * [MIT Advanced Algorithms](https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c)\n\n## \u9762\u8bd5\u4e66\u7c4d\n* Competitive Programming 3 - Steven Halim & Felix Halim\n* Cracking The Coding Interview - Gayle Laakmann McDowell\n* Cracking The PM Interview - Gayle Laakmann McDowell & Jackie Bavaro\n\n## \u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u8d44\u8baf\n* [Hacker News](https://news.ycombinator.com/)\n* [Lobsters](https://lobste.rs/)\n\n## \u6587\u4ef6\u7ed3\u6784\n\n```\n.\n\u251c\u2500\u2500 Array\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bestTimeToBuyAndSellStock.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 findTheCelebrity.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gameOfLife.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 increasingTripletSubsequence.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 insertInterval.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 longestConsecutiveSequence.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumProductSubarray.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumSubarray.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mergeIntervals.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 missingRanges.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 productOfArrayExceptSelf.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 rotateImage.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 searchInRotatedSortedArray.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 spiralMatrixII.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 subsetsII.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 subsets.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 summaryRanges.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 wiggleSort.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wordSearch.java\n\u251c\u2500\u2500 Backtracking\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 androidUnlockPatterns.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 generalizedAbbreviation.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 letterCombinationsOfAPhoneNumber.java\n\u251c\u2500\u2500 BinarySearch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 closestBinarySearchTreeValue.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 firstBadVersion.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 guessNumberHigherOrLower.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pow(x,n).java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 sqrt(x).java\n\u251c\u2500\u2500 BitManipulation\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryWatch.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 countingBits.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hammingDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumProductOfWordLengths.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 numberOf1Bits.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sumOfTwoIntegers.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utf-8Validation.java\n\u251c\u2500\u2500 BreadthFirstSearch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreeLevelOrderTraversal.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cloneGraph.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pacificAtlanticWaterFlow.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 removeInvalidParentheses.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 shortestDistanceFromAllBuildings.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 symmetricTree.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wallsAndGates.java\n\u251c\u2500\u2500 DepthFirstSearch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 balancedBinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 battleshipsInABoard.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 convertSortedArrayToBinarySearchTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumDepthOfABinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 numberOfIslands.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 populatingNextRightPointersInEachNode.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 sameTree.java\n\u251c\u2500\u2500 Design\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 zigzagIterator.java\n\u251c\u2500\u2500 DivideAndConquer\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 expressionAddOperators.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 kthLargestElementInAnArray.java\n\u251c\u2500\u2500 DynamicProgramming\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bombEnemy.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 climbingStairs.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 combinationSumIV.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 countingBits.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 editDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 houseRobber.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 paintFence.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 paintHouseII.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 regularExpressionMatching.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sentenceScreenFitting.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 uniqueBinarySearchTrees.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wordBreak.java\n\u251c\u2500\u2500 HashTable\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreeVerticalOrderTraversal.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 findTheDifference.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 groupAnagrams.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 groupShiftedStrings.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 islandPerimeter.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 loggerRateLimiter.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumSizeSubarraySumEqualsK.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 minimumWindowSubstring.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sparseMatrixMultiplication.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 strobogrammaticNumber.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 twoSum.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 uniqueWordAbbreviation.java\n\u251c\u2500\u2500 LinkedList\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addTwoNumbers.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 deleteNodeInALinkedList.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mergeKSortedLists.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 palindromeLinkedList.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 plusOneLinkedList.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 reverseLinkedList.java\n\u251c\u2500\u2500 Queue\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 movingAverageFromDataStream.java\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 Sort\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 meetingRoomsII.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 meetingRooms.java\n\u251c\u2500\u2500 Stack\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binarySearchTreeIterator.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 decodeString.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 flattenNestedListIterator.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 trappingRainWater.java\n\u251c\u2500\u2500 String\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addBinary.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 countAndSay.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 decodeWays.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 editDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 integerToEnglishWords.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 longestPalindrome.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 longestSubstringWithAtMostKDistinctCharacters.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 minimumWindowSubstring.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 multiplyString.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 oneEditDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 palindromePermutation.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reverseVowelsOfAString.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 romanToInteger.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 validPalindrome.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 validParentheses.java\n\u251c\u2500\u2500 Tree\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreeMaximumPathSum.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreePaths.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 inorderSuccessorInBST.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 invertBinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lowestCommonAncestorOfABinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sumOfLeftLeaves.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 validateBinarySearchTree.java\n\u251c\u2500\u2500 Trie\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addAndSearchWordDataStructureDesign.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 implementTrie.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wordSquares.java\n\u2514\u2500\u2500 TwoPointers\n    \u251c\u2500\u2500 3Sum.java\n    \u251c\u2500\u2500 3SumSmaller.java\n    \u251c\u2500\u2500 mergeSortedArray.java\n    \u251c\u2500\u2500 minimumSizeSubarraySum.java\n    \u251c\u2500\u2500 moveZeros.java\n    \u251c\u2500\u2500 removeDuplicatesFromSortedArray.java\n    \u251c\u2500\u2500 reverseString.java\n    \u2514\u2500\u2500 sortColors.java\n\n18 directories, 124 files\n```\n"}, {"repo": "eavichay/microfronts", "language": "TypeScript", "readme_contents": "# Microfronts\n> \"One shell to rule them all, One shell to bind them, One shell to wrap them all and in the light to run them\"\n\n## Polyglot Front-End Solution\nMicro-Frontends approach enables us to split our products into separate modules as any of them is built with any web technology (i.e. React/Angular/Vue/...). A thin code layer orchestrates them as a single product, keeping the UX intact. The approach enables companies to suspend rewrites of old production code and combine new technologies with legacy ones without breaking everything.\n\nMicrofronts orchestrates multiple front-end applications with **shared** runtime and **fully controlled** sandboxing at the same time.\n\n### Creating the shell application\nThe shell application should be a super-thin layer of html, css and a tiny javascript file.\n\nThe shell contains the configuration for your front-ends bound with the relevant routes. The microfronts library will orchestrate the front-ends whenever route changes. It will also provide shared runtime fully accessible by demand.\n\n###### Quick example:\n```html\n<!-- index.html -->\n<body>\n  <a href=\"#/home\">HOME (react app)</a>\n  <a href=\"#/home\">SETTINGS (angular app)</a>\n  <a href=\"#/side-by-side\">SIDE-BY-SIDE (both apps)</a>\n  <iframe is=\"app-container\" app-id=\"react-app\"></iframe>\n  <iframe is=\"app-container\" app-id=\"angular-app\"></iframe>\n  <iframe is=\"app-container\" app-id=\"error\"></iframe>\n  <script src=\"./shell.js\" type=\"module\"></script>\n</body>\n```\n\n`npm install microfronts` or `yarn add microfronts`\nMicrofronts should be installed in your **shell** application and *NOT* in your applications. This ensures the orchestrator remains a singleton.\n\n```javascript\n// shell.js\nimport { Microfronts } from 'microfronts';\nconst application = Microfronts();\nconst router = application.getRouter();\nconst context = application.getAppContext();\n\nconst REACT_APP = {\n    base: 'https://my.domain.com/app-1',\n    appId: 'react-app'\n};\nconst ANGULAR_APP = {\n    base: 'https://other.domain.com/app-2',\n    appId: 'angular-app'\n};\nconst NOT_FOUND = {\n    base: './404.html',\n    appId: 'error'\n}\n\nrouter.registerRoute('*', { active: [NOT_FOUND] });\nrouter.registerRoute('home', { active: [REACT_APP] });\nrouter.registerRoute('settings', { active: [ANGULAR_APP] });\nrouter.registerRoute('side-by-side', { active: [REACT_APP, ANGULAR_APP] });\n\nrouter.init();\n```\n\n> **NOTE:** Ensure your servers provide cross-origin access from where the shell is deployed. This can be solved on the server side or by a reverse-proxy.\n\nTo see code example, take a look at the examples folder (available in the github repo).\n\n> For type declarations you may install Microfronts and import only the **interfaces.d.ts** file.\n\n### Accessing the shared context\nMicrofronts provides a runtime-shared application context, which can be consumed by running front-ends. The context also enables the front-ends to **provide** utilities to other front-ends.\n\n###### For example\nAngular holds the user service, containing the data, login and other actions. It exposes a RxJs *Subject* object and would like to expose it to the rest of the world.\n\n```typescript\n// angular-app/services/User.service.ts\n@Injectable() class UserService {\n    public stream$ = new BehaviorSubject<UserData|null>(null);\n    constructor() {\n        window.AppContext.set('services.stream', this.stream$);\n    }\n}\n```\n\n```javascript\n// react-app/components/UserStatus.js\nexport default () => {\n    const [ user, setUserData] = useState(null);\n    useEffect(() => {\n        const subscription = window.AppContext.get('services.stream')\n                .subscribe(data => setUserData(data)));\n        return () => subscription.unsubscribe();\n        }\n    });\n    return user\n        ? <div>{user.name}, {user.lastLogin}</div>\n        : <div></div>\n};\n```\n\nThis way the Angular service can be consumed at runtime within the React application. No need to rewrite or duplicate the business logic.\n\nFor asynchronous consumption, The AppContext provides the `provide` and `require` methods. The `require` receives a promise, fulfilled one `provide` is triggered with a value. This enables async dependency management across frameworks.\n\n### Adding more modules to your project\nNow that the shell contains at least one front-end, more screens can be added freely. Ensure all of your internal routers use the hash-strategy (for consistency). Use the Microfronts' `Router.Navigate` whenever possible, though the router can watch changes from the inside.\n\n### More to come\nMicrofronts provides more features, such as route guards (used for dirty-clean state checking, privileges, etc.), static data per-application, messaging and more.\n\n# We need your support!\nIf you wish to join - open an issue, suggest an improvement, create pull-request or join the team.\n\nCurrently documentation is only inside the code, we appreciate help wiring up a good documentation webpage.\n\n`#usetheplatform`\n"}, {"repo": "goldbergyoni/nodebestpractices", "language": "JavaScript", "readme_contents": "[\u2714]: assets/images/checkbox-small-blue.png\n\n# Melhores Pr\u00e1ticas em Node.js\n\n<h1 align=\"center\">\n  <img src=\"assets/images/banner-2.jpg\" alt=\"Node.js Best Practices\">\n</h1>\n\n<br/>\n\n<div align=\"center\">\n  <img src=\"https://img.shields.io/badge/\u2699%20Contagem%20de%20Items%20-%2083%20Boas%20Pr\u00e1ticas-blue.svg\" alt=\"83 items\"> <img src=\"https://img.shields.io/badge/%F0%9F%93%85%20\u00daltima%20Atualiza\u00e7\u00e3o%20-%20Jun%205%202019-green.svg\" alt=\"\u00daltima Atualiza\u00e7\u00e3o: June 5, 2019\"> <img src=\"https://img.shields.io/badge/%E2%9C%94%20Atualizado%20Para%20Vers\u00e3o%20-%20Node%2012.4.0%20LTS-brightgreen.svg\" alt=\"Atualizado para Node 12.4.0 LTS\">\n</div>\n\n<br/>\n\n[![nodepractices](/assets/images/twitter-s.png)](https://twitter.com/nodepractices/) **Siga-nos no Twitter!** [**@nodepractices**](https://twitter.com/nodepractices/)\n\n<br/>\n\nLeia em diferentes idiomas: [![CN](/assets/flags/CN.png)**CN**](/README.chinese.md), [![BR](/assets/flags/BR.png)**BR**](/README.brazilian-portuguese.md) [(![ES](/assets/flags/ES.png)**ES**, ![FR](/assets/flags/FR.png)**FR**, ![HE](/assets/flags/HE.png)**HE**, ![KR](/assets/flags/KR.png)**KR**, ![RU](/assets/flags/RU.png)**RU** e ![TR](/assets/flags/TR.png)**TR** em progresso!)](#translations)\n\n<br/>\n\n###### Constru\u00eddo e mantido pelo nosso [Comit\u00ea Diretivo](#comit\u00ea-diretivo) e [Colaboradores](#colaboradores)\n\n# Novas Pr\u00e1ticas e Not\u00edcias\n\n- **Nova Boa Pr\u00e1tica:** 4.4: [Evite dados fixos e sementes para teste, adicione os dados no teste](#4-pr\u00e1ticas-de-testes-e-qualidade-geral)\n\n- **Nova Boa Pr\u00e1tica:** 6.25: [Evite publicar segredos no registro do npm](/sections/security/avoid_publishing_secrets.brazilian-portuguese.md)\n\n- **Nova tradu\u00e7\u00e3o:** ![BR](/assets/flags/BR.png) [Portugu\u00eas Brasileiro](/README.brazilian-portuguese.md) dispon\u00edvel agora, cortesia de [Marcelo Melo](https://github.com/marcelosdm)! \u2764\ufe0f\n\n<br/><br/>\n\n# Bem-vindo! 3 Coisas Que Voc\u00ea Precisa Saber:\n\n**1. Quando voc\u00ea l\u00ea aqui, na verdade voc\u00ea l\u00ea alguns dos melhores artigos de Node.js -** este \u00e9 um resumo e curadoria dos mais bem ranqueados conte\u00fados sobre as melhores pr\u00e1ticas do Node.js.\n\n**2. Esta \u00e9 a maior colet\u00e2nea, e est\u00e1 crescendo mais a cada semana -** atualmente, s\u00e3o apresentadas mais de 80 melhores pr\u00e1ticas, guias de estilo e dicas de arquitetura. Novas issues e PR s\u00e3o criadas diariamente para manter este livro vivo atualizado. Gostar\u00edamos muito de ver voc\u00ea contribuindo aqui, seja corrigindo algum erro de c\u00f3digo ou sugerindo novas e brilhantes ideias. Veja nossas [conquistas aqui](https://github.com/i0natan/nodebestpractices/milestones?direction=asc&sort=due_date&state=open).\n\n**3. A maioria dos t\u00f3picos possuem informa\u00e7\u00f5es adicionais -** perto dos t\u00f3picos das melhores pr\u00e1ticas, voc\u00ea encontrar\u00e1 o link **\ud83d\udd17Leia Mais** que ir\u00e1 apresentar exemplos de c\u00f3digos, cita\u00e7\u00f5es de blogs selecionados e mais informa\u00e7\u00f5es.\n\n<br/><br/>\n\n## \u00cdndice\n\n1.  [Pr\u00e1ticas de Estrutura de Projeto (5)](#1-pr\u00e1ticas-de-estrutura-de-projeto)\n2.  [Pr\u00e1ticas de Tratamento de Erros (11) ](#2-pr\u00e1ticas-de-tratamento-de-erros)\n3.  [Pr\u00e1ticas de Estilo de C\u00f3digo (12) ](#3-pr\u00e1ticas-de-estilo-de-c\u00f3digo)\n4.  [Pr\u00e1ticas de Testes e Qualidade Geral (11) ](#4-pr\u00e1ticas-de-testes-e-qualidade-geral)\n5.  [Pr\u00e1ticas de Produ\u00e7\u00e3o (18) ](#5-boas-pr\u00e1ticas-de-produ\u00e7\u00e3o)\n6.  [Pr\u00e1ticas de Seguran\u00e7a (25)](#6-boas-pr\u00e1ticas-em-seguran\u00e7a)\n7.  [Pr\u00e1ticas de Performance (1) (Em Progresso \u270d\ufe0f)](#7-boas-pr\u00e1ticas-em-performance)\n\n<br/><br/>\n\n# `1. Pr\u00e1ticas de Estrutura de Projeto`\n\n## ![\u2714] 1.1 Estruture sua solu\u00e7\u00e3o por componentes\n\n**TL;DR:** A pior armadilha das grandes aplica\u00e7\u00f5es \u00e9 manter uma enorme base de c\u00f3digo com centenas de depend\u00eancias - tal qual as monol\u00edticas, que diminuem a velocidade dos desenvolvedores conforme eles tentam incorporar novos recursos. Em vez disso, particione seu c\u00f3digo em componentes, cada um com sua pr\u00f3pria pasta ou uma base de c\u00f3digo dedicada, e garanta cada unidade seja mantida pequena e simples. Veja o link \u2018Leia Mais\u2019 abaixo, para ver exemplos de estrutura correta de projeto.\n\n**Caso contr\u00e1rio:** Quando desenvolvendo novos recursos, desenvolvedores t\u00eam dificuldade para perceber o impacto de suas modifica\u00e7\u00f5es e temem estragar outros componentes dependentes - deploys se tornam mais lentos e arriscados. Tamb\u00e9m \u00e9 considerado mais dif\u00edcil de escalar quando nenhuma unidade de neg\u00f3cio est\u00e1 separada.\n\n\ud83d\udd17 [**Leia mais: estruture por componentes**](/sections/projectstructre/breakintcomponents.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 1.2 Coloque seus Componentes em Camadas, mantenha o Express dentro de seus limites\n\n**TL;DR:** Cada componente deve conter 'layers' (camadas) - um objeto dedicado para web, l\u00f3gica e c\u00f3digo de acesso a dados. Isso n\u00e3o apenas faz uma separa\u00e7\u00e3o clara dos interesses, como tamb\u00e9m facilita significativamente os mocks e testes de sistema. Embora este seja um padr\u00e3o muito comum, desenvolvedores de API tendem a misturar camadas, passando os objetos da camada Web (req e res do Express) para a l\u00f3gica de neg\u00f3cios e camadas de dados - isto torna sua aplica\u00e7\u00e3o dependente, e acess\u00edvel apenas pelo Express.\n\n**Caso contr\u00e1rio:** Uma aplica\u00e7\u00e3o que misture objetos WEB com outras camadas n\u00e3o podem ser acessadas por c\u00f3digos de teste, CRON jobs e outras chamadas n\u00e3o oriundas do Express.\n\n\ud83d\udd17 [**Leia Mais: seu app em camadas**](/sections/projectstructre/createlayers.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 1.3 Envolva os utilit\u00e1rios comuns como pacotes npm\n\n**TL;DR:** Em uma grande aplica\u00e7\u00e3o, que constitui uma grande base de c\u00f3digo, utilidades de caracter\u00edsticas transversais tais como logger, encripta\u00e7\u00e3o e afins, devem ser envolvidos pelo seu pr\u00f3prio c\u00f3digo e exposto como pacotes npm privados. Isso permite compartilh\u00e1-los entre v\u00e1rias bases de c\u00f3digo e projetos.\n\n**Caso contr\u00e1rio:** Voc\u00ea dever\u00e1 criar seu pr\u00f3prio ciclo de implanta\u00e7\u00e3o e depend\u00eancia.\n\n\ud83d\udd17 [**Leia Mais: estrutura por caracter\u00edstica**](/sections/projectstructre/wraputilities.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 1.4 Separe 'app' e 'server' no Express\n\n**TL;DR:** Evite o p\u00e9ssimo h\u00e1bito de definir todo a aplica\u00e7\u00e3o [Express](https://expressjs.com/) em um \u00fanico arquivo enorme - separe a defini\u00e7\u00e3o de seu 'Express' no m\u00ednimo em dois arquivos: a declara\u00e7\u00e3o da API (app.js) e as configura\u00e7\u00f5es de rede (WWW). Para uma estrutura ainda melhor, declare sua API dentro dos componentes.\n\n**Caso contr\u00e1rio:** Sua API ser\u00e1 acess\u00edvel apenas para testes via chamadas HTTP (mais lentos e muito mais dif\u00edceis de gerar relat\u00f3rios de cobertura). Provavelmente n\u00e3o ser\u00e1 um grande prazer manter centenas de linhas de c\u00f3digo em um \u00fanico arquivo.\n\n\ud83d\udd17 [**Leia Mais: separe 'app' e 'server' no Express**](/sections/projectstructre/separateexpress.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 1.5 Use configura\u00e7\u00e3o consciente, segura e hier\u00e1rquica do ambiente\n\n**TL;DR:** Uma defini\u00e7\u00e3o de configura\u00e7\u00e3o perfeita e impec\u00e1vel deve garantir que (a) as chaves possam ser lidas a partir do arquivo E TAMB\u00c9M da vari\u00e1vel de ambiente (b) os segredos sejam mantidos fora do c\u00f3digo consolidado (c) a configura\u00e7\u00e3o \u00e9 hier\u00e1rquica para facilitar a localiza\u00e7\u00e3o. Existem alguns pacotes que podem auxiliar na checagem destes t\u00f3picos, como [rc](https://www.npmjs.com/package/rc), [nconf](https://www.npmjs.com/package/nconf) e [config](https://www.npmjs.com/package/config)\n\n**Caso contr\u00e1rio:** Deixar de satisfazer qualquer um dos requisitos de configura\u00e7\u00e3o simplesmente atrapalhar\u00e1 a equipe de desenvolvimento ou devops. Provavelmente ambas.\n\n\ud83d\udd17 [**Leia Mais: melhores pr\u00e1ticas de configura\u00e7\u00e3o**](/sections/projectstructre/configguide.brazilian-portuguese.md)\n\n<br/><br/><br/>\n\n<p align=\"right\"><a href=\"#\u00edndice\">\u2b06 Voltar ao topo</a></p>\n\n# `2. Pr\u00e1ticas de Tratamento de Erros`\n\n## ![\u2714] 2.1 Utilize Async-Await ou promises para tratamento de erros ass\u00edncronos\n\n**TL;DR:** Tratar erros ass\u00edncronos no estilo callback provavelmente \u00e9 o caminho mais r\u00e1pido para o inferno (tamb\u00e9m conhecido como a pyramid of doom - ou pir\u00e2mide da desgra\u00e7a em bom portugu\u00eas). O melhor presente que voc\u00ea pode dar ao seu c\u00f3digo \u00e9 utilizar uma biblioteca respeit\u00e1vel de promise ou async-await, que proporciona uma sintaxe de c\u00f3digo muito mais compacta e familiar, como o try-catch.\n\n**Caso contr\u00e1rio:** O estilo de callback do Node.js, function(err, response), \u00e9 um caminho promissor para um c\u00f3digo insustent\u00e1vel devido \u00e0 combina\u00e7\u00e3o de manipula\u00e7\u00e3o de erro com c\u00f3digo casual, aninhamento excessivo e padr\u00f5es de codifica\u00e7\u00e3o inadequados.\n\n\ud83d\udd17 [**Leia Mais: evitando callbacks**](/sections/errorhandling/asyncerrorhandling.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.2 Utilize apenas objetos de erro interno\n\n**TL;DR:** Muitos geram erros como uma string ou como algum tipo personalizado - isso complica a l\u00f3gica de tratamento de erros e a interoperabilidade entre m\u00f3dulos. Se voc\u00ea rejeita uma promise, lance uma mensagem de erro ou uma exce\u00e7\u00e3o - utilizando somente o objeto de erro interno aumentar\u00e1 a uniformidade e evitar\u00e1 a perda de informa\u00e7\u00f5es.\n\n**Caso contr\u00e1rio:** Ao invocar algum componente, sendo incerto qual tipo de erro ir\u00e1 retornar - isso faz com que o tratamento de erros seja muito mais dif\u00edcil. At\u00e9 pior, usar tipos personalizados para descrever erros pode levar \u00e0 perda de informa\u00e7\u00f5es de erros cr\u00edticos, como o stack trace!\n\n\ud83d\udd17 [**Leia Mais: usando o objeto interno de erro**](/sections/errorhandling/useonlythebuiltinerror.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.3 Diferencie erros operacionais vs erros de programa\u00e7\u00e3o\n\n**TL;DR:** Erros operacionais (ex: API recebeu um input inv\u00e1lido) referem-se a casos onde o impacto do erro \u00e9 totalmente compreendido e pode ser tratado com cuidado. Por outro lado, erro de programa\u00e7\u00e3o (ex: tentar ler uma vari\u00e1vel n\u00e3o definida) refere-se a falhas de c\u00f3digo desconhecidas que ditam para reiniciar a aplica\u00e7\u00e3o.\n\n**Caso contr\u00e1rio:** Voc\u00ea pode sempre reiniciar o aplicativo quando um erro aparecer, mas por que derrubar aproximadamente 5000 usu\u00e1rios que estavam online por causa de um pequeno erro operacional previsto? O contr\u00e1rio tamb\u00e9m n\u00e3o \u00e9 ideal - manter a aplica\u00e7\u00e3o rodando quando um problema desconhecido (erro de programa\u00e7\u00e3o) ocorreu, pode levar para um comportamento n\u00e3o esperado. Diferenci\u00e1-los, permite agir com tato e aplicar uma abordagem equilibrada baseada no dado contexto.\n\n\ud83d\udd17 [**Leia Mais: erros operacionais vs erros de programa\u00e7\u00e3o**](/sections/errorhandling/operationalvsprogrammererror.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.4 Trate erros de forma centralizada, n\u00e3o dentro de um middleware do Express\n\n**TL;DR:** A l\u00f3gica de tratamento de erros, bem como email para administrador e registros (logs), deve ser encapsulada em um objeto dedicado e centralizado que todos os endpoints (por exemplo, middleware do Express, cron jobs, testes unit\u00e1rios) chamem quando um erro \u00e9 recebido.\n\n**Caso contr\u00e1rio:** N\u00e3o tratar os erros em um mesmo lugar ir\u00e1 levar \u00e0 duplicidade de c\u00f3digo, e provavelmente, a erros tratados incorretamente.\n\n\ud83d\udd17 [**Leia Mais: tratando erros de forma centralizada**](/sections/errorhandling/centralizedhandling.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.5 Documente erros de API usando o Swagger ou GraphQL\n\n**TL;DR:** Permita que os clientes de sua API saibam quais erros podem ser retornados para que eles possam lidar com esses detalhes, sem causar falhas. Para RESTful APIs geralmente, isto \u00e9 feito com frameworks de documenta\u00e7\u00e3o REST API, como o Swagger. Se voc\u00ea est\u00e1 usando GraphQL, voc\u00ea tamb\u00e9m pode utilizar seu esquema e coment\u00e1rios.\n\n**Caso contr\u00e1rio:** Um cliente de uma API pode decidir travar e reiniciar, apenas pelo motivo de ter recebido de volta um erro que n\u00e3o conseguiu entender. Nota: o visitante de sua API pode ser voc\u00ea (muito comum em um ambiente de microsservi\u00e7o).\n\n\ud83d\udd17 [**Leia Mais: documentando erros de API no Swagger ou GraphQL**](/sections/errorhandling/documentingusingswagger.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.6 Finalize o processo quando um estranho chegar\n\n**TL;DR:** Quando ocorre um erro desconhecido (um erro de programa\u00e7\u00e3o, veja a melhor pr\u00e1tica #3) - h\u00e1 incerteza sobre a integridade da aplica\u00e7\u00e3o. Uma pr\u00e1tica comum sugere reiniciar cuidadosamente o processo utilizando uma ferramenta de \u201creinicializa\u00e7\u00e3o\u201d como Forever e PM2.\n\n**Caso contr\u00e1rio:** Quando uma exce\u00e7\u00e3o desconhecida \u00e9 lan\u00e7ada, algum objeto pode estar com defeito (por exemplo, um emissor de evento que \u00e9 usado globalmente e n\u00e3o dispara mais eventos devido a alguma falha interna) e todas as requisi\u00e7\u00f5es futuras podem falhar ou se comportar loucamente.\n\n\ud83d\udd17 [**Leia Mais: finalizando o processo**](/sections/errorhandling/shuttingtheprocess.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.7 Use um agente de log maduro para aumentar a visibilidade de erros\n\n**TL;DR:** Um conjunto de ferramentas de registro maduras como Winston, Bunyan ou Log4j, ir\u00e3o acelerar a descoberta e entendimento de erros. Portanto, esque\u00e7a o console.log.\n\n**Caso contr\u00e1rio:** Ficar procurando atrav\u00e9s de console.logs ou manualmente em arquivos de texto confusos sem utilizar ferramentas de consulta ou um visualizador de log decente, pode mant\u00ea-lo ocupado at\u00e9 tarde.\n\n\ud83d\udd17 [**Leia Mais: usando um logger maduro**](/sections/errorhandling/usematurelogger.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.8 Fluxos de testes de erros usando seu framework favorito\n\n**TL;DR:** Se o analista de QA ou o desenvolvedor de testes - Certifique-se de que seu c\u00f3digo n\u00e3o atenda apenas o cen\u00e1rio positivo, mas tamb\u00e9m trate e retorne os erros corretos. Frameworks de teste como Mocha e Chai podem lidar com isso facilmente (veja exemplos de c\u00f3digos no \u201cGist popup\u201d)\n\n**Caso contr\u00e1rio:** Sem testes, seja autom\u00e1tico ou manual, n\u00e3o podemos confiar em nosso c\u00f3digo para retornar os erros certos. Sem erros significantes, n\u00e3o h\u00e1 tratamento de erros.\n\n\ud83d\udd17 [**Leia Mais: fluxos de testes de erros**](/sections/errorhandling/testingerrorflows.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.9 Descubra erros e downtime usando APM\n\n**TL;DR:** Produtos de monitoramento e desempenho (tamb\u00e9m conhecido como APM), avaliam sua base de c\u00f3digo ou API de forma proativa, para que possam destacar automaticamente erros, falhas e lentid\u00f5es n\u00e3o percebidos.\n\n**Caso contr\u00e1rio:** Voc\u00ea pode gastar muito esfor\u00e7o medindo o desempenho e os tempos de inatividade (downtime) da API. Provavelmente, voc\u00ea nunca saber\u00e1 quais s\u00e3o suas partes de c\u00f3digo mais lentas no cen\u00e1rio real e como elas afetam o UX.\n\n\ud83d\udd17 [**Leia Mais: usando APM**](/sections/errorhandling/apmproducts.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.10 Capture rejei\u00e7\u00f5es de promises n\u00e3o tratadas\n\n**TL;DR:** Qualquer exce\u00e7\u00e3o lan\u00e7ada dentro de uma promise ser\u00e1 descartada, a menos que o desenvolvedor n\u00e3o se esque\u00e7a de trat\u00e1-la explicitamente. Mesmo que seu c\u00f3digo esteja inscrito no process.uncaughtException! Supere isso, registrando no evento process.unhandledRejection.\n\n**Caso contr\u00e1rio:** Seus erros ser\u00e3o engolidos e n\u00e3o v\u00e3o deixar rastros. Nada para se preocupar.\n\n\ud83d\udd17 [**Leia Mais: capturando rejei\u00e7\u00f5es de promises n\u00e3o tratadas**](/sections/errorhandling/catchunhandledpromiserejection.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 2.11 Falhe r\u00e1pido, valide argumentos usando uma biblioteca dedicada\n\n**TL;DR:** Isto deveria fazer parte das melhores pr\u00e1ticas de Express - Confirme a entrada da API para evitar erros desagrad\u00e1veis \u200b\u200bque s\u00e3o muito mais dif\u00edceis de acompanhar mais tarde. A valida\u00e7\u00e3o de c\u00f3digo geralmente \u00e9 entediante ao menos que voc\u00ea esteja utilizando uma biblioteca de ajuda bem legal, como a Joi.\n\n**Caso contr\u00e1rio:** Considere isto: sua fun\u00e7\u00e3o espera receber um \u201cDesconto\u201d como argumento num\u00e9rico que foi esquecido de passar. Mais adiante, seu c\u00f3digo verifica se Desconto!=0 (valor do desconto permitido \u00e9 maior que zero). Depois, ir\u00e1 permitir que o usu\u00e1rio desfrute de um desconto. Meu Deus, que baita bug. Entendeu?\n\n\ud83d\udd17 [**Leia Mais: falhando r\u00e1pido**](/sections/errorhandling/failfast.brazilian-portuguese.md)\n\n<br/><br/><br/>\n\n<p align=\"right\"><a href=\"#\u00edndice\">\u2b06 Voltar ao topo</a></p>\n\n# `3. Pr\u00e1ticas de Estilo de C\u00f3digo`\n\n## ![\u2714] 3.1 Use ESLint\n\n**TL;DR:** O [ESLint](https://eslint.org) \u00e9 de fato o padr\u00e3o para verificar poss\u00edveis erros e consertar o estilo de c\u00f3digo, n\u00e3o apenas para identificar problemas b\u00e1sicos de espa\u00e7amento, mas tamb\u00e9m para detectar antipadr\u00f5es de c\u00f3digo, como desenvolvedores lan\u00e7ando erros sem classifica\u00e7\u00e3o. Embora o ESLint possa corrigir automaticamente estilos de c\u00f3digo, outra ferramentas como o [prettier](https://www.npmjs.com/package/prettier) e o [beautify](https://www.npmjs.com/package/js-beautify) s\u00e3o mais poderosos no quesito corre\u00e7\u00e3o de formata\u00e7\u00e3o e trabalham em conjunto com o ESLint.\n\n**Caso contr\u00e1rio:** Desenvolvedores ir\u00e3o focar nas preocupa\u00e7\u00f5es tediosas de espa\u00e7amento e largura de linha e o tempo poder\u00e1 ser desperdi\u00e7ado pensando sobre o estilo de c\u00f3digo do projeto.\n\n\ud83d\udd17 [**Leia Mais: Usando ESLint e Prettier**](/sections/codestylepractices/eslint_prettier.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 3.2 Plugins Espec\u00edficos do Node.js\n\n**TL;DR:** Al\u00e9m das regras padr\u00f5es do ESLint que cobrem somente o Vanilla JS, adicione plug-ins espec\u00edficos do Node, como o [eslint-plugin-node](https://www.npmjs.com/package/eslint-plugin-node), o [eslint-plugin-mocha](https://www.npmjs.com/package/eslint-plugin-mocha) e o [eslint-plugin-node-security](https://www.npmjs.com/package/eslint-plugin-security)\n\n**Caso contr\u00e1rio:** Muitos padr\u00f5es de c\u00f3digo do Node.js com falha podem escapar do radar. Por exemplo, desenvolvedores podem chamar arquivos fazendo o require(variavelComoCaminho) com uma determinada vari\u00e1vel como caminho, o que permite que invasores executem qualquer script JS. Os linters do Node.js podem detectar tais padr\u00f5es e reclamar cedo.\n\n<br/><br/>\n\n## ![\u2714] 3.3 Comece um Bloco de C\u00f3digo com Chaves na Mesma Linha\n\n**TL;DR:** As chaves que abrem um bloco de c\u00f3digo devem estar na mesma linha da instru\u00e7\u00e3o de abertura\n\n### Exemplo de C\u00f3digo\n\n```javascript\n// Do\nfunction someFunction() {\n  // code block\n}\n\n// Avoid\nfunction someFunction()\n{\n  // code block\n}\n```\n\n**Caso contr\u00e1rio:** Evitar esta recomenda\u00e7\u00e3o pode levar a resultados inesperados, como visto nesta thread do StackOverflow:\n\n\ud83d\udd17 [**Leia Mais:** \"Por que os resultados variam com base no posicionamento da chave?\" (Stackoverflow)](https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement)\n\n<br/><br/>\n\n## ![\u2714] 3.4 Separe suas declara\u00e7\u00f5es corretamente\n\nN\u00e3o importa se voc\u00ea usa ponto-e-v\u00edrgula ou n\u00e3o para separar suas declara\u00e7\u00f5es, conhecer as armadilhas comuns de quebras de linha impr\u00f3prias ou inser\u00e7\u00e3o autom\u00e1tica de ponto e v\u00edrgula, ir\u00e1 ajud\u00e1-lo a eliminar erros regulares de sintaxe.\n\n**TL;DR:** Use o ESLint para obter conhecimento sobre as preocupa\u00e7\u00f5es de separa\u00e7\u00e3o. [Prettier](https://prettier.io/) ou [Standardjs](https://standardjs.com/) podem resolver automaticamente esses problemas.\n\n**Otherwise:** Como visto na se\u00e7\u00e3o anterior, o interpretador do JavaScript adiciona automaticamente um ponto-e-v\u00edrgula ao final de uma instru\u00e7\u00e3o, se n\u00e3o houver uma, ou considera uma instru\u00e7\u00e3o como n\u00e3o terminada onde deveria, o que pode levar a alguns resultados indesej\u00e1veis. Voc\u00ea pode usar atribui\u00e7\u00f5es e evitar o uso de express\u00f5es de fun\u00e7\u00e3o chamadas imediatas para evitar a maioria dos erros inesperados.\n\n### Exemplo de C\u00f3digo\n\n```javascript\n// Fa\u00e7a\nfunction doThing() {\n    // ...\n}\n\ndoThing()\n\n// Fa\u00e7a\n\nconst items = [1, 2, 3]\nitems.forEach(console.log)\n\n// Evitar - lan\u00e7a exce\u00e7\u00e3o\nconst m = new Map()\nconst a = [1,2,3]\n[...m.values()].forEach(console.log)\n> [...m.values()].forEach(console.log)\n>  ^^^\n> SyntaxError: Unexpected token ...\n\n// Evitar - lan\u00e7a exce\u00e7\u00e3o\nconst count = 2 // tenta executar 2(), mas 2 n\u00e3o \u00e9 uma fun\u00e7\u00e3o\n(function doSomething() {\n  // Fa\u00e7a algo incr\u00edvel\n}())\n// Coloque um ponto-e-v\u00edrgula antes da fun\u00e7\u00e3o invocada imediatamente, ap\u00f3s a defini\u00e7\u00e3o const, salve o valor de retorno da fun\u00e7\u00e3o an\u00f4nima para uma vari\u00e1vel ou evite IIFEs no conjunto\n```\n\n\ud83d\udd17 [**Leia mais:** \"Regra Semi ESLint\"](https://eslint.org/docs/rules/semi)\n\ud83d\udd17 [**Leia mais:** \"Nenhuma regra ESLint de m\u00faltiplas linhas inesperada\"](https://eslint.org/docs/rules/no-unexpected-multiline)\n\n<br/><br/>\n\n## ![\u2714] 3.5 Nomeie Suas Fun\u00e7\u00f5es\n\n**TL;DR:** Nomeie todas as fun\u00e7\u00f5es, incluindo closures e callbacks. Evite fun\u00e7\u00f5es an\u00f4nimas. Isso \u00e9 especialmente \u00fatil em uma aplica\u00e7\u00e3o node. Nomear todas a fun\u00e7\u00f5es permitir\u00e1 que voc\u00ea entenda facilmente o que est\u00e1 olhando quando verificar um snapshot da mem\u00f3ria.\n\n**Caso contr\u00e1rio:** A depura\u00e7\u00e3o de problemas de produ\u00e7\u00e3o usando um dump principal (snapshot da mem\u00f3ria) pode se tornar um desafio quando voc\u00ea percebe um consumo significativo de mem\u00f3ria de fun\u00e7\u00f5es an\u00f4nimas.\n\n<br/><br/>\n\n## ![\u2714] 3.6 Conven\u00e7\u00f5es de nomenclatura para vari\u00e1veis, constantes, fun\u00e7\u00f5es e classes\n\n**TL;DR:** Utilize **_lowerCamelCase_** quando nomeando constantes, vari\u00e1veis e fun\u00e7\u00f5es, e **_UpperCamelCase_** (primeira letra mai\u00fascula tamb\u00e9m) quando nomeando classes. Isso ir\u00e1 lhe ajudar a distinguir facilmente entre vari\u00e1veis/fun\u00e7\u00f5es, e classes que necessitam de instancia\u00e7\u00e3o. Use nomes descritivos, mas tente mant\u00ea-los curtos.\n\n**Caso contr\u00e1rio:** O JavaScript \u00e9 a \u00fanica linguagem no mundo que permite invocar um construtor (\u201cClass\u201d) diretamente sem instanci\u00e1-lo primeiro. Consequentemente, Classes e construtores de fun\u00e7\u00f5es s\u00e3o diferenciados come\u00e7ando com UpperCamelCase\n\n### Exemplo de C\u00f3digo\n\n```javascript\n// para classes n\u00f3s usamos UpperCamelCase\nclass SomeClassExample {}\n\n// para nomes de constantes n\u00f3s usamos a palavra const e lowerCamelCase\nconst config = {\n  key: 'value'\n};\n\n// para nomes de vari\u00e1veis e fun\u00e7\u00f5es n\u00f3s usamos lowerCamelCase\nlet someVariableExample = 'value';\nfunction doSomething() {}\n```\n\n<br/><br/>\n\n## ![\u2714] 3.7 Prefira const do que let. Esque\u00e7a do var\n\n**TL;DR:** Usar `const` significa que uma vez que a vari\u00e1vel foi atribu\u00edda, ela n\u00e3o pode ser reatribu\u00edda. Preferir const ir\u00e1 te ajudar a n\u00e3o cair na tenta\u00e7\u00e3o de utilizar a mesma vari\u00e1vel para diferentes usos, e ir\u00e1 deixar seu c\u00f3digo mais limpo. Se uma vari\u00e1vel precisa ser reatribu\u00edda, em um for loop, por exemplo, use `let` para declarar. Outro aspecto importante do `let` \u00e9 que esta vari\u00e1vel s\u00f3 estar\u00e1 dispon\u00edvel no escopo de c\u00f3digo em que ela foi definida. `var` tem escopo de fun\u00e7\u00e3o, n\u00e3o de bloco, e [n\u00e3o deveria ser utilizada em ES6](https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70)\n, agora que voc\u00ea tem const e let ao seu dispor.\n\n**Caso contr\u00e1rio:** A depura\u00e7\u00e3o se torna muito mais complicada ao seguir uma vari\u00e1vel que frequentemente muda\n\n\ud83d\udd17 [**Leia Mais: JavaScript ES6+: var, let ou const?** ](https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75)\n\n<br/><br/>\n\n## ![\u2714] 3.8 Requires vem primeiro e n\u00e3o dentro de fun\u00e7\u00f5es\n\n**TL;DR:** Fa\u00e7a o require de m\u00f3dulos no in\u00edcio de cada arquivo, antes e fora de qualquer fun\u00e7\u00e3o. Esta simples pr\u00e1tica ir\u00e1 te ajudar n\u00e3o apenas a reconhecer as depend\u00eancias de um determinado arquivo com facilidade e rapidez, como tamb\u00e9m evitar\u00e1 alguns poss\u00edveis problemas.\n\n**Caso contr\u00e1rio:** Os requires rodam de forma s\u00edncrona pelo Node.js. Se eles forem chamados de dentro de uma fun\u00e7\u00e3o, isso pode impedir que outras solicita\u00e7\u00f5es sejam tratadas em um momento mais cr\u00edtico. Al\u00e9m disso, se um m\u00f3dulo necess\u00e1rio ou qualquer uma de suas depend\u00eancias lan\u00e7ar um erro e travar o servidor, \u00e9 melhor descobrir isso o mais r\u00e1pido poss\u00edvel, o que pode n\u00e3o ser o caso se este m\u00f3dulo tiver sido declarado dentro de uma fun\u00e7\u00e3o.\n\n<br/><br/>\n\n## ![\u2714] 3.9 Fa\u00e7a Require nas pastas, n\u00e3o diretamente nos arquivos\n\n**TL;DR:** Ao desenvolver um m\u00f3dulo/biblioteca em uma pasta, coloque um arquivo index.js que exponha os componentes internos do m\u00f3dulo para que cada consumidor passe por ele. Isso serve como uma 'interface' para seu m\u00f3dulo e facilita futuras mudan\u00e7as sem causar perdas.\n\n**Caso contr\u00e1rio:** Alterar a estrutura interna dos arquivos ou a assinatura pode quebrar a interface com clientes.\n\n### Exemplo de C\u00f3digo\n\n```javascript\n// Do\nmodule.exports.SMSProvider = require('./SMSProvider');\nmodule.exports.SMSNumberResolver = require('./SMSNumberResolver');\n\n// Avoid\nmodule.exports.SMSProvider = require('./SMSProvider/SMSProvider.js');\nmodule.exports.SMSNumberResolver = require('./SMSNumberResolver/SMSNumberResolver.js');\n```\n\n<br/><br/>\n\n## ![\u2714] 3.10 Use 0 operador `===`\n\n**TL;DR:** D\u00ea prefer\u00eancia em usar o operador de compara\u00e7\u00e3o estrita `===` ao inv\u00e9s do operador de compara\u00e7\u00e3o abstrata `==`, que \u00e9 mais fraco. `==` ir\u00e1 comparar duas vari\u00e1veis depois de convert\u00ea-las para o mesmo tipo. N\u00e3o h\u00e1 convers\u00e3o de tipo no `===` e ambas as vari\u00e1veis devem ser do mesmo tipo para serem iguais.\n\n**Caso contr\u00e1rio:** Vari\u00e1veis diferentes podem retornar verdadeiro quando comparadas usando o operador `==`.\n\n### Exemplo de C\u00f3digo\n\n```javascript\n'' == '0'           // false\n0 == ''             // true\n0 == '0'            // true\n\nfalse == 'false'    // false\nfalse == '0'        // true\n\nfalse == undefined  // false\nfalse == null       // false\nnull == undefined   // true\n\n' \\t\\r\\n ' == 0     // true\n```\n\nTodas as declara\u00e7\u00f5es acima false se feitas com `===`.\n\n<br/><br/>\n\n## ![\u2714] 3.11 Use Async Await, evite callbacks\n\n**TL;DR:** Agora o Node 8 LTS possui suporte completo para Async-await. Esta \u00e9 uma nova maneira de lidar com c\u00f3digos ass\u00edncronos que substitui callbacks e promises. Async-await \u00e9 n\u00e3o-bloqueante, e isso faz com que os c\u00f3digos ass\u00edncronos pare\u00e7am s\u00edncronos. O melhor presente que voc\u00ea pode dar ao seu c\u00f3digo \u00e9 usar async-await, que fornece uma sintaxe de c\u00f3digo muito mais compacta e familiar como o try-catch.\n\n**Caso contr\u00e1rio:** Lidar com erros ass\u00edncronos no estilo de callback \u00e9 provavelmente o caminho mais r\u00e1pido para o inferno - esse estilo for\u00e7a verificar todos os erros, lidar com desajeitados aninhamentos de c\u00f3digo e torna dif\u00edcil raciocinar sobre o fluxo de c\u00f3digo.\n\n\ud83d\udd17[**Leia mais:** Guia do async await 1.0](https://github.com/yortus/asyncawait)\n\n<br/><br/>\n\n## ![\u2714] 3.12 Use Fat (=>) Arrow Functions\n\n**TL;DR:** Embora seja recomendado usar async-await e evitar par\u00e2metros de fun\u00e7\u00e3o ao lidar com APIs antigas, que aceitam promises ou callbacks - arrow functions tornam a estrutura do c\u00f3digo mais compacta e mant\u00e9m o contexto l\u00e9xico da fun\u00e7\u00e3o raiz (por exemplo, 'this').\n\n**Caso contr\u00e1rio:** C\u00f3digos mais longos (em fun\u00e7\u00f5es ES5) s\u00e3o mais propensos a erros e s\u00e3o mais dif\u00edceis de ler.\n\n\ud83d\udd17 [**Leia mais: Arrow Functions - \u00e9 hora de abra\u00e7ar a causa**](https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75)\n\n<br/><br/><br/>\n\n<p align=\"right\"><a href=\"#\u00edndice\">\u2b06 Voltar ao topo</a></p>\n\n# `4. Pr\u00e1ticas de Testes e Qualidade Geral`\n\n## ![\u2714] 4.1 No m\u00ednimo, escreva testes de API (componente)\n\n**TL;DR:** A maioria dos projetos simplesmente n\u00e3o possuem testes automatizados devido a falta de tempo ou geralmente o 'testing project' fica fora de controle e acaba sendo abandonado. Por esse motivo, priorize e comece com o teste de API, que \u00e9 o mais f\u00e1cil de escrever e proporciona mais cobertura do que os testes unit\u00e1rios (voc\u00ea pode inclusive criar testes de API sem c\u00f3digo usando ferramentas como [Postman](https://www.getpostman.com/)). Depois, se voc\u00ea tiver mais recursos e tempo, continue com testes avan\u00e7ados, como testes unit\u00e1rios, testes de banco de dados, testes de desempenho, etc.\n\n**Caso contr\u00e1rio:** Voce pode passar longos dias escrevendo testes unit\u00e1rios para perceber que possui apenas 20% de cobertura de sistema.\n\n<br/><br/>\n\n## ![\u2714] 4.2 Inclua 3 partes em cada nome de teste\n\n**TL;DR:** Fa\u00e7a o teste falar no n\u00edvel de requisitos, de modo que seja autoexplicativo para engenheiros de garantia de qualidade e desenvolvedores que n\u00e3o est\u00e3o familiarizados com o c\u00f3digo. Indicar no nome do teste o que est\u00e1 sendo testado (unidade em teste), em que circunst\u00e2ncias e qual \u00e9 o resultado esperado.\n\n**Caso contr\u00e1rio:** Uma implanta\u00e7\u00e3o falhou, um teste chamado \"Adicionar produto\" falhou. Isso lhe diz exatamente o que est\u00e1 errado?\n\n\ud83d\udd17 [**Leia Mais: Inclua 3 partes em cada nome de teste**](/sections/testingandquality/3-parts-in-name.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 4.3 Detecte problemas de c\u00f3digo com um linter\n\n**TL;DR:** Use um code linter para checar a qualidade b\u00e1sica e detectar antipadr\u00f5es antecipadamente. Rode-o antes de qualquer teste e adicione-o como um pre-commit git-hook para minimizar o tempo necess\u00e1rio para revisar e corrigir qualquer problema. Veja tamb\u00e9m [Se\u00e7\u00e3o 3](https://github.com/i0natan/nodebestpractices#3-code-style-practices) no Pr\u00e1tica de Estilo de C\u00f3digo.\n\n**Caso contr\u00e1rio:** Voc\u00ea pode deixar passar algum antipadr\u00e3o e poss\u00edvel c\u00f3digo vulner\u00e1vel para seu ambiente de produ\u00e7\u00e3o.\n\n<br/><br/>\n\n## ![\u2714] 4.4 Evite dados fixos e sementes para teste, adicione os dados no teste\n\n**TL;DR:** Para evitar o acoplamento de testes e facilitar o entendimento do fluxo do teste, cada teste deve adicionar e atuar em seu pr\u00f3prio conjunto de linhas de banco de dados. Sempre que um teste precisar extrair ou assumir a exist\u00eancia de alguns dados do banco de dados - ele deve incluir explicitamente esses dados e evitar a muta\u00e7\u00e3o de outros registros\n\n**Caso contr\u00e1rio:** Considere um cen\u00e1rio em que a implementa\u00e7\u00e3o \u00e9 abortada devido a falhas nos testes. Agora, a equipe gastar\u00e1 um tempo precioso de investiga\u00e7\u00e3o que termina em uma triste conclus\u00e3o: o sistema funciona bem, mas os testes interferem uns nos outros e quebram a compila\u00e7\u00e3o\n\n\ud83d\udd17 [**Leia Mais: Evite dados fixos para teste**](/sections/testingandquality/avoid-global-test-fixture.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 4.5 Inspencione constantemente por depend\u00eancias vulner\u00e1veis\n\n**TL;DR:** At\u00e9 mesmo as depend\u00eancias mais confi\u00e1veis, como o Express, t\u00eam vulnerabilidades conhecidas. Isso pode ser facilmente contornado usando ferramentas comunit\u00e1rias e comerciais como \ud83d\udd17 [nsp](https://github.com/nodesecurity/nsp) que pode ser invocado a partir do seu CI em cada build.\n\n**Caso contr\u00e1rio:** Manter seu c\u00f3digo livre de vulnerabilidades sem ferramentas dedicadas exigir\u00e1 o acompanhamento constante de publica\u00e7\u00f5es online sobre novas amea\u00e7as. Saia do t\u00e9dio.\n\n<br/><br/>\n\n## ![\u2714] 4.6 Marque seus testes\n\n**TL;DR:** Diferentes testes devem rodar em diferentes cen\u00e1rios: testes de r\u00e1pidos, sem IO, devem ser executados quando um desenvolvedor salva ou faz commit em um arquivo, testes completos de ponta a ponta geralmente s\u00e3o executados quando uma nova solicita\u00e7\u00e3o de request \u00e9 enviada, etc. Isso pode ser conseguido atrav\u00e9s da marca\u00e7\u00e3o de testes com palavras-chave como #cold #api #sanity. Assim voc\u00ea pode invocar o subconjunto desejado. Por exemplo, \u00e9 desta forma que voc\u00ea invocaria apenas o grupo de sanity test usando o [Mocha](https://mochajs.org/): mocha --grep 'sanity'\n\n**Caso contr\u00e1rio:** Rodar todos os testes, incluindo aqueles que executam dezenas de consultas de banco de dados, sempre que o desenvolvedor fizer uma pequena altera\u00e7\u00e3o pode ser extremamente lento e impedir que desenvolvedores executem testes.\n\n<br/><br/>\n\n## ![\u2714] 4.7 Verifique a cobertura de seu teste, isso te ajuda a identificar padr\u00f5es incorretos de teste\n\n**TL;DR:** Ferramentas de cobertura de c\u00f3digo como [Istanbul](https://github.com/istanbuljs/istanbuljs)/[NYC](https://github.com/istanbuljs/nyc), s\u00e3o \u00f3timas por 3 motivos: elas s\u00e3o gratuitas (nenhum esfor\u00e7o \u00e9 necess\u00e1rio para beneficiar esses relat\u00f3rios), elas ajuda a identificar diminui\u00e7\u00e3o na cobertura de testes, e por \u00faltimo mas n\u00e3o menos importante, ela destacam a incompatibilidade de testes: olhando relat\u00f3rios coloridos de cobertura de c\u00f3digo, voc\u00ea pode notar, por exemplo, \u00e1reas de c\u00f3digo que nunca s\u00e3o testadas como cl\u00e1usulas catch (o que significa que os testes s\u00f3 invocam os caminhos felizes e n\u00e3o como o aplicativo se comporta em erros). Configure-o para falhas se a cobertura estiver abaixo de um certo limite.\n\n**Caso contr\u00e1rio:** N\u00e3o haver\u00e1 nenhuma m\u00e9trica autom\u00e1tica informando quando uma grande parte de seu c\u00f3digo n\u00e3o \u00e9 coberta pelo teste.\n\n<br/><br/>\n\n## ![\u2714] 4.8 Inspecione pacotes desatualizados\n\n**TL;DR:** Use sua ferramenta preferida (por exemplo, 'npm outdated' ou [npm-check-updates](https://www.npmjs.com/package/npm-check-updates) para detectar pacotes instalados que est\u00e3o desatualizados, injetar essa verifica\u00e7\u00e3o em seu pipeline de CI e at\u00e9 mesmo fazer uma falha grave em um cen\u00e1rio grave. Por exemplo, um cen\u00e1rio grave pode ser quando um pacote instalado esteja h\u00e1 5 commits atr\u00e1s (por exemplo, a vers\u00e3o local \u00e9 1.3.1 e a vers\u00e3o no reposit\u00f3rio \u00e9 1.3.8) ou est\u00e1 marcada como descontinuada pelo autor - mate o build e impe\u00e7a a implanta\u00e7\u00e3o desta vers\u00e3o.\n\n**Caso contr\u00e1rio:** Sua produ\u00e7\u00e3o executar\u00e1 pacotes que foram explicitamente marcados pelo autor como arriscados.\n\n<br/><br/>\n\n## ![\u2714] 4.9 Use docker-compose para testes e2e\n\n**TL;DR:** Teste de ponta a ponta (end to end, ou e2e), que inclui dados ativos, costumava ser o elo mais fraco do processo de CI, j\u00e1 que depende de v\u00e1rios servi\u00e7os pesados como o banco de dados. O docker-compose deixa isso mam\u00e3o com a\u00e7\u00facar, criando um ambiente de produ\u00e7\u00e3o usando um arquivo de texto simples e comandos f\u00e1ceis. Isto permite criar todos os servi\u00e7os dependentes, banco de dados e rede isolada para teste e2e. Por \u00faltimo mas n\u00e3o menos importante, ele pode manter um ambiente sem estado que \u00e9 invocado antes de cada su\u00edte de testes e \u00e9 encerrado logo ap\u00f3s.\n\n**Caso contr\u00e1rio:** Sem o docker-compose, as equipes devem manter um banco de dados de teste para cada ambiente de teste, incluindo as m\u00e1quinas dos desenvolvedores, e manter todos esses bancos de dados sincronizados para que os resultados dos testes n\u00e3o variem entre os ambientes.\n\n<br/><br/>\n\n## ![\u2714] 4.10 Refatore regularmente usando ferramentas de an\u00e1lise est\u00e1tica\n\n**TL;DR:** O uso de ferramentas de an\u00e1lise est\u00e1tica ajuda fornecendo maneiras objetivas de melhorar a qualidade do c\u00f3digo e manter seu c\u00f3digo sustent\u00e1vel. Voc\u00ea pode adicionar ferramentas de an\u00e1lise est\u00e1tica para seu build de Integra\u00e7\u00e3o Cont\u00ednua (CI) falhar quando encontre code smells. Seus principais pontos de vantagem sobre o linting s\u00e3o a abilidade de inspecionar a qualidade no contexto de m\u00faltiplos arquivos (por exemplo, detectar duplicidades), realizar an\u00e1lises avan\u00e7adas (por exemplo, complexidade de c\u00f3digo), e acompanhar hist\u00f3rico e progresso de problemas de c\u00f3digo. Dois dexemplos de ferramentas que podem ser utilizadas s\u00e3o [Sonarqube](https://www.sonarqube.org/) (mais de 2.600 [stars](https://github.com/SonarSource/sonarqube)) e [Code Climate](https://codeclimate.com/) (mais de 1.500 [stars](https://github.com/codeclimate/codeclimate)).\n\n**Caso contr\u00e1rio:** Com qualidade de c\u00f3digo ruim, bugs e desempenho sempre ser\u00e3o um problema que nenhuma nova biblioteca maravilhosa ou recursos de \u00faltima gera\u00e7\u00e3o podem corrigir.\n\n\ud83d\udd17 [**Leia Mais: Refatora\u00e7\u00e3o!**](/sections/testingandquality/refactoring.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 4.11 Escolha cuidadosamente sua plataforma de Integra\u00e7\u00e3o Cont\u00ednua - CI (Jenkins vs CircleCI vs Travis vs Resto do mundo)\n\n**TL;DR:** Sua plataforma de integra\u00e7\u00e3o cont\u00ednua (CICD) ir\u00e1 hospedar todas as ferramentas de qualidade (por exemplo, teste, lint), ent\u00e3o ela deve vir com um ecosistema de plugins arrebatador. O [Jenkins](https://jenkins.io/) costumava ser o padr\u00e3o de muitos projetos, pois tem a maior comunidade, juntamente com uma poderosa plataforma, ao pre\u00e7o de configura\u00e7\u00e3o complexa que exige uma curva de aprendizado \u00edngreme. Atualmente, ficou bem mais f\u00e1cil para configurar uma solu\u00e7\u00e3o de CI usando ferramentas SaaS como [CircleCI](https://circleci.com) e outras. Essas ferramentas permitem a cria\u00e7\u00e3o de um pipeline de CI flex\u00edvel sem o peso de gerenciar toda a infraestrutura. Eventualmente, \u00e9 um perde e ganha entre robustez e velocidade - escolha seu lado com cuidado!\n\n**Caso contr\u00e1rio:** Escolher algum fornecedor de nicho pode fazer com que voc\u00ea fique engessado quando precisar de alguma personaliza\u00e7\u00e3o avan\u00e7ada. Por outro lado, escolher o Jenkins pode ser uma perda de tempo precioso na configura\u00e7\u00e3o da infraestrutura.\n\n\ud83d\udd17 [**Leia Mais: Escolhendo a plataforma de CI**](/sections/testingandquality/citools.brazilian-portuguese.md)\n\n<br/><br/><br/>\n\n<p align=\"right\"><a href=\"#\u00edndice\">\u2b06 Voltar ao topo</a></p>\n\n# `5. Boas Pr\u00e1ticas de Produ\u00e7\u00e3o`\n\n## ![\u2714] 5.1. Monitoramento!\n\n**TL;DR:** O monitoramento \u00e9 um jogo de descobrir problemas antes que os clientes os encontrem - obviamente deve ser atribu\u00edda muita import\u00e2ncia para isto. O mercado est\u00e1 sobrecarregado de ofertas, portanto, considere come\u00e7ar com a defini\u00e7\u00e3o das m\u00e9tricas b\u00e1sicas que voc\u00ea deve seguir (sugest\u00f5es minhas dentro), depois passe por recursos extras e escolha a solu\u00e7\u00e3o que marca todas as caixas. Acesse o \u2018Gist\u2019 abaixo para uma vis\u00e3o geral das solu\u00e7\u00f5es.\n\n**Caso contr\u00e1rio:** Falha === clientes desapontados. Simples\n\n\ud83d\udd17 [**Leia Mais: Monitoramento!**](/sections/production/monitoring.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.2. Aumente a transpar\u00eancia usando smart logging\n\n**TL;DR:** Logs podem ser um armaz\u00e9m in\u00fatil de instru\u00e7\u00f5es de debug ou o ativador de um belo dashboard que conta a hist\u00f3ria do seu app. Planeje sua plataforma de logs desde o primeiro dia: como os logs s\u00e3o coletados, armazenados e analisados para ter certeza de que as informa\u00e7\u00f5es desejadas possam realmente ser extra\u00eddas, por exemplo, a avalia\u00e7\u00e3o de erro, ap\u00f3s uma transa\u00e7\u00e3o inteira atrav\u00e9s de servi\u00e7os e servidores, etc.\n\n**Caso contr\u00e1rio:** Voc\u00ea acaba com uma caixa preta que \u00e9 dif\u00edcil de raciocinar, ent\u00e3o voc\u00ea come\u00e7a a reescrever todas as declara\u00e7\u00f5es de log para adicionar informa\u00e7\u00f5es adicionais.\n\n\ud83d\udd17 [**Leia Mais: Aumente a transpar\u00eancia usando smart logging**](/sections/production/smartlogging.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.3. Delegue tudo o que for poss\u00edvel (por exemplo, gzip, SSL) a um proxy reverso\n\n**TL;DR:** O Node \u00e9 terrivelmente ruim em fazer tarefas intensas de CPU como gzipping, SSL termination, etc. Voc\u00ea deve usar servi\u00e7os de middleware \u201creais\u201d como nginx, HAproxy ou servi\u00e7os de nuvem.\n\n**Caso contr\u00e1rio:** Seu \u00fanico e pobre thread permanecer\u00e1 ocupado fazendo tarefas de infra-estrutura em vez de lidar com o n\u00facleo da sua aplica\u00e7\u00e3o e o desempenho certamente ser\u00e1 degradado.\n\n\ud83d\udd17 [**Leia Mais: Delegue tudo o que for poss\u00edvel (por exemplo, gzip, SSL) a um proxy reverso**](/sections/production/delegatetoproxy.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.4. Bloqueio de depend\u00eancias\n\n**TL;DR:** Seu c\u00f3digo deve ser id\u00eantico em todos os ambientes, mas, surpreendentemente, o npm permite que as depend\u00eancias derivem entre os ambientes por padr\u00e3o - quando voc\u00ea instala pacotes em v\u00e1rios ambientes, ele tenta buscar a vers\u00e3o mais recente dos pacotes. Supere isso usando arquivos de configura\u00e7\u00e3o do npm, .npmrc, que dir\u00e3o a cada ambiente para salvar a vers\u00e3o exata (n\u00e3o a \u00faltima) de cada pacote. Outra alternativa, para um controle melhor, use o \u201cshirinkwrap\u201d do npm. \\*Atualiza\u00e7\u00e3o: a partir do NPM5, as depend\u00eancias s\u00e3o bloqueadas por padr\u00e3o. O novo gerenciador de pacotes no peda\u00e7o, Yarn, tamb\u00e9m faz isso por padr\u00e3o.\n\n**Caso contr\u00e1rio:** O QA testar\u00e1 completamente o c\u00f3digo e aprovar\u00e1 uma vers\u00e3o que se comportar\u00e1 de maneira diferente na produ\u00e7\u00e3o. Pior ainda, servidores diferentes no mesmo cluster de produ\u00e7\u00e3o podem executar c\u00f3digo diferente.\n\n\ud83d\udd17 [**Leia Mais: Bloqueio de depend\u00eancias**](/sections/production/lockdependencies.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.5. Poupe tempo de atividade do processo usando a ferramenta certa\n\n**TL;DR:** O processo deve continuar e ser reiniciado ap\u00f3s falhas. Para cen\u00e1rios simples, as ferramentas de \"reinicializa\u00e7\u00e3o\", como PM2, podem ser suficientes. Entretanto, no mundo atual \"dockerizado\", as ferramentas de gerenciamento de cluster tamb\u00e9m devem ser consideradas\n\n**Caso contr\u00e1rio:** Rodar dezenas de inst\u00e2ncias sem uma estrat\u00e9gia clara e muitas ferramentas juntas (gerenciamento de cluster, docker, PM2) pode levar o DevOps ao caos.\n\n\ud83d\udd17 [**Leia Mais: Poupe tempo de atividade do processo usando a ferramenta certa**](/sections/production/guardprocess.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.6. Utilize todos os n\u00facleos do processador\n\n**TL;DR:** Em sua forma b\u00e1sica, uma aplica\u00e7\u00e3o Node roda em um \u00fanico n\u00facleo do processador enquanto todos os demais ficam inativos. \u00c9 seu dever replicar o processamento do Node e utilizar todos os processadores. Para aplica\u00e7\u00f5es pequenas/m\u00e9dias voc\u00ea pode usar o Node Cluster ou PM2. Para uma aplica\u00e7\u00e3o maior, considere replicar o processo usando algum cluster do Docker (por exemplo, o K8S ou o ECS) ou scripts de deploy que s\u00e3o baseados no sistema de inicializa\u00e7\u00e3o do Linux (por exemplo, systemd)\n\n**Caso contr\u00e1rio:** Sua aplica\u00e7\u00e3o vai utilizar apenas 25% dos recursos dispon\u00edveis(!) ou talvez at\u00e9 menos. Note que um servidor t\u00edpico possui 4 n\u00facleos de processamento ou mais, o deploy ing\u00eanuo do Node.js utiliza apenas 1 (mesmo usando servi\u00e7os de PaaS como AWS Beanstalk!)\n\n\ud83d\udd17 [**Leia Mais: Utilize todos os n\u00facleos do processador**](/sections/production/utilizecpu.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.7. Crie um \u2018endpoint de manuten\u00e7\u00e3o\u2019\n\n**TL;DR:** Exponha um conjunto de informa\u00e7\u00f5es relacionadas ao sistema, como uso de mem\u00f3ria e REPL, etc, em uma API segura. Embora seja altamente recomendado confiar em ferramentas padr\u00f5es e de battle-tests, algumas informa\u00e7\u00f5es e opera\u00e7\u00f5es valiosas s\u00e3o mais f\u00e1ceis de serem feitas usando c\u00f3digo.\n\n**Caso contr\u00e1rio:** Voc\u00ea perceber\u00e1 que est\u00e1 realizando muitos \u201cdeploys de diagn\u00f3stico\u201d - enviando c\u00f3digo para produ\u00e7\u00e3o apenas para extrair algumas informa\u00e7\u00f5es para fins de diagn\u00f3stico.\n\n\ud83d\udd17 [**Leia Mais: Crie um \u2018endpoint de manuten\u00e7\u00e3o\u2019**](/sections/production/createmaintenanceendpoint.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.8. Descubra erros e tempo de inatividade usando produtos APM\n\n**TL;DR:** Produtos de monitoramento e desempenho (tamb\u00e9m conhecidos como APM) medem a base de c\u00f3digo e a API de forma proativa para que possam ir \u201cautomagicamente\u201d al\u00e9m do monitoramento tradicional e medir a experi\u00eancia geral do usu\u00e1rio entre os servi\u00e7os e camadas. Por exemplo, alguns APMs podem destacar uma transa\u00e7\u00e3o que \u00e9 carregada muito lentamente no lado do usu\u00e1rio final, sugerindo a causa raiz.\n\n**Caso contr\u00e1rio:** Voc\u00ea pode gastar muito esfor\u00e7o medindo o desempenho e os tempos de inatividade da API, provavelmente voc\u00ea nunca saber\u00e1 quais s\u00e3o suas partes de c\u00f3digo mais lentas no cen\u00e1rio do mundo real e como elas afetam o UX.\n\n\ud83d\udd17 [**Leia Mais: Descubra erros e tempo de inatividade usando produtos APM**](/sections/production/apmproducts.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.9. Deixe seu c\u00f3digo pronto para produ\u00e7\u00e3o\n\n**TL;DR:** Programe com o fim em mente, planeje para produ\u00e7\u00e3o desde o primeiro dia. Isso pode parecer vago, ent\u00e3o eu compilei algumas dicas de desenvolvimento que est\u00e3o relacionadas \u00e0 manuten\u00e7\u00e3o de produ\u00e7\u00e3o (clique no Gist abaixo).\n\n**Caso contr\u00e1rio:** Uma pessoa fera em TI/DevOps n\u00e3o salvar\u00e1 um sistema mal escrito.\n\n\ud83d\udd17 [**Leia Mais: Deixe seu c\u00f3digo pronto para produ\u00e7\u00e3o**](/sections/production/productioncode.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.10. Me\u00e7a e proteja o uso de mem\u00f3ria\n\n**TL;DR:** O Node.js tem uma rela\u00e7\u00e3o controversa com o uso de mem\u00f3ria: o motor v8 possui limites no uso de mem\u00f3ria (1.4GB) e existem caminhos conhecidos para vazamentos de mem\u00f3ria no c\u00f3digo do Node - portanto, observar a mem\u00f3ria do processo do Node \u00e9 uma obriga\u00e7\u00e3o. Em aplica\u00e7\u00f5es pequenas, voc\u00ea pode medir a mem\u00f3ria periodicamente usando comandos shell, mas em aplica\u00e7\u00e3o m\u00e9dia-grande considere utilizar um sistema de monitoramento de mem\u00f3ria robusto.\n\n**Caso contr\u00e1rio:** A mem\u00f3ria de seus processos pode vazar cem megabytes por dia, assim como aconteceu no [Walmart](https://www.joyent.com/blog/walmart-node-js-memory-leak).\n\n\ud83d\udd17 [**Leia Mais: Me\u00e7a e proteja o uso de mem\u00f3ria**](/sections/production/measurememory.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.11. Deixe seus recursos de frontend fora do Node\n\n**TL;DR:** Sirva conte\u00fado de frontend usando um middleware dedicado (nginx, S3, CDN) pois o desempenho do Node fica realmente prejudicado quando se lida com muitos arquivos est\u00e1ticos devido ao seu modelo single threaded (segmento \u00fanico).\n\n**Caso contr\u00e1rio:** Seu \u00fanico thread do Node ficar\u00e1 ocupado fazendo streaming the centenas de arquivos de html/imagens/angular/react ao inv\u00e9s de alocar todo seu recurso para a tarefa que ele foi designado - servir conte\u00fado din\u00e2mico.\n\n\ud83d\udd17 [**Leia Mais: Deixe seus recursos de frontend fora do Node**](/sections/production/frontendout.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.12. Seja stateless, mate seus Servidores quase todos os dias\n\n**TL;DR:** Armazene qualquer tipo de dados (por exemplo, sess\u00f5es de usu\u00e1rio, cache, arquivos de upload) em armazenamentos externos. Considere \u2018matar\u2019 seus servidores peri\u00f3dicamente ou utilize plataformas \u2018serverless\u2019 (por exemplo, AWS Lambda) que for\u00e7am explicitamente um comportamento stateless.\n\n**Caso contr\u00e1rio:** Falha em um determinado servidor resultar\u00e1 em tempo de inatividade da aplica\u00e7\u00e3o, em vez de apenas matar uma m\u00e1quina defeituosa. Al\u00e9m do mais, dimensionar a elasticidade ser\u00e1 mais desafiador devido \u00e0 depend\u00eancia de um servidor espec\u00edfico.\n\n\ud83d\udd17 [**Leia Mais: Seja stateless, mate seus Servidores quase todos os dias**](/sections/production/bestateless.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.13. Utilize ferramentas que detectam vulnerabilidades automaticamente\n\n**TL;DR:** Mesmo as depend\u00eancias mais confi\u00e1veis, como o Express, t\u00eam vulnerabilidades conhecidas (de tempos em tempos) que podem colocar um sistema em risco. Isso pode ser contornado usando ferramentas comunit\u00e1rias e comerciais que constantemente verificam vulnerabilidades e avisam (localmente ou no Github). Algumas podem at\u00e9 corrig\u00ed-las imediatamente.\n\n**Caso contr\u00e1rio:** Manter seu c\u00f3digo limpo com vulnerabilidades sem ferramentas dedicadas exigir\u00e1 o acompanhamento constante de publica\u00e7\u00f5es online sobre novas amea\u00e7as. Bem entendiante.\n\n\ud83d\udd17 [**Leia Mais: Utilize ferramentas que detectam vulnerabilidades automaticamente**](/sections/production/detectvulnerabilities.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.14. Atribua\u2018TransactionId\u2019 para cada declara\u00e7\u00e3o de log\n\n**TL;DR:** Atribua o mesmo identificador, transaction-id: {some value}, para cada entrada de log dentro de um mesmo request. Depois, ao inspecionar erros em logs, conclua facilmente o que aconteceu antes e depois. Infelizmente, isso n\u00e3o \u00e9 f\u00e1cil de se conseguir no Node, devido \u00e0 sua natureza ass\u00edncrona. Veja exemplos de c\u00f3digo.\n\n**Caso contr\u00e1rio:** Observar um log de erros de produ\u00e7\u00e3o sem o contexto - o que aconteceu antes - torna muito mais dif\u00edcil e mais lento raciocinar sobre o problema.\n\n\ud83d\udd17 [**Leia Mais: Atribua \u2018TransactionId\u2019 para cada declara\u00e7\u00e3o de log**](/sections/production/assigntransactionid.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.15. Defina NODE_ENV=production\n\n**TL;DR:** Defina a vari\u00e1vel de ambiente NODE_ENV para \u2018production\u2019 ou \u2018development\u2019 para sinalizar se as otimiza\u00e7\u00f5es de produ\u00e7\u00e3o devem ser ativadas - muitos pacotes npm determinam o ambiente atual e otimizam seu c\u00f3digo para produ\u00e7\u00e3o.\n\n**Caso contr\u00e1rio:** Omitir esta simples propriedade pode degradar muito o desempenho. Por exemplo, ao utilizar o Express para renderiza\u00e7\u00e3o do lado do servidor, omitir o NODE_ENV o torna mais lento!\n\n\ud83d\udd17 [**Leia Mais: Defina NODE_ENV=production**](/sections/production/setnodeenv.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.16. Projete deploys autom\u00e1ticos, at\u00f4micos e com tempo de inatividade zero\n\n**TL;DR:** Pesquisas mostram que times que executam muitos deploys, reduzem a probabilidade de problemas graves em produ\u00e7\u00e3o. Deploys r\u00e1pidos e automatizados que n\u00e3o necessitam de processos manuais arriscados e significativo tempo de inatividade, melhoram o processo de deploy. Provavelmente, voc\u00ea ir\u00e1 alcan\u00e7ar isso usando Docker, combinado com ferramentas de CI, pois elas se tornaram o padr\u00e3o do setor para deploy simplificado.\n\n**Caso contr\u00e1rio:** Deploys demorados -> tempo de inatividade de produ\u00e7\u00e3o e erro relacionado a humanos -> equipe n\u00e3o-confiante com os deploys -> menos implanta\u00e7\u00f5es e recursos.\n\n<br/><br/>\n\n## ![\u2714] 5.17. Use uma vers\u00e3o LTS do Node.js\n\n**TL;DR:** Certifique de que voc\u00ea est\u00e1 usando uma vers\u00e3o LTS do Node.js para receber corre\u00e7\u00e3o de bugs cr\u00edticos, atualiza\u00e7\u00f5es de seguran\u00e7a e melhorias de performance.\n\n**Caso contr\u00e1rio:** Bugs recentemente descobertos e vulnerabilidades podem ser usados para explorar uma aplica\u00e7\u00e3o em produ\u00e7\u00e3o, e sua aplica\u00e7\u00e3o pode se tornar incompat\u00edvel com v\u00e1rios m\u00f3dulos e mais dif\u00edcil de manter.\n\n\ud83d\udd17 [**Leia Mais: Use uma vers\u00e3o LTS do Node.js**](/sections/production/LTSrelease.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 5.18. N\u00e3o direcione logs dentro do aplicativo\n\n**TL;DR:** O destino dos logs n\u00e3o devem ser codificados na unha por desenvolvedores, dentro do c\u00f3digo da aplica\u00e7\u00e3o. Ao inv\u00e9s disso, deve ser definido pelo ambiente de execu\u00e7\u00e3o no qual a aplica\u00e7\u00e3o \u00e9 executada. Desenvolvedores devem escrever logs para stdout usando um utilit\u00e1rio logger e depois deixar o ambiente de execu\u00e7\u00e3o (container, servidor, etc) canalizar o fluxo do stdout para o destino apropriado (por exemplo: Splunk, Graylog, ElasticSearch, etc).\n\n**Caso contr\u00e1rio:** Aplica\u00e7\u00f5es manipulando o roteamento de log === dif\u00edcil de dimensionar, perda de logs, separa\u00e7\u00e3o ruim de preocupa\u00e7\u00f5es.\n\n\ud83d\udd17 [**Leia Mais: Roteamento de Logs**](/sections/production/logrouting.brazilian-portuguese.md)\n\n<br/><br/><br/>\n\n<p align=\"right\"><a href=\"#\u00edndice\">\u2b06 Voltar ao topo</a></p>\n\n# `6. Boas Pr\u00e1ticas em Seguran\u00e7a`\n\n<div align=\"center\">\n<img src=\"https://img.shields.io/badge/OWASP%20Threats-Top%2010-green.svg\" alt=\"54 items\"/>\n</div>\n\n## ![\u2714] 6.1. Adote as regras de seguran\u00e7a do linter\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20XSS%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Fa\u00e7a uso de plugins de linter relacionados \u00e0 seguran\u00e7a, como por exemplo o [eslint-plugin-security](https://github.com/nodesecurity/eslint-plugin-security) para capturar vulnerabilidades de seguran\u00e7a e erros o mais cedo poss\u00edvel, na melhor das hip\u00f3teses, enquanto est\u00e3o sendo codificados. Isso pode ajudar a detectar pontos fracos de seguran\u00e7a, como usar o eval, invocar um processo filho ou importar um m\u00f3dulo com string literal (por exemplo, input do usu\u00e1rio). Clique em \u2018Leia Mais\u2019 abaixo para ver exemplos de c\u00f3digos que ser\u00e3o capturados por um linter de seguran\u00e7a.\n\n**Caso contr\u00e1rio:** O que poderia ser um ponto fraco de seguran\u00e7a durante o desenvolvimento, pode se tornar um grande problema no ambiente de produ\u00e7\u00e3o. Al\u00e9m disso, o projeto pode n\u00e3o seguir pr\u00e1ticas de seguran\u00e7a de c\u00f3digo consistentes, levando a vulnerabilidades sendo introduzidas ou segredos confidenciais comprometidos em reposit\u00f3rios remotos.\n\n\ud83d\udd17 [**Leia Mais: Regras de Lint**](sections/security/lintrules.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.2. Limite requests simult\u00e2neos usando um middleware\n\n<a href=\"https://www.owasp.org/index.php/Denial_of_Service\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Ataques DOS s\u00e3o muito populares e relativamente f\u00e1ceis de conduzir. Implemente uma limita\u00e7\u00e3o de taxa, usando um servi\u00e7o externo como balanceadores de carga de nuvem, firewalls de nuvem, nginx, o pacote [rate-limiter-flexible](https://www.npmjs.com/package/rate-limiter-flexible), ou (para aplica\u00e7\u00f5es menores e menos cr\u00edticas) um middleware limitador de taxa (por exemplo, [express-rate-limit](https://www.npmjs.com/package/express-rate-limit))\n\n**Caso contr\u00e1rio:** Uma aplica\u00e7\u00e3o pode estar sujeita a um ataque resultando em uma queda do servi\u00e7o, onde usu\u00e1rios reais recebem um servi\u00e7o degradado ou indispon\u00edvel.\n\n\ud83d\udd17 [**Leia Mais: Implementando limitador de taxa**](sections/security/limitrequests.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.3 Extraia segredos dos config files ou use pacotes para criptograf\u00e1-los\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A3:Sensitive%20Data%20Exposure%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Nunca armazene segredos em textos simples em arquivos de configura\u00e7\u00e3o ou c\u00f3digos fonte. Em vez disso, use sistemas de gerenciamento secreto como produtos Vault, Kubernetes/Docker Secrets, ou use vari\u00e1veis de ambiente. Como resultado final, os segredos armazenados no c\u00f3digo fonte devem ser criptografados e gerenciados(rolling keys, expiring, auditing, etc). Fa\u00e7a uso de hooks de pre-commit/push para evitar que fa\u00e7a o commit de secredos acidentalmente.\n\n**Caso contr\u00e1rio:** O controle de origem, mesmo para reposit\u00f3rios privados, pode ser tornado p\u00fablico por engano, quando todos os segredos s\u00e3o expostos. O acesso ao controle de origem para uma parte externa fornecer\u00e1 inadvertidamente acesso a sistemas relacionados (bancos de dados, APIs, servi\u00e7os, etc.).\n\n\ud83d\udd17 [**Leia Mais: Gerenciamento de segredos**](sections/security/secretmanagement.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.4. Impe\u00e7a vulnerabilidades de query injection com bibliotecas ORM/ODM\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Para evitar SQL/NoSQL injection e outros ataques maliciosos, sempre fa\u00e7a uso de um ORM/ODM ou de uma biblioteca de banco de dados que proteja os dados ou suporte consultas parametrizadas nomeadas ou indexadas, e que cuide da valida\u00e7\u00e3o de entrada do usu\u00e1rio para os tipos esperados. Nunca use apenas template strings do JavaScript ou concatena\u00e7\u00e3o de string para injetar valores em queries, pois isto abre sua aplica\u00e7\u00e3o para muitas vulnerabilidades. Todas as bibliotecas respeit\u00e1veis de acesso a dados do Node.js (por exemplo, [Sequelize](https://github.com/sequelize/sequelize), [Knex](https://github.com/tgriesser/knex), [mongoose](https://github.com/Automattic/mongoose)) possuem prote\u00e7\u00e3o contra ataques de inje\u00e7\u00e3o.\n\n**Caso contr\u00e1rio:** A entrada de usu\u00e1rios n\u00e3o validados pode levar \u00e0 inje\u00e7\u00e3o do operador ao trabalhar com MongoDB para NoSQL e n\u00e3o usar um sistema pr\u00f3prio ou ORM ir\u00e3o permitir facilmente um ataque de SQL injection, criando uma grande vulnerabilidade.\n\n\ud83d\udd17 [**Leia Mais: Preven\u00e7\u00e3o de query injection usando bibliotecas de ORM/ODM**](/sections/security/ormodmusage.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.5. Cole\u00e7\u00e3o gen\u00e9rica de boas pr\u00e1ticas de seguran\u00e7a\n\n**TL;DR:** Esta \u00e9 uma cole\u00e7\u00e3o de conselhos de seguran\u00e7a que n\u00e3o est\u00e3o relacionadas diretamente com Node.js - a implementa\u00e7\u00e3o do Node n\u00e3o \u00e9 muito diferente comparado a outras linguagens. Clique em \u201cleia mais\u201d para dar uma olhada.\n\n\ud83d\udd17 [**Leia Mais: Boas pr\u00e1ticas comuns de seguran\u00e7a**](/sections/security/commonsecuritybestpractices.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.6. Ajuste os headers de resposta HTTP para uma seguran\u00e7a aprimorada\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Sua aplica\u00e7\u00e3o deve estar utilizando headers seguros para evitar que invasores fa\u00e7am ataques comuns, como scripts entre sites (XSS), clickjacking, dentre outros ataques maliciosos. Eles podem ser configurados facilmente usando m\u00f3dulos como o [helmet](https://www.npmjs.com/package/helmet).\n\n**Caso contr\u00e1rio:** Invasores podem realizar ataques diretos aos usu\u00e1rios de sua aplica\u00e7\u00e3o, levando a grandes vulnerabilidades de seguran\u00e7a.\n\n\ud83d\udd17 [**Leia Mais: Usando headers seguros em sua aplica\u00e7\u00e3o**](/sections/security/secureheaders.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.7. Inspecione constante e automaticamente por depend\u00eancias vulner\u00e1veis\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Known%20Vulnerabilities%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Com o ecosistema do npm, \u00e9 comum um projeto ter v\u00e1rias depend\u00eancias. Depend\u00eancias sempre devem ser checadas em caso de novas vulnerabilidades serem encontradas. Utilize ferramentas como [npm audit](https://docs.npmjs.com/cli/audit) ou [snyk](https://snyk.io/) para rastrear, monitorar e corrigir depend\u00eancias vulner\u00e1veis. Integre estas ferramentas com a configura\u00e7\u00e3o de seu CI, para que voc\u00ea possa capturar uma depend\u00eancia vulner\u00e1vel antes que ela afete o ambiente de produ\u00e7\u00e3o.\n\n**Caso contr\u00e1rio:** Um invasor pode detectar seu framework web e atacar todas suas vulnerabilidades.\n\n\ud83d\udd17 [**Leia Mais: Seguran\u00e7a de depend\u00eancias**](/sections/security/dependencysecurity.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.8. Evite usar a biblioteca de criptografia do Node.js para manipular senhas, use Bcrypt\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Senhas ou segredos (chaves de API), devem ser armazenadas usando um hash seguro + salt function como bcrypt, que deve ser a escolha preferencial em rela\u00e7\u00e3o \u00e0 sua implementa\u00e7\u00e3o de JavaScript, devido a raz\u00f5es de desempenho e seguran\u00e7a.\n\n**Caso contr\u00e1rio:** Senhas ou segredos que s\u00e3o persistidos sem o uso de uma fun\u00e7\u00e3o segura, s\u00e3o vulner\u00e1veis a for\u00e7a bruta e ataques de dicion\u00e1rio que levar\u00e3o eventualmente \u00e0 sua divulga\u00e7\u00e3o.\n\n\ud83d\udd17 [**Leia Mais: Use o Bcrypt**](/sections/security/bcryptpasswords.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.9. Fuja de sa\u00eddas HTML, JS e CSS\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Dados n\u00e3o confi\u00e1veis que s\u00e3o enviados para o browser podem ser executados em inv\u00e9s de serem exibidos. Isso est\u00e1 sendo comumente referido como um ataque de script entre sites (XSS). Evite isto, usando bibliotecas dedicadas que marcam explicitamente os dados como conte\u00fado puro que nunca deve ser executado (por exemplo: encoding, escaping).\n\n**Caso contr\u00e1rio:** Um invasor pode armazenar um c\u00f3digo JavaScript malicioso em seu banco de dados, que ser\u00e1 enviado para os clientes.\n\n\ud83d\udd17 [**Leia Mais: Evite sa\u00eddas**](/sections/security/escape-output.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.10. Valide os esquemas de entrada JSON\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7: XSS%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Valide as requisi\u00e7\u00f5es do body e garanta que elas atendem as expectativas e falhem r\u00e1pido se n\u00e3o atender. Para evitar o t\u00e9dio de c\u00f3digos de valida\u00e7\u00e3o para cada rota, voc\u00ea pode usar leves esquemas de valida\u00e7\u00e3o baseados em JSON, como [jsonschema](https://www.npmjs.com/package/jsonschema) ou [joi](https://www.npmjs.com/package/joi)\n\n**Caso contr\u00e1rio:** Sua generosidade e abordagem permissiva aumentam muito a superf\u00edcie de ataque e incentivam o invasor a experimentar muitas entradas at\u00e9 encontrar alguma combina\u00e7\u00e3o para travar a aplica\u00e7\u00e3o.\n\n\ud83d\udd17 [**Leia Mais: Valide os esquemas de entrada JSON**](/sections/security/validation.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.11. Ajude a inserir JWTs em listas negras\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Ao usar JSON Web Tokens (por exemplo, com [Passport.js](https://github.com/jaredhanson/passport)), por padr\u00e3o n\u00e3o existem mecanismos para revogar o acesso de tokens problem\u00e1ticos. Uma vez descoberta alguma atividade maliciosa do usu\u00e1rio, n\u00e3o h\u00e1 como impedi-lo de acessar o sistema, desde que ele tenha um token v\u00e1lido. Abrande isso implementando uma lista negra de tokens n\u00e3o confi\u00e1veis que s\u00e3o validados em cada solicita\u00e7\u00e3o.\n\n**Caso contr\u00e1rio:** Tokens expirados ou extraviados, podem ser usados maliciosamente por terceiros para acessar uma aplica\u00e7\u00e3o e para representar o propriet\u00e1rio do token.\n\n\ud83d\udd17 [**Leia Mais: Blacklist de JSON Web Tokens**](/sections/security/expirejwt.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.12. Evite ataques de for\u00e7a bruta contra autoriza\u00e7\u00e3o\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Uma t\u00e9cnica simples e poderosa \u00e9 limitar as tentativas de autoriza\u00e7\u00e3o usando duas m\u00e9tricas:\n           \n1. A primeiro \u00e9 o n\u00famero de tentativas consecutivas com falha do mesmo ID/nome e endere\u00e7o IP exclusivos do usu\u00e1rio.\n2. A segundo \u00e9 o n\u00famero de tentativas malsucedidas de um endere\u00e7o IP durante um longo per\u00edodo de tempo. Por exemplo, bloqueie um endere\u00e7o IP se ele fizer 100 tentativas com falha em um dia.\n\n**Caso contr\u00e1rio:** Um invasor pode emitir tentativas ilimitadas de senha automatizada para obter acesso a contas com privil\u00e9gios em uma aplica\u00e7\u00e3o.\n\n\ud83d\udd17 [**Leia Mais: Limitando a taxa de login**](/sections/security/login-rate-limit.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.13. Rode o Node.js como um usu\u00e1rio que n\u00e3o seja root\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A5:Broken%20Access%20Access%20Control-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Existe um cen\u00e1rio comum em que o Node.js \u00e9 executado como um usu\u00e1rio root com permiss\u00f5es ilimitadas. Por exemplo, esse \u00e9 o comportamento padr\u00e3o em cont\u00eaineres do Docker. \u00c9 recomend\u00e1vel criar um usu\u00e1rio n\u00e3o raiz e associ\u00e1-lo \u00e0 imagem do Docker (exemplos abaixo) ou executar o processo em nome desse usu\u00e1rio chamando o container com o sinalizador \"-u username\".\n\n**Caso contr\u00e1rio:** Um invasor que consiga executar um script no servidor obt\u00e9m poder ilimitado sobre a m\u00e1quina local (por exemplo, alterar o iptable e redirecionar o tr\u00e1fego para seu servidor).\n\n\ud83d\udd17 [**Leia Mais: Rode o Node.js com um usu\u00e1rio n\u00e3o raiz**](/sections/security/non-root-user.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.14. Limite o tamanho do payload usando um proxy reverso ou um middleware\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Quanto maior o payload do body, mais dif\u00edcil ser\u00e1 o processamento de um \u00fanico segmento. Esta \u00e9 uma oportunidade para os invasores colocarem seus servidores de joelhos sem uma enorme quantidade de solicita\u00e7\u00f5es (ataques DOS / DDOS). Reduza isso limitando o tamanho do corpo das solicita\u00e7\u00f5es recebidas (por exemplo, firewall, ELB) ou configurando o [express body parser](https://github.com/expressjs/body-parser) para aceitar somente cargas de tamanho pequeno.\n\n**Caso contr\u00e1rio:** Sua aplica\u00e7\u00e3o ter\u00e1 que lidar com solicita\u00e7\u00f5es grandes, incapazes de processar o outro trabalho importante que ele precisa realizar, o que leva a implica\u00e7\u00f5es de desempenho e vulnerabilidade em rela\u00e7\u00e3o a ataques DOS.\n\n\ud83d\udd17 [**Leia Mais: Limite o tamanho dos payloads**](/sections/security/requestpayloadsizelimit.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.15. Evite instru\u00e7\u00f5es eval do JavaScript\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** `eval` \u00e9 do mal, pois permite a execu\u00e7\u00e3o de um c\u00f3digo JavaScript personalizado durante o tempo de execu\u00e7\u00e3o. Isso n\u00e3o \u00e9 apenas uma preocupa\u00e7\u00e3o de desempenho, mas tamb\u00e9m uma importante preocupa\u00e7\u00e3o de seguran\u00e7a devido ao c\u00f3digo JavaScript malicioso que pode ser originado da entrada do usu\u00e1rio. Outra feature da linguagem que deve ser evitada \u00e9 o construtor `new Function` constructor. `setTimeout` e `setInterval` tamb\u00e9m n\u00e3o devem ser receber c\u00f3digo JavaScript din\u00e2mico.\n\n**Caso contr\u00e1rio:** o c\u00f3digo JavaScript malicioso encontra um caminho para um texto passado para o eval ou outras fun\u00e7\u00f5es de avalia\u00e7\u00e3o em tempo real da linguagem JavaScript, e ter\u00e1 acesso total \u00e0s permiss\u00f5es do JavaScript na p\u00e1gina. Essa vulnerabilidade geralmente se manifesta como um ataque XSS.\n\n\ud83d\udd17 [**Leia Mais: Evite instru\u00e7\u00f5es eval do JavaScript**](/sections/security/avoideval.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.16. Evite que RegEx maliciosos sobrecarreguem sua execu\u00e7\u00e3o de thread \u00fanico\n\n<a href=\"https://www.owasp.org/index.php/Denial_of_Service\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Regular Expressions, embora sejam \u00fateis, representam uma amea\u00e7a real para aplicativos JavaScript em geral, e a plataforma Node.js em particular .Uma entrada do usu\u00e1rio para correspond\u00eancia de texto pode exigir uma quantidade maior de ciclos de CPU para processar. O processamento RegEx pode ser ineficiente at\u00e9 um ponto em que uma \u00fanica solicita\u00e7\u00e3o que valida 10 palavras pode bloquear todo o loop de eventos por 6 segundos e botar \ud83d\udd25 na CPU. Por essa raz\u00e3o, prefira pacotes de valida\u00e7\u00e3o de terceiros como [validator.js](https://github.com/chriso/validator.js) ao inv\u00e9s de escrever seus pr\u00f3prios pardr\u00f5es de Regex, ou fa\u00e7a uso do [safe-regex](https://github.com/substack/safe-regex) para detectar padr\u00f5es vulner\u00e1veis de regex.\n\n**Caso contr\u00e1rio:** Express\u00f5es regulares mal escritas podem ser suscet\u00edveis a ataques de Regular Expresssion DoS, que ir\u00e3o bloquear completamente o loop de eventos. Por exemplo, o popular pacote `moment` foi encontrado com vulnerabilidades de uso de RegEx maliciosos em novembro de 2017.\n\n\ud83d\udd17 [**Leia Mais: Evite RegEx maliciosos**](/sections/security/regex.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.17. Evite o carregamento de m\u00f3dulos usando uma vari\u00e1vel\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Evite fazer require ou importar outro arquivo com um caminho que tenha sido fornecido como par\u00e2metro devido \u00e0 preocupa\u00e7\u00e3o de que ele possa ter se originado da entrada do usu\u00e1rio. Esta regra pode ser estendida para acessar arquivos em geral (ou seja, `fs.readFile()`) ou outro acesso a recursos confidenciais com vari\u00e1veis din\u00e2micas provenientes da entrada do usu\u00e1rio. O linter [Eslint-plugin-security](https://www.npmjs.com/package/eslint-plugin-security) pode pegar esses padr\u00f5es e avisar o quanto antes.\n\n**Caso contr\u00e1rio:** A entrada de usu\u00e1rio mal-intencionada pode encontrar o caminho para um par\u00e2metro usado para require de arquivos adulterados, por exemplo, um arquivo carregado anteriormente no sistema de arquivos ou para acessar arquivos de sistema j\u00e1 existentes.\n\n\ud83d\udd17 [**Leia Mais: Carregamento seguro de m\u00f3dulos**](/sections/security/safemoduleloading.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.18. Rode c\u00f3digos n\u00e3o seguros em uma sandbox\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Quando a tarefa for executar c\u00f3digo externo que \u00e9 fornecido em tempo de execu\u00e7\u00e3o (por exemplo, plug-in), use qualquer tipo de ambiente de execu\u00e7\u00e3o 'sandbox' que isole e proteja o c\u00f3digo principal em rela\u00e7\u00e3o ao plug-in. Isso pode ser feito usando um processo dedicado (por exemplo, cluster.fork ()), ambiente serverless ou pacotes npm dedicados que atuam como uma sandbox.\n\n**Caso contr\u00e1rio:** Um plugin pode atacar atrav\u00e9s de uma infinita variedade de op\u00e7\u00f5es, como loops infinitos, sobrecarga de mem\u00f3ria e acesso a vari\u00e1veis sens\u00edveis do ambiente de processo.\n\n\ud83d\udd17 [**Leia Mais: Rode c\u00f3digos n\u00e3o seguros em uma sandbox**](/sections/security/sandbox.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.19. Tome cuidado extra ao trabalhar com processos filhos\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a> <a href=\"https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Evite usar processos filhos quando poss\u00edvel e valide e limpe a entrada para mitigar os ataques de shell injection se ainda precisar. Prefira usar `child_process.execFile` que, por defini\u00e7\u00e3o, s\u00f3 executar\u00e1 um \u00fanico comando com um conjunto de atributos e n\u00e3o permitir\u00e1 a expans\u00e3o de par\u00e2metros do shell.\n\n**Caso contr\u00e1rio:** O uso ing\u00eanuo de processos filhos pode resultar na execu\u00e7\u00e3o de comandos remotos ou em ataques de shell injection, devido \u00e0 entrada do usu\u00e1rio mal-intencionado passada para um comando do sistema n\u00e3o-autorizado.\n\n\ud83d\udd17 [**Leia Mais: Tenha cautela ao trabalhar com processos filhos**](/sections/security/childprocesses.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.20. Oculte detalhes de erros dos usu\u00e1rios\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Um manipulador de erros integrado do express oculta os detalhes de erros por padr\u00e3o. Entretanto, s\u00e3o grandes as chances de voc\u00ea implementar sua pr\u00f3pria l\u00f3gica para manipular erros com objetos de erro customizados (considerado por muitos, a melhor pr\u00e1tica). Se voc\u00ea faz isso, tenha certeza de que n\u00e3o est\u00e1 retornando o objeto Error inteiro para o cliente, pois ele pode conter detalhes confidenciais da aplica\u00e7\u00e3o.\n\n**Caso contr\u00e1rio:** Detalhes confidenciais da aplica\u00e7\u00e3o como caminhos e arquivos do servidor, m\u00f3dulos de terceiros em uso e outros workflows internos da aplica\u00e7\u00e3o poderiam ser explorados e expostos por um invasor.\n\n\ud83d\udd17 [**Leia Mais: Oculte detalhes de erros dos usu\u00e1rios**](/sections/security/hideerrors.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.21. Configure 2FA para o npm ou Yarn\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Qualquer passo na cadeia de desenvolvimento deve ser protegido com o MFA (multi-factor authentication, ou autentica\u00e7\u00e3o em v\u00e1rias etapas), e o npm / Yarn \u00e9 uma boa oportunidade para os invasores poderem colocar as m\u00e3os na senha de algum desenvolvedor. Usando as credenciais de desenvolvedor, os invasores podem injetar c\u00f3digo malicioso em bibliotecas que s\u00e3o amplamente instaladas em projetos e servi\u00e7os. Talvez, at\u00e9 mesmo por toda a rede de internet, se publicado abertamente. Ativando a 2-factor-authentication (autentica\u00e7\u00e3o em duas etapas) no npm, reduz a quase zero as chances de invasores alterarem seu c\u00f3digo.\n\n**Caso contr\u00e1rio:** [Voc\u00ea j\u00e1 ouviu falar sobre o desenvolvedor do eslint cuja senha foi hackeada?](https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8)\n\n<br/><br/>\n\n## ![\u2714] 6.22. Modifique as configura\u00e7\u00f5es do middleware de sess\u00e3o\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Cada framework e tecnologia web tem seus pontos fracos conhecidos - dizer aos invasores qual framework utilizamos \u00e9 uma grande ajuda para eles. Usar as configura\u00e7\u00f5es padr\u00f5es para middlewares de sess\u00e3o pode expor sua aplica\u00e7\u00e3o - e ataques espec\u00edficos ao framework, semelhantes ao heade `X-Powered-By` header. Tente ocultar qualquer coisa que possa identificar ou revelar sua stack (por exemplo, Node.js, express).\n\n**Caso contr\u00e1rio:** Cookies podem ser enviados atrav\u00e9s de conex\u00f5es n\u00e3o seguras, e um hacker pode usar a sess\u00e3o do usu\u00e1rio para identificar o framework utilizado na aplica\u00e7\u00e3o, bem como vulnerabilidades espec\u00edficas do m\u00f3dulo.\n\n\ud83d\udd17 [**Leia Mais: Seguran\u00e7a de cookies e sess\u00f5es**](/sections/security/sessions.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.23. Evite ataques do DOS definindo explicitamente quando um processo deve falhar\n\n<a href=\"https://www.owasp.org/index.php/Denial_of_Service\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** O processo do Node ir\u00e1 falhar quando os erros n\u00e3o forem tratados. Muitas boas pr\u00e1ticas recomendam sair, mesmo que um erro tenha sido detectado e resolvido. O Express, por exemplo, ir\u00e1 falhar em qualquer erro ass\u00edncrono - a menos que voc\u00ea envolva rotas com uma cl\u00e1usula catch. Isso abre um ponto de ataque muito f\u00e1cil para os hackers que reconhecem qual entrada faz o processo falhar e enviam repetidamente o mesmo request. N\u00e3o existe solu\u00e7\u00e3o instant\u00e2nea para isso, mas algumas t\u00e9cnicas podem aliviar a dor: Alertar com severidade cr\u00edtica sempre que um processo falha devido a um erro n\u00e3o tratado, validar a entrada e evitar travar o processo devido \u00e0 entrada inv\u00e1lida do usu\u00e1rio, envolver todas as rotas com uma cl\u00e1usula catch e considerar n\u00e3o travar quando um erro \u00e9 originado em uma solicita\u00e7\u00e3o o que acontece globalmente).\n\n**Caso contr\u00e1rio:** Este \u00e9 apenas um palpite: dado muitos aplica\u00e7\u00f5es Node.js, se tentarmos passar um JSON vazio para todas as solicita\u00e7\u00f5es POST, um punhado de aplica\u00e7\u00f5es falhar\u00e1. Nesse ponto, podemos apenas repetir o envio da mesma solicita\u00e7\u00e3o para derrubar as aplica\u00e7\u00f5es com facilidade.\n\n<br/><br/>\n\n## ![\u2714] 6.24. Impe\u00e7a redirecionamentos n\u00e3o seguros\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A1-Injection\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Redirecionamentos que n\u00e3o validam a entrada do usu\u00e1rio podem permitir que invasores iniciem tentativas de phishing, roubem credenciais de usu\u00e1rios e executem outras a\u00e7\u00f5es mal-intencionadas.\n\n**Caso contr\u00e1rio:** Se um invasor descobrir que voc\u00ea n\u00e3o est\u00e1 validando informa\u00e7\u00f5es externas fornecidas pelo usu\u00e1rio, ele poder\u00e1 explorar essa vulnerabilidade postando links especialmente em f\u00f3runs, m\u00eddias sociais e outros locais p\u00fablicos para que os usu\u00e1rios cliquem.\n\n\ud83d\udd17 [**Leia Mais: Impe\u00e7a redirecionamentos n\u00e3o seguros**](/sections/security/saferedirects.brazilian-portuguese.md)\n\n<br/><br/>\n\n## ![\u2714] 6.25. Evite publicar segredos no registro do npm\n\n<a href=\"https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration\" target=\"_blank\"><img src=\"https://img.shields.io/badge/%E2%9C%94%20Amea\u00e7as%20OWASP%20-%20A6:Configura\u00e7\u00e3o%20Incorreta%20de%20Seguran\u00e7a%20-green.svg\" alt=\"\"/></a>\n\n**TL;DR:** Precau\u00e7\u00f5es devem ser tomadas para evitar o risco de publica\u00e7\u00e3o acidental de segredos nos registros p\u00fablicos do npm. Um arquivo `.npmignore` pode ser usado para colocar arquivos ou pastas espec\u00edficos em uma blacklist, ou a lista `files` no `package.json` pode atuar como uma whitelist.\n\n**Caso contr\u00e1rio:** As chaves, as senhas ou outros segredos da API do seu projeto est\u00e3o sujeitos a abusos por qualquer pessoa que os encontre, o que pode resultar em perda financeira, falsifica\u00e7\u00e3o de identidade e outros riscos.\n\n\ud83d\udd17 [**Leia Mais: Evite publicar segredos**](/sections/security/avoid_publishing_secrets.brazilian-portuguese.md)\n<br/><br/><br/>\n\n<p align=\"right\"><a href=\"#\u00edndice\">\u2b06 Voltar ao topo</a></p>\n\n# `7. Boas Pr\u00e1ticas em Performance`\n\n## Nossos colaboradores est\u00e3o trabalhando nesta se\u00e7\u00e3o. [Gostaria de participar?](https://github.com/i0natan/nodebestpractices/issues/256)\n\n## ![\u2714] 7.1. Prefira m\u00e9todos JS nativos ao inv\u00e9s de utilit\u00e1rios de usu\u00e1rio, como o Lodash\n\n**TL;DR:** Muitas vezes \u00e9 mais complicado usar bibliotecas de utilit\u00e1rios como o `lodash` e `underscore` sobre os m\u00e9todos nativos, pois leva a depend\u00eancias desnecess\u00e1rias e desempenho mais lento.\nTenha em mente que, com a introdu\u00e7\u00e3o do novo motor V8 juntamente com os novos padr\u00f5es ES, os m\u00e9todos nativos foram aprimorados de tal forma que agora ele tem cerca de 50% a mais de desempenho que as bibliotecas de utilit\u00e1rios.\n\n**Caso contr\u00e1rio:** Voc\u00ea ter\u00e1 que manter projetos de menor desempenho onde voc\u00ea poderia simplesmente ter usado o que **j\u00e1 estava** dispon\u00edvel ou lidar com mais algumas linhas em troca de mais alguns arquivos.\n\n\ud83d\udd17 [**Leia Mais: Prefira m\u00e9todos nativos ao inv\u00e9s de utilit\u00e1rios do usu\u00e1rio como Lodash**](/sections/performance/nativeoverutil.brazilian-portuguese.md)\n\n<br/><br/><br/>\n\n# Feitos\n\nPara manter este guia e deix\u00e1-lo atualizado, estamos constantemente atualizando e aprimorando as diretrizes e as pr\u00e1ticas recomendadas com a ajuda da comunidade. Voc\u00ea pode acompanhar nossos [feitos](https://github.com/i0natan/nodebestpractices/milestones) e se juntar aos grupos de trabalho, caso queira contribuir com este projeto.\n\n<br/>\n\n## Tradu\u00e7\u00f5es\n\nTodas as tradu\u00e7\u00f5es s\u00e3o contribui\u00e7\u00f5es da comunidade. N\u00f3s ficaremos felizes em obter ajuda com tradu\u00e7\u00f5es conclu\u00eddas, em andamento, ou mesmo com novas tradu\u00e7\u00f5es!\n\n### Tradu\u00e7\u00f5es conclu\u00eddas\n\n- ![BR](/assets/flags/BR.png) [Portugu\u00eas Brasileiro](/README.brazilian-portuguese.md) - Cortesia de [Marcelo Melo](https://github.com/marcelosdm)\n- ![CN](/assets/flags/CN.png) [Chin\u00eas](README.chinese.md) - Cortesia de [Matt Jin](https://github.com/mattjin)\n\n### Tradu\u00e7\u00f5es em andamento\n\n- ![FR](/assets/flags/FR.png) [Franc\u00eas](https://github.com/gaspaonrocks/nodebestpractices/blob/french-translation/README.french.md) ([Discuss\u00e3o](https://github.com/i0natan/nodebestpractices/issues/129))\n- ![HE](/assets/flags/HE.png) Hebraico ([Discuss\u00e3o](https://github.com/i0natan/nodebestpractices/issues/156))\n- ![KR](/assets/flags/KR.png) [Coreano](https://github.com/i0natan/nodebestpractices/blob/korean-translation/README.md) ([Discuss\u00e3o](https://github.com/i0natan/nodebestpractices/issues/94))\n- ![RU](/assets/flags/RU.png) [Russo](https://github.com/i0natan/nodebestpractices/blob/russian-translation/README.russian.md) ([Discuss\u00e3o](https://github.com/i0natan/nodebestpractices/issues/454))\n- ![ES](/assets/flags/ES.png) [Espanhol](https://github.com/i0natan/nodebestpractices/blob/spanish-translation/README.spanish.md) ([Discuss\u00e3o](https://github.com/i0natan/nodebestpractices/issues/95))\n- ![TR](/assets/flags/TR.png) Turco ([Discuss\u00e3o](https://github.com/i0natan/nodebestpractices/issues/139))\n\n<br/><br/>\n\n## Comit\u00ea Diretivo\n\nConhe\u00e7a os membros do comit\u00ea diretivo - as pessoas que trabalham juntas para fornecer orienta\u00e7\u00e3o e dire\u00e7\u00e3o futura para o projeto. Al\u00e9m disso, cada membro do comit\u00ea lidera um projeto rastreado em nossos [projetos do Github](https://github.com/i0natan/nodebestpractices/projects).\n\n<img align=\"left\" width=\"100\" height=\"100\" src=\"assets/images/members/yoni.png\">\n\n[Yoni Goldberg](https://github.com/i0natan)\n<a href=\"https://twitter.com/goldbergyoni\"><img src=\"assets/images/twitter-s.png\" width=\"16\" height=\"16\"></img></a>\n<a href=\"https://goldbergyoni.com\"><img src=\"assets/images/www.png\" width=\"16\" height=\"16\"></img></a>\n\nConsultor de Node.js independente, que trabalha com clientes nos EUA, Europa e Israel, na cria\u00e7\u00e3o de aplica\u00e7\u00f5es Node dimension\u00e1veis em grande escala. Muitas das melhores pr\u00e1ticas acima foram publicadas primeiro em um post em seu blog em [goldbergyoni.com](https://goldbergyoni.com). Encontre-o como @goldbergyoni ou me@goldbergyoni.com\n\n<br/>\n\n<img align=\"left\" width=\"100\" height=\"100\" src=\"assets/images/members/bruno.png\">\n\n[Bruno Scheufler](https://github.com/BrunoScheufler)\n<a href=\"https://brunoscheufler.com/\"><img src=\"assets/images/www.png\" width=\"16\" height=\"16\"></img></a>\n\n\ud83d\udcbb full-stack web engineer e entusiasta de Node.js & GraphQL\n\n<br/>\n\n<img align=\"left\" width=\"100\" height=\"100\" src=\"assets/images/members/kyle.png\">\n\n[Kyle Martin](https://github.com/js-kyle)\n<a href=\"https://twitter.com/kylemartin_93\"><img src=\"assets/images/twitter-s.png\" width=\"16\" height=\"16\"></img></a>\n<a href=\"https://www.linkedin.com/in/kylemartinnz\"><img src=\"assets/images/linkedin.png\" width=\"16\" height=\"16\"></img></a>\n\nFull Stack Developer e Engenheiro de Confiabilidade de Sites com sede na Nova Zel\u00e2ndia, interessados \u200b\u200bem seguran\u00e7a de aplicativos da Web, e arquitetando e construindo aplicativos Node.js para executar em escala global.\n\n<br/>\n\n<img align=\"left\" width=\"100\" height=\"100\" src=\"assets/images/members/sagir.png\">\n\n[Sagir Khan](https://github.com/sagirk)\n<a href=\"https://twitter.com/sagir_k\"><img src=\"assets/images/twitter-s.png\" width=\"16\" height=\"16\"></img></a>\n<a href=\"https://sagirk.com\"><img src=\"assets/images/www.png\" width=\"16\" height=\"16\"></img></a>\n<a href=\"https://linkedin.com/in/sagirk\"><img src=\"assets/images/linkedin.png\" width=\"16\" height=\"16\"></img></a>\n\nEspecialista profundo em JavaScript e seu ecossistema - React, Node.js, MongoDB, praticamente qualquer coisa que envolva o uso de JavaScript/JSON em qualquer camada do sistema - criando produtos usando a plataforma da web para as marcas mais reconhecidas do mundo. Membro individual da \"Node.js Foundation\", colaborando em \"Community Committee's Website Redesign Initiative\".\n\n<br/>\n\n## Colaboradores\n\nObrigado a todos nossos colaboradores! \ud83d\ude4f\n\nNossos colaboradores s\u00e3o membros que est\u00e3o contribuindo com o reposit\u00f3rio em base regular, sugerindo novas pr\u00e1ticas recomendadas, triando problemas, analisando solicita\u00e7\u00f5es de pull e muito mais. Se voc\u00ea estiver interessado em nos ajudar a orientar milhares de pessoas a criar melhores aplica\u00e7\u00f5es Node.js, leia nossas [diretrizes de colaborador](/.operations/CONTRIBUTING.md) \ud83c\udf89\n\n| <a href=\"https://github.com/idori\" target=\"_blank\"><img src=\"assets/images/members/ido.png\" width=\"75\" height=\"75\"></a> | <a href=\"https://github.com/TheHollidayInn\" target=\"_blank\"><img src=\"assets/images/members/keith.png\" width=\"75\" height=\"75\"></a> |\n| :--: | :--: |\n| [Ido Richter (Founder)](https://github.com/idori) | [Keith Holliday](https://github.com/TheHollidayInn) |\n\n### Colaboradores anteriores\n\n| <a href=\"https://github.com/refack\" target=\"_blank\"><img src=\"assets/images/members/refael.png\" width=\"50\" height=\"50\"></a> |\n| :--: |\n| [Refael Ackermann](https://github.com/refack) |\n\n<br/>\n\n## Thank You Notes\n\nWe appreciate any contribution, from a single word fix to a new best practice. View our contributors and [contributing documentation here!](CONTRIBUTORS.md)\n\n<br/><br/><br/>\n"}, {"repo": "wuyouzhuguli/SpringAll", "language": "Java", "readme_contents": "## Spring \u7cfb\u5217\u6559\u7a0b\n\u8be5\u4ed3\u5e93\u4e3a\u4e2a\u4eba\u535a\u5ba2[https://mrbird.cc](https://mrbird.cc)\u4e2dSpring\u7cfb\u5217\u6e90\u7801\uff0c\u5305\u542bSpring Boot\u3001Spring Boot & Shiro\u3001Spring Cloud\uff0cSpring Boot & Spring Security & Spring Security OAuth2\uff0c\u5982\u679c\u8be5\u7cfb\u5217\u6559\u7a0b\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u8fd8\u8bf7\u70b9\u4e2astar\u7ed9\u4e88\u7cbe\u795e\u652f\u6301\uff01\ud83d\udc24\n\n### Spring Boot\u6559\u7a0b \n1. [\u5f00\u542fSpring Boot](https://mrbird.cc/%E5%BC%80%E5%90%AFSpring-Boot.html)\n2. [Spring Boot\u57fa\u7840\u914d\u7f6e](https://mrbird.cc/Spring-Boot%20basic%20config.html)\n3. [Spring Boot\u4e2d\u4f7f\u7528MyBatis](https://mrbird.cc/Spring-Boot%20Mybatis.html)\n4. [Spring Boot\u4e2d\u4f7f\u7528JdbcTemplate](https://mrbird.cc/Spring-Boot%20JdbcTemplate.html)\n5. [Spring Boot MyBatis\u914d\u7f6eDruid\u591a\u6570\u636e\u6e90](https://mrbird.cc/Spring-Boot-MyBatis%20Druid.html)\n6. [Spring Boot JdbcTemplate\u914d\u7f6eDruid\u591a\u6570\u636e\u6e90](https://mrbird.cc/Spring-Boot-JdbcTemplate%20Druid.html)\n7. [Spring Boot AOP\u8bb0\u5f55\u7528\u6237\u64cd\u4f5c\u65e5\u5fd7](https://mrbird.cc/Spring-Boot-AOP%20log.html)\n8. [Spring Boot\u4e2d\u4f7f\u7528thymeleaf](https://mrbird.cc/Spring-Boot%E4%BD%BF%E7%94%A8thymeleaf.html)\n9. [Spring Boot\u4e2d\u4f7f\u7528Redis\u7f13\u5b58\u6570\u636e](https://mrbird.cc/Spring-Boot%20cache.html)\n10. [Spring Boot\u4e2d\u4f7f\u7528Ehcache\u7f13\u5b58\u6570\u636e](https://mrbird.cc/Spring-Boot%20cache.html)\n11. [Spring Boot\u4e2d\u7684JSON\u6280\u672f](https://mrbird.cc/Spring-Boot%20JSON.html)\n12. [Spring Boot\u4e2d\u7f16\u5199\u5355\u5143\u6d4b\u8bd5](https://mrbird.cc/Spring-Boot%20TESTing.html)\n13. [Spring Boot\u6574\u5408Swagger2\u6784\u5efaRESTful API](https://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html)\n14. [\u4f7f\u7528Actuator\u76d1\u63a7Spring Boot\u5e94\u7528](https://mrbird.cc/Acutator-Spring-Boot.html)\n15. [\u4f7f\u7528Spring Boot\u53d1\u9001\u90ae\u4ef6](https://mrbird.cc/Spring-Boot-Email.html)\n16. [\u4f7f\u7528Spring Boot Admin\u76d1\u63a7\u670d\u52a1](https://mrbird.cc/Spring-Boot-Admin.html)\n17. [Spring Boot Devtools\u70ed\u90e8\u7f72](https://mrbird.cc/Spring-Boot-Devtools.html)\n18. [Spring Boot logback\u65e5\u5fd7\u914d\u7f6e](https://mrbird.cc/Spring-Boot-logback.html)\n19. [Spring Boot\u9879\u76ee\u6253\u5305\u6210war\u5305](https://mrbird.cc/Spring-Boot%20war.html)\n20. [Linux\u4e0b\u90e8\u7f72Spring Boot jar](https://mrbird.cc/Linux%20Spring-Boot-jar.html)\n21. [Spring Boot\u4e2d\u4f7f\u7528Jsoup\u9632\u5fa1XSS\u653b\u51fb](https://mrbird.cc/Jsoup%20XSS.html)\n22. [Spring Boot\u5f02\u5e38\u5904\u7406](https://mrbird.cc/Spring-Boot-Exception.html)\n23. [Spring Boot\u4e2d\u4f7f\u7528\u8fc7\u6ee4\u5668\u548c\u62e6\u622a\u5668](https://mrbird.cc/Spring-Boot-Filter-Interceptor.html)\n24. [Spring Boot\u6574\u5408MyBatis\u901a\u7528Mapper\u548cPageHelper](https://mrbird.cc/MyBatis%20common%20Mapper%20PageHelper.html)\n26. [\u6df1\u5165\u5b66\u4e60Spring Boot\u81ea\u52a8\u88c5\u914d](https://mrbird.cc/deepin-springboot-autoconfig.html)\n27. [\u6df1\u5165\u5b66\u4e60Spring Boot\u4e2d\u7684SpringApplication](https://mrbird.cc/deepin-springboot-application.html)\n28. [Spring Boot\u914d\u5408Hibernate Validator\u53c2\u6570\u6821\u9a8c](https://mrbird.cc/Spring-Boot-Hibernate-Validator-Params-Check.html)\n29. [\u81ea\u5b9a\u4e49Spring Boot \u5185\u5bb9\u534f\u5546](https://mrbird.cc/Spring-Boot-Diy-Resolver.html)\n30. [Spring Boot \u4e2d\u5904\u7406\u8de8\u57df](https://mrbird.cc/Spring-Boot-Deal-CORS.html)\n31. [Spring Boot \u4e2d\u7684\u5f02\u6b65\u8c03\u7528](https://mrbird.cc/Spring-Boot-Async.html)\n32. [Spring Boot \u6574\u5408Kafka](https://mrbird.cc/Spring-Boot-Kafka.html)\n33. [Spring Boot\u6574\u5408Mongo DB](https://mrbird.cc/Spring-Boot-Mongo-DB-CRUD.html)\n34. [Spring Boot 2.0 WebFlux\u7f16\u7a0b](https://mrbird.cc/Spring-Boot-2-0-WebFlux.html)\n35. [Spring Boot WebFlux\u589e\u5220\u6539\u67e5\u6837\u4f8b](https://mrbird.cc/Spring-Boot-WebFlux-CRUD.html)\n\n\n### Spring Boot & Shiro\u6559\u7a0b\n1. [Spring Boot Shiro\u7528\u6237\u8ba4\u8bc1](https://mrbird.cc/Spring-Boot-shiro%20Authentication.html)\n2. [Spring Boot Shiro Remember Me](https://mrbird.cc/Spring-Boot-Shiro%20Remember-Me.html)\n3. [Spring Boot Shiro\u6743\u9650\u63a7\u5236](https://mrbird.cc/Spring-Boot-Shiro%20Authorization.html)\n4. [Spring Boot Shiro Redis](https://mrbird.cc/Spring-Boot-Shiro%20cache.html)\n5. [Spring Boot Shiro Ehcache](https://mrbird.cc/Spring-Boot-Shiro%20cache.html)\n6. [Spring Boot Thymeleaf\u4e2d\u4f7f\u7528Shiro\u6807\u7b7e](https://mrbird.cc/Spring-Boot-Themeleaf%20Shiro%20tag.html)\n7. [Spring Boot Shiro\u5728\u7ebf\u4f1a\u8bdd\u7ba1\u7406](https://mrbird.cc/Spring-Boot-Shiro%20session.html)\n8. [Spring Boot Shiro\u6574\u5408JWT](https://github.com/wuyouzhuguli/SpringAll/tree/master/62.Spring-Boot-Shiro-JWT)\n\n### Spring Boot & Security\u6559\u7a0b\n1. [Spring Boot\u4e2d\u5f00\u542fSpring Security](https://mrbird.cc/Spring-Boot&Spring-Security.html)\n2. [Spring Security\u81ea\u5b9a\u4e49\u7528\u6237\u8ba4\u8bc1](https://mrbird.cc/Spring-Security-Authentication.html)\n3. [Spring Security\u6dfb\u52a0\u56fe\u5f62\u9a8c\u8bc1\u7801](https://mrbird.cc/Spring-Security-ValidateCode.html)\n4. [Spring Security\u6dfb\u52a0\u8bb0\u4f4f\u6211\u529f\u80fd](https://mrbird.cc/Spring-Security-RememberMe.html)\n5. [Spring Security\u77ed\u4fe1\u9a8c\u8bc1\u7801\u767b\u5f55](https://mrbird.cc/Spring-Security-SmsCode.html)\n6. [Spring Security Session\u7ba1\u7406](https://mrbird.cc/Spring-Security-Session-Manage.html)\n7. [Spring Security\u9000\u51fa\u767b\u5f55](https://mrbird.cc/Spring-Security-logout.html)\n8. [Spring Security\u6743\u9650\u63a7\u5236](https://mrbird.cc/Spring-Security-Permission.html)\n9. [Spring Security OAuth2\u5165\u95e8](https://mrbird.cc/Spring-Security-OAuth2-Guide.html)\n10. [Spring Security OAuth2\u81ea\u5b9a\u4e49Token\u83b7\u53d6\u65b9\u5f0f](https://mrbird.cc/Spring-Security-OAuth2-Customize.html)\n11. [Spring Security OAuth2\u81ea\u5b9a\u4e49\u4ee4\u724c\u914d\u7f6e](https://mrbird.cc/Spring-Security-OAuth2-Token-Config.html)\n12. [Spring Security OAuth2\u5355\u70b9\u767b\u5f55](https://mrbird.cc/Spring-Security-OAuth2-SSO.html)\n### Spring Cloud\u6559\u7a0b\n1. [\u521d\u8bc6Spring Cloud\u4e0e\u5fae\u670d\u52a1](https://mrbird.cc/Spring-Cloud%20and%20MicroService.html)\n2. [Spring Cloud Eureka\u670d\u52a1\u6cbb\u7406](https://mrbird.cc/Spring-Cloud-Eureka.html)\n3. [Spring Cloud Ribbon\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861](https://mrbird.cc/Spring-Cloud-Ribbon-LoadBalance.html)\n4. [Spring Cloud Hystrix\u670d\u52a1\u5bb9\u9519](https://mrbird.cc/Spring-Cloud-Hystrix-Circuit-Breaker.html)\n5. [Spring Cloud Hystrix Dashboard\u4eea\u8868\u76d8](https://mrbird.cc/Spring-Cloud-Hystrix-Dashboard.html)\n6. [Spring Cloud Hystrix Dashboard\u4eea\u8868\u76d8 & RabbitMQ](https://mrbird.cc/Spring-Cloud-Hystrix-Dashboard.html)\n7. [Spring Cloud Feign \u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528](https://mrbird.cc/Spring-Cloud-Feign.html)\n8. [Spring Cloud Zuul\u670d\u52a1\u7f51\u5173](https://mrbird.cc/Spring-Cloud-Zuul-Router.html)\n9. [Spring Cloud Config\u7edf\u4e00\u914d\u7f6e\u7ba1\u7406](https://mrbird.cc/Spring-Cloud-Config.html)\n10. [\u4f7f\u7528Spring Cloud Bus\u5237\u65b0\u914d\u7f6e](https://mrbird.cc/Spring-Cloud-Bus.html)\n11. [\u4f7f\u7528Spring Cloud Sleuth\u8ddf\u8e2a\u5fae\u670d\u52a1](https://mrbird.cc/Spring-Cloud-sleuth.html)\n12. [Spring Cloud Consul\u670d\u52a1\u6cbb\u7406](https://mrbird.cc/Spring-Cloud-Consul.html)\n\n### Spring Boot && Dubbo\u6559\u7a0b\n1. [Spring Boot\u6574\u5408Dubbo&Zookeeper](https://mrbird.cc/Spring-Boot-Dubbo-Zookeeper.html)\n2. [\u76d1\u63a7Dubbo\u670d\u52a1](https://mrbird.cc/dubbo-mointor.html)\n3. [Dubbo\u7684\u9ad8\u53ef\u7528](https://mrbird.cc/Dubbo-High-Availability.html)\n\n## Spring\n1. [\u6df1\u5165\u5b66\u4e60Spring\u7ec4\u4ef6\u6ce8\u518c](https://mrbird.cc/Spring-Bean-Regist.html)\n2. [\u6df1\u5165\u5b66\u4e60Spring Bean\u751f\u547d\u5468\u671f](https://mrbird.cc/Spring-Bean-Lifecycle.html)\n\n\u6301\u7eed\u66f4\u65b0\u4e2d...\n"}, {"repo": "halo-dev/halo", "language": "Java", "readme_contents": "<h1 align=\"center\"><a href=\"https://github.com/halo-dev\" target=\"_blank\">Halo</a></h1>\n\n> Halo \u662f\u4e00\u6b3e\u73b0\u4ee3\u5316\u7684\u4e2a\u4eba\u72ec\u7acb\u535a\u5ba2\u7cfb\u7edf\uff0c\u7ed9\u4e60\u60ef\u5199\u535a\u5ba2\u7684\u540c\u5b66\u591a\u4e00\u4e2a\u9009\u62e9\u3002\n\n\n\n<p align=\"center\">\n<a href=\"#\"><img alt=\"JDK\" src=\"https://img.shields.io/badge/JDK-1.8-yellow.svg?style=flat-square\"/></a>\n<a href=\"https://github.com/halo-dev/halo/releases\"><img alt=\"GitHub release\" src=\"https://img.shields.io/github/release/halo-dev/halo.svg?style=flat-square\"/></a>\n<a href=\"https://github.com/halo-dev/halo/releases\"><img alt=\"GitHub All Releases\" src=\"https://img.shields.io/github/downloads/halo-dev/halo/total.svg?style=flat-square\"></a>\n<a href=\"https://hub.docker.com/r/ruibaby/halo\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/ruibaby/halo?style=flat-square\"></a>\n<a href=\"https://github.com/halo-dev/halo/commits\"><img alt=\"GitHub last commit\" src=\"https://img.shields.io/github/last-commit/halo-dev/halo.svg?style=flat-square\"></a>\n<a href=\"https://travis-ci.org/halo-dev/halo\"><img alt=\"Travis CI\" src=\"https://img.shields.io/travis/halo-dev/halo.svg?style=flat-square\"/></a>\n</p>\n\n------------------------------\n\n## \u7b80\u4ecb\n\n**Halo** [\u02c8he\u026alo\u028a]\uff0c\u610f\u4e3a\u5149\u73af\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5f53\u6210\u62fc\u97f3\u8bfb(\u54c8\u55bd)\u3002\n\n\u8f7b\u5feb\uff0c\u7b80\u6d01\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u4f7f\u7528 Java \u5f00\u53d1\u7684\u535a\u5ba2\u7cfb\u7edf\u3002\n\n> [\u5b98\u65b9\u793e\u533a](https://bbs.halo.run) | [QQ \u4ea4\u6d41\u7fa4](https://jq.qq.com/?_wv=1027&k=5tnr930) | [Telegram \u4ea4\u6d41\u7fa4](https://t.me/HaloBlog) | [Telegram \u9891\u9053](https://t.me/halo_dev) | [WeHalo \u5c0f\u7a0b\u5e8f](https://github.com/aquanlerou/WeHalo)\u3002\n\n## \u5feb\u901f\u5f00\u59cb\n\n### \u4e0b\u8f7d\u6700\u65b0\u7684 Halo \u5b89\u88c5\u5305\n\n```bash\ncurl -L https://github.com/halo-dev/halo/releases/download/v1.1.1/halo-1.1.1.jar --output halo-latest.jar\n```\n\n\u6216\u8005\n\n```bash\nwget https://github.com/halo-dev/halo/releases/download/v1.1.1/halo-1.1.1.jar -O halo-latest.jar\n```\n\n### \u542f\u52a8 Halo\n\n```bash\njava -jar halo-latest.jar\n```\n\n\u8be6\u7ec6\u6587\u6863\u8bf7\u79fb\u6b65\uff1a<https://halo.run/guide>\n\n## \u535a\u5ba2\u793a\u4f8b\n\n\u8bf7\u79fb\u6b65\uff1a <https://github.com/halo-dev/halo/issues/26>\u3002\n\n## \u5468\u8fb9\n\n- \u540e\u53f0\u7ba1\u7406\uff08halo-admin\uff09\uff1a<https://github.com/halo-dev/halo-admin>\n- \u72ec\u7acb\u8bc4\u8bba\u6a21\u5757\uff08halo-comment\uff09\uff1a<https://github.com/halo-dev/halo-comment>\n- \u7ba1\u7406 APP\uff08halo-app\uff09\uff1a<https://github.com/halo-dev/halo-app>\n- \u4e3b\u9898\u4ed3\u5e93\uff1a<https://halo.run/theme>\n\n## \u8bb8\u53ef\u8bc1\n\n[![license](https://img.shields.io/github/license/halo-dev/halo.svg?style=flat-square)](https://github.com/halo-dev/halo/blob/master/LICENSE)\n\n> Halo \u4f7f\u7528 GPL-v3.0 \u534f\u8bae\u5f00\u6e90\uff0c\u8bf7\u5c3d\u91cf\u9075\u5b88\u5f00\u6e90\u534f\u8bae\uff0c\u5373\u4fbf\u662f\u5728\u4e2d\u56fd\u3002\n\n## \u8d21\u732e\n\u53c2\u8003 [CONTRIBUTING](./CONTRIBUTING.md)\u3002\n\n## \u6350\u8d60\n\n> \u5982\u679c Halo \u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u53ef\u4ee5\u8bf7\u4f5c\u8005\u559d\u676f\u2615\ufe0f\u3002\n\n| \u652f\u4ed8\u5b9d/\u5fae\u4fe1/QQ  |\n| :------------: |\n| <img src=\"https://i.loli.net/2018/12/23/5c1f68ce9b884.png\" width=\"200\"/>  |\n\n## \u9884\u89c8\u56fe\n\n![theme-anatole.png](https://i.loli.net/2019/09/11/OQtKEWcCe8xYBph.png)\n\n![theme-walker.png](https://i.loli.net/2019/09/11/F6CjZKJX1N2x5dU.png)\n\n![theme-icarus.png](https://i.loli.net/2019/09/11/4lO2wNCLiqyIJmR.png)\n\n![theme-destiny.png](https://i.loli.net/2019/09/11/q4t86cCPUEwlGMn.png)\n\n![install.png](https://i.loli.net/2019/09/11/Iu1eMzZDg6frw97.png)\n\n![admin-login.png](https://i.loli.net/2019/09/11/3CahVJAvXngwiQu.png)\n\n![admin-dashboard.png](https://i.loli.net/2019/09/11/G5R6bOweYoiZKEv.png)\n\n![admin-posts.png](https://i.loli.net/2019/09/11/uMHSeIkmC4iPzfJ.png)\n\n![admin-post-edit.png](https://i.loli.net/2019/09/11/ucDh2tOZLJGTyHX.png)\n\n![admin-post-publish.png](https://i.loli.net/2019/09/11/UwC3ecsRpAMONgq.png)\n\n![admin-post-settings.png](https://i.loli.net/2019/09/11/bxmJ7OTirtvV4Gs.png)\n\n![admin-attachment.png](https://i.loli.net/2019/09/11/B5UlX6vAgZ3bzaJ.png)\n\n![admin-profile.png](https://i.loli.net/2019/09/11/mMageUXv5EDpfJQ.png)\n\n![admin-themes.png](https://i.loli.net/2019/09/11/FVA953Ljswd4c8G.png)\n\n![admin-options.png](https://i.loli.net/2019/09/11/TK6SeMdVj1xcrDw.png)"}, {"repo": "serverless/serverless", "language": "JavaScript", "readme_contents": "[![Serverless Application Framework AWS Lambda API Gateway](https://s3.amazonaws.com/assets.github.serverless/readme-serverless-framework.gif)](http://serverless.com)\n\n[![serverless](http://public.serverless.com/badges/v3.svg)](http://www.serverless.com)\n[![Build Status](https://travis-ci.org/serverless/serverless.svg?branch=master)](https://travis-ci.org/serverless/serverless)\n[![npm version](https://badge.fury.io/js/serverless.svg)](https://badge.fury.io/js/serverless)\n[![codecov](https://codecov.io/gh/serverless/serverless/branch/master/graph/badge.svg)](https://codecov.io/gh/serverless/serverless)\n[![gitter](https://img.shields.io/gitter/room/serverless/serverless.svg)](https://gitter.im/serverless/serverless)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/serverless/badge.svg)](https://snyk.io/test/github/serverless/serverless)\n[![license](https://img.shields.io/npm/l/serverless.svg)](https://www.npmjs.com/package/serverless)\n\n[Website](http://www.serverless.com) \u2022 [Docs](https://serverless.com/framework/docs/) \u2022 [Newsletter](https://serverless.com/subscribe/) \u2022 [Swag](https://teespring.com/stores/serverless) \u2022 [Gitter](https://gitter.im/serverless/serverless) \u2022 [Forum](http://forum.serverless.com) \u2022 [Meetups](https://www.meetup.com/pro/serverless/) \u2022 [Twitter](https://twitter.com/goserverless) \u2022 [We're Hiring](https://serverless.com/company/jobs/) \u2022 [Try Pro](https://dashboard.serverless.com)\n\n**The Serverless Framework** \u2013 Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.\n\nThe Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It's also completely extensible via plugins.\n\nServerless is an MIT open-source project, actively maintained by a full-time, venture-backed team.\n\n<a href=\"https://www.youtube.com/watch?v=-Nf0ui3qP2E\" target=\"_blank\">Watch the video overview here.</a>\n\n[![serverless components notice](https://s3.amazonaws.com/assets.github.serverless/announcement-serverless-components-3.gif)](https://github.com/serverless/components)\n\n## Contents\n\n<img align=\"right\" width=\"400\" src=\"https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/email/sls-getting-started.gif\" />\n\n- [Quick Start](#quick-start)\n- [Examples](https://github.com/serverless/examples)\n- [Services](#services)\n- [Features](#features)\n- [Plugins](https://github.com/serverless/plugins)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Consultants](#consultants)\n- [Licensing](#licensing)\n- [Previous Version 0.5.x](#v.5)\n\n## <a name=\"quick-start\"></a>Quick Start\n\n[Watch the video guide here](https://serverless.com/framework/) or follow the steps below to create and deploy your first serverless microservice in minutes.\n\n1. **Install via npm:**\n\n```bash\nnpm install -g serverless\n```\n\n2. **Set-up your [Provider Credentials](./docs/providers/aws/guide/credentials.md)**. [Watch the video on setting up credentials](https://www.youtube.com/watch?v=HSd9uYj2LJA)\n\n3. **Create a Service:**\n\nYou can create a new service or [install existing services](#how-to-install-a-service).\n\n```bash\n# Create a new Serverless Service/Project\nserverless create --template aws-nodejs --path my-service\n# Change into the newly created directory\ncd my-service\n```\n\n4. **Deploy a Service:**\n\nUse this when you have made changes to your Functions, Events or Resources in `serverless.yml` or you simply want to deploy all changes within your Service at the same time.\n\n```bash\nserverless deploy -v\n```\n\n5. **Deploy the Function:**\n\nUse this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.\n\n```bash\nserverless deploy function -f hello\n```\n\n6. **Invoke the Function on AWS:**\n\nInvokes an AWS Lambda Function on AWS and returns logs.\n\n```bash\nserverless invoke -f hello -l\n```\n\n7. **Invoke the Function on your machine:**\n\nInvokes an AWS Lambda Function on your local machine and returns logs.\n\n```bash\nserverless invoke local -f hello -l\n```\n\n8. **Fetch the Function Logs:**\n\nOpen up a separate tab in your console and stream all logs for a specific Function using this command.\n\n```bash\nserverless logs -f hello -t\n```\n\n9. **Remove the Service:**\n\nRemoves all Functions, Events and Resources from your AWS account.\n\n```bash\nserverless remove\n```\n\n### How to Install a Service:\n\nThis is a convenience method to install a pre-made Serverless Service locally by downloading the Github repo and unzipping it. Services are listed below.\n\n```bash\nserverless install -u https://github.com/your-url-to-the-serverless-service\n```\n\nCheck out the [Serverless Framework Guide](./docs/providers/aws/guide/README.md) for more information.\n\n## <a name=\"services\"></a>Services (V1.0)\n\nThe following are services you can instantly install and use by running `serverless install --url <service-github-url>`\n\n- [serverless-examples](https://github.com/serverless/examples)\n- [CRUD](https://github.com/pmuens/serverless-crud) - CRUD service, [Scala Port](https://github.com/jahangirmohammed/serverless-crud-scala)\n- [CRUD with FaunaDB](https://github.com/faunadb/serverless-crud) - CRUD service using FaunaDB\n- [CRUD with S3](https://github.com/tscanlin/serverless-s3-crud) - CRUD service using S3\n- [CRUD with Flask and SQLAlchemy](https://github.com/jetbridge/sls-flask) - Python [CRUD API service](https://blog.jetbridge.com/framework/) with Flask, SQLAlchemy and Swagger\n- [GraphQL Boilerplate](https://github.com/serverless/serverless-graphql) - GraphQL application Boilerplate service\n- [Authentication](https://github.com/laardee/serverless-authentication-boilerplate) - Authentication boilerplate service\n- [Mailer](https://github.com/eahefnawy/serverless-mailer) - Service for sending emails\n- [Kinesis streams](https://github.com/pmuens/serverless-kinesis-streams) - Service to showcase Kinesis stream support\n- [DynamoDB streams](https://github.com/pmuens/serverless-dynamodb-streams) - Service to showcase DynamoDB stream support\n- [Landingpage backend](https://github.com/pmuens/serverless-landingpage-backend) - Landingpage backend service to store E-Mail addresses\n- [Facebook Messenger Chatbot](https://github.com/pmuens/serverless-facebook-messenger-bot) - Chatbot for the Facebook Messenger platform\n- [Lambda chaining](https://github.com/pmuens/serverless-lambda-chaining) - Service which chains Lambdas through SNS\n- [Secured API](https://github.com/pmuens/serverless-secured-api) - Service which exposes an API key accessible API\n- [Authorizer](https://github.com/eahefnawy/serverless-authorizer) - Service that uses API Gateway custom authorizers\n- [Thumbnails](https://github.com/eahefnawy/serverless-thumbnails) - Service that takes an image url and returns a 100x100 thumbnail\n- [Boilerplate](https://github.com/eahefnawy/serverless-boilerplate) - Opinionated boilerplate\n- [ES6 + Jest](https://github.com/americansystems/serverless-es6-jest) - ES6 + Jest Boilerplate\n- [PHP](https://github.com/ZeroSharp/serverless-php) - Call a PHP function from your lambda\n- [Ruby](https://github.com/stewartlord/serverless-ruby) - Call a Ruby function from your lambda\n- [Slack App](https://github.com/johnagan/serverless-slack-app) - Slack App Boilerplate with OAuth and Bot actions\n- [Swift](https://github.com/choefele/swift-lambda-app) - Full-featured project template to develop Lambda functions in Swift\n- [Cloudwatch Alerts on Slack](https://github.com/dav009/serverless-aws-alarms-notifier) - Get AWS Cloudwatch alerts notifications on Slack\n\n**Note**: the `serverless install` command will only work on V1.0 or later.\n\n## <a name=\"features\"></a>Features\n\n- Supports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, & F#\n- Manages the lifecycle of your serverless architecture (build, deploy, update, delete).\n- Safely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).\n- Functions can be grouped (\"serverless services\") for easy management of code, resources & processes, across large projects & teams.\n- Minimal configuration and scaffolding.\n- Built-in support for multiple stages.\n- Optimized for CI/CD workflows.\n- Loaded with automation, optimization and best practices.\n- 100% Extensible: Extend or modify the Framework and its operations via Plugins.\n- An ecosystem of serverless services and plugins.\n- A passionate and welcoming community!\n\n## <a name=\"contributing\"></a>Contributing\n\nWe love our contributors! Please read our [Contributing Document](CONTRIBUTING.md) to learn how you can start working on the Framework yourself.\n\nCheck out our [help wanted](https://github.com/serverless/serverless/labels/help%20wanted) or [good first issue](https://github.com/serverless/serverless/labels/good%20first%20issue) labels to find issues we want to move forward on with your help.\n\n## <a name=\"community\"></a>Community\n\n- [Email Updates](http://eepurl.com/b8dv4P)\n- [Serverless Forum](http://forum.serverless.com)\n- [Gitter Chatroom](https://gitter.im/serverless/serverless)\n- [Serverless Meetups](http://www.meetup.com/serverless/)\n- [Stackoverflow](http://stackoverflow.com/questions/tagged/serverless-framework)\n- [Facebook](https://www.facebook.com/serverless)\n- [Twitter](https://twitter.com/goserverless)\n- [Contact Us](mailto:hello@serverless.com)\n\n## <a name=\"consultants\"></a>Consultants\n\nThese consultants use the Serverless Framework and can help you build your serverless projects.\n\n- [Andrew Griffiths](https://www.andrewgriffithsonline.com/) - Independent consultant specialising in serverless technology\n- [Trek10](https://www.trek10.com/)\n- [Parallax](https://parall.ax/) \u2013 they also built the [David Guetta Campaign](https://serverlesscode.com/post/david-guetta-online-recording-with-lambda/)\n- [Geniusee](https://geniusee.com)\n- [Nordcloud](https://nordcloud.com) - they created [several plugins](https://github.com/nordcloud?utf8=%E2%9C%93&q=serverless&type=&language=), sponsor [Serverless Days Helsinki](https://helsinki.serverlessdays.io/) and regularly host [Serverless Finland](https://www.meetup.com/Serverless-Finland/) Meetups.\n- [Carrot Creative](https://carrot.is)\n- [microapps](http://microapps.com)\n- [Apiwise](http://www.apiwise.nl)\n- [Useful IO](http://useful.io) - and [Hail Messaging](http://hail.io)\n- [WhaleTech](https://whaletech.co/)\n- [Hop Labs](http://www.hoplabs.com)\n- [Webscale](https://webscale.fi/briefly-in-english/)\n- [API talent](http://www.apitalent.co.nz) - who also run [Serverless-Auckland Meetup](http://www.meetup.com/Serverless-Auckland)\n- [Branded Crate](https://www.brandedcrate.com/)\n- [cloudonaut](https://cloudonaut.io/serverless-consulting/)\n- [PromptWorks](https://www.promptworks.com/serverless/)\n- [Craftship](https://craftship.io)\n- [EPX Labs](http://www.epxlabs.com/) - runs [Serverless NYC Meetup](https://www.meetup.com/Serverless-NYC/)\n- [Red Badger](https://red-badger.com)\n- [Langa](http://langa.io/?utm_source=gh-serverless&utm_medium=github) - They built [Trails.js](http://github.com/trailsjs/trails)\n- [Emerging Technology Advisors](https://www.emergingtechnologyadvisors.com)\n- [OneSpeed](https://onespeed.io/)\n- [Seraro](http://www.seraro.com/) - Who also runs Atlanta Serverless Meetup (https://www.meetup.com/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT) and Delhi Serverless Meetup (https://www.meetup.com/Delhi-NCR-Serverless-Architecture-Meetup/)\n- [superluminar](https://superluminar.io) - runs serverlessdays Hamburg and Serverless Meetup Hamburg\n- [Onica](https://www.onica.com/aws-cloud-native-developers/) - AWS Premier Consulting Partner for Cloud Native Development and host of [eleven regional Meetup groups](https://www.onica.com/events/).\n- [null](https://null.tc/) - maintains [Bref](https://bref.sh/) to create serverless PHP applications\n- [Theodo](https://www.theodo.co.uk) - full stack teams passionate about Serverless that also run the Serverless Transformation Newsletter & Blog.\n- [JetBridge](https://jetbridge.com) - cloud-native and serverless application development services.\n\n---\n\n## <a name=\"licensing\"></a>Licensing\n\nServerless is licensed under the [MIT License](./LICENSE.txt).\n\nAll files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.\n\n# <a name=\"v.5\"></a>Previous Serverless Version 0.5.x\n\nYou can find projects and plugins relating to version 0.5 [here](./0.5.x-RESOURCES.md). Note that these are not compatible with v1.0 but we are working diligently on updating them. [Guide on building v1.0 plugins](./docs/providers/aws/guide/plugins.md).\n\nYou can read the v0.5.x documentation at [readme.io](https://serverless.readme.io/v0.5.0/docs).\n"}, {"repo": "prometheus/client_golang", "language": "Go", "readme_contents": "# Prometheus Go client library\n\n[![Build Status](https://travis-ci.org/prometheus/client_golang.svg?branch=master)](https://travis-ci.org/prometheus/client_golang)\n[![Go Report Card](https://goreportcard.com/badge/github.com/prometheus/client_golang)](https://goreportcard.com/report/github.com/prometheus/client_golang)\n[![go-doc](https://godoc.org/github.com/prometheus/client_golang?status.svg)](https://godoc.org/github.com/prometheus/client_golang)\n\nThis is the [Go](http://golang.org) client library for\n[Prometheus](http://prometheus.io). It has two separate parts, one for\ninstrumenting application code, and one for creating clients that talk to the\nPrometheus HTTP API.\n\n__This library requires Go1.9 or later.__ The minimum required patch releases for older Go versions are Go1.9.7 and Go1.10.3.\n\n## Important note about releases and stability\n\nThis repository generally follows [Semantic\nVersioning](https://semver.org/). However, the API client in\nprometheus/client_golang/api/\u2026 is still considered experimental. Breaking\nchanges of the API client will _not_ trigger a new major release. The same is\ntrue for selected other new features explicitly marked as **EXPERIMENTAL** in\nCHANGELOG.md.\n\nFeatures that require breaking changes in the stable parts of the repository\nare being batched up and tracked in the [v2\nmilestone](https://github.com/prometheus/client_golang/milestone/2). The v2\ndevelopment happens in a [separate\nbranch](https://github.com/prometheus/client_golang/tree/dev-v2) for the time\nbeing. v2 releases off that branch will happen once sufficient stability is\nreached. In view of the widespread use of this repository, v1 and v2 will\ncoexist for a while to enable a convenient transition.\n\n## Instrumenting applications\n\n[![code-coverage](http://gocover.io/_badge/github.com/prometheus/client_golang/prometheus)](http://gocover.io/github.com/prometheus/client_golang/prometheus) [![go-doc](https://godoc.org/github.com/prometheus/client_golang/prometheus?status.svg)](https://godoc.org/github.com/prometheus/client_golang/prometheus)\n\nThe\n[`prometheus` directory](https://github.com/prometheus/client_golang/tree/master/prometheus)\ncontains the instrumentation library. See the\n[guide](https://prometheus.io/docs/guides/go-application/) on the Prometheus\nwebsite to learn more about instrumenting applications.\n\nThe\n[`examples` directory](https://github.com/prometheus/client_golang/tree/master/examples)\ncontains simple examples of instrumented code.\n\n## Client for the Prometheus HTTP API\n\n[![code-coverage](http://gocover.io/_badge/github.com/prometheus/client_golang/api/prometheus/v1)](http://gocover.io/github.com/prometheus/client_golang/api/prometheus/v1) [![go-doc](https://godoc.org/github.com/prometheus/client_golang/api/prometheus?status.svg)](https://godoc.org/github.com/prometheus/client_golang/api)\n\nThe\n[`api/prometheus` directory](https://github.com/prometheus/client_golang/tree/master/api/prometheus)\ncontains the client for the\n[Prometheus HTTP API](http://prometheus.io/docs/querying/api/). It allows you\nto write Go applications that query time series data from a Prometheus\nserver. It is still in alpha stage.\n\n## Where is `model`, `extraction`, and `text`?\n\nThe `model` packages has been moved to\n[`prometheus/common/model`](https://github.com/prometheus/common/tree/master/model).\n\nThe `extraction` and `text` packages are now contained in\n[`prometheus/common/expfmt`](https://github.com/prometheus/common/tree/master/expfmt).\n\n## Contributing and community\n\nSee the [contributing guidelines](CONTRIBUTING.md) and the\n[Community section](http://prometheus.io/community/) of the homepage.\n"}, {"repo": "VMadalin/kotlin-sample-app", "language": "Kotlin", "readme_contents": "## Kotlin Sample App\n[![CircleCI](https://circleci.com/gh/VMadalin/kotlin-sample-app/tree/master.svg?style=shield)](https://circleci.com/gh/VMadalin/kotlin-sample-app/tree/master)\n[![Codecov](https://codecov.io/gh/VMadalin/kotlin-sample-app/coverage.svg)](https://codecov.io/gh/VMadalin/kotlin-sample-app)\n[![Codacy](https://api.codacy.com/project/badge/Grade/5970b6648df0465588f9781ae6e3332e)](https://www.codacy.com/manual/VMadalin/kotlin-sample-app?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=VMadalin/kotlin-sample-app&amp;utm_campaign=Badge_Grade)\n[![CodeStyle](https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg)](https://ktlint.github.io/)\n[![Kotlin Version](https://img.shields.io/badge/kotlin-1.3.50-blue.svg)](http://kotlinlang.org/)\n[![Gradle](https://img.shields.io/badge/gradle-5.6.2-blue.svg)](https://lv.binarybabel.org/catalog/gradle/latest)\n[![API](https://img.shields.io/badge/API-21%2B-blue.svg?style=flat)](https://android-arsenal.com/api?level=21)\n[![License](https://img.shields.io/badge/License-Apache%202.0-lightgrey.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n\n<img src=\"screenshots/demo/demo.gif\" width=\"250\" align=\"right\" hspace=\"20\">\n\nKotlin Sample App is a sample project that presents modern, 2019 approach to [Android](https://www.android.com/) application development using [Kotlin](https://kotlinlang.org/) and latest tech-stack.\n\nThe goal of the project is to demonstrate best practices, provide a set of guidelines, and present modern Android\napplication architecture that is modular, scalable, maintainable and testable. This application may look simple, but it\nhas all of these small details that will set the rock-solid foundation of the larger app suitable for bigger teams and\nlong application lifecycle management.\n\n## Table of Contents\n\n- [Development](https://github.com/VMadalin/kotlin-sample-app#development)\n- [Design](https://github.com/VMadalin/kotlin-sample-app#design)\n- [Architecture](https://github.com/VMadalin/kotlin-sample-app#architecture)\n- [Documentation](https://github.com/VMadalin/kotlin-sample-app#documentation)\n- [Tech-stack](https://github.com/VMadalin/kotlin-sample-app#tech-stack)\n- [Resources](https://github.com/VMadalin/kotlin-sample-app#resources)\n- [Contributions](https://github.com/VMadalin/kotlin-sample-app#contributions)\n- [License](https://github.com/VMadalin/kotlin-sample-app#license)\n\n## Development\n\n### Environment setup\n\nFirst off, you require the latest Android Studio 3.5 (or newer) to be able to build the app.\n\nYou need to supply API keys for the various services the app uses. That is currently Marvel and Fabric (Crashlytics). You can find information about how to gain access via these relevant links.\n\n- Marvel: https://developer.marvel.com/\n- Firebase: https://get.fabric.io/\n\nWhen you obtain the keys, you can provide them to the app by putting the following in the `local.properties` project root file:\n\n```\n#Marvel API KEYS\nmarvel.key.public = <insert>\nmarvel.key.private = <insert>\n\n#Fabric API KEYS\nfabric.key = <insert>\nfabric.secret = <insert>\n```\n\nMoreover, to sign your app for release you should generate an upload key and keystore following the [official documentation](https://developer.android.com/studio/publish/app-signing#sign-apk). Append the information used to generate it into `local.properties` project root file following the structure:\n\n```\n#Signing Config\nsigning.key.alias = <insert>\nsigning.key.password = <insert>\nsigning.store.file = <insert>\nsigning.store.password = <insert>\n```\n\n### Code style\n\nTo maintain the style and quality of the code, are used the bellow static analysis tools. All of them use properly configuration and you find them in the project root directory `.{toolName}`.\n\n| Tools  | Config file | Check command | Fix command |\n|--------|------------:|---------------|-------------|\n| [detekt](https://github.com/arturbosch/detekt) | [/.detekt](https://github.com/VMadalin/kotlin-sample-app/tree/master/.detekt) | `./gradlew detekt` | - |\n| [ktlint](https://github.com/pinterest/ktlint) | - | `./gradlew ktlint` | `./gradlew ktlintFormat` |\n| [spotless](https://github.com/diffplug/spotless) | [/.spotless](https://github.com/VMadalin/kotlin-sample-app/tree/master/.spotless) | `./gradlew spotlessCheck` | `./gradlew spotlessApply`\n| [lint](https://developer.android.com/studio/write/lint) | [/.lint](https://github.com/VMadalin/kotlin-sample-app/tree/master/.lint) | `./gradlew lint` | - |\n\nAll these tools are integrated in [pre-commit git hook](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks), in order\nensure that all static analysis and tests passes before you can commit your changes. To skip them for specific commit add this option at your git command:\n```\ngit commit --no-verify\n```\n\nThe pre-commit git hooks have exactly the same checks as [CircleCI](https://circleci.com/) and are defined in this [script](https://github.com/VMadalin/kotlin-sample-app/blob/master/scripts/git-hooks/pre-commit.sh). This step ensures that all commits comply with the established rules. However the continuous integration will ultimately be validated that the changes are correct.\n\n## Design\n\nApp [support different screen sizes](https://developer.android.com/training/multiscreen/screensizes) and the content has been adapted to fit for mobile devices and tablets. To do that, it has been created a flexible layout using one or more of the following concepts:\n\n- [Use constraintLayout](https://developer.android.com/training/multiscreen/screensizes#ConstraintLayout)\n- [Avoid hard-coded layout sizes](https://developer.android.com/training/multiscreen/screensizes#TaskUseWrapMatchPar)\n- [Create alternative layouts](https://developer.android.com/training/multiscreen/screensizes#alternative-layouts)\n- [Use the smallest width qualifier](https://developer.android.com/training/multiscreen/screensizes#TaskUseSWQuali)\n- [Use the available width qualifier](https://developer.android.com/training/multiscreen/screensizes#available-width)\n- [Add orientation qualifiers](https://developer.android.com/training/multiscreen/screensizes#TaskUseOriQuali)\n\nIn terms of design has been followed recommendations [android material design](https://developer.android.com/guide/topics/ui/look-and-feel) comprehensive guide for visual, motion, and interaction design across platforms and devices. Granting the project in this way a great user experience (UX) and user interface (UI). For more info about UX best practices visit [link](https://developer.android.com/topic/google-play-instant/best-practices/apps).\n\nMoreover, has been implemented support for [dark theme](https://developer.android.com/guide/topics/ui/look-and-feel/darktheme) with the following benefits:\n- Can reduce power usage by a significant amount (depending on the device\u2019s screen technology).\n- Improves visibility for users with low vision and those who are sensitive to bright light.\n- Makes it easier for anyone to use a device in a low-light environment.\n\n| Mode  | Characters list                                                          | Characters favorite                                                          | Character detail                                                          |\n|-------|--------------------------------------------------------------------------|------------------------------------------------------------------------------|---------------------------------------------------------------------------|\n| Light | <img src=\"screenshots/phone/light_mode_characters_list.png\" width=\"250\"> | <img src=\"screenshots/phone/light_mode_characters_favorite.png\" width=\"250\"> | <img src=\"screenshots/phone/light_mode_character_detail.png\" width=\"250\"> |\n| Dark  | <img src=\"screenshots/phone/dark_mode_characters_list.png\" width=\"250\">  | <img src=\"screenshots/phone/dark_mode_characters_favorite.png\" width=\"250\">  | <img src=\"screenshots/phone/dark_mode_character_detail.png\" width=\"250\">  |\n\n## Architecture\n\nThe architecture of the application is based, apply and strictly complies with each of the following 5 points:\n\n<img src=\"screenshots/architecture/project_structure.png\" width=\"300\" align=\"right\" hspace=\"20\">\n\n-   A single-activity architecture, using the\u00a0[Navigation component](https://developer.android.com/guide/navigation/navigation-getting-started)\u00a0to manage fragment operations.\n-   [Android architecture components](https://developer.android.com/topic/libraries/architecture/), part of\u00a0Android Jetpack for give to project a robust design, testable and maintainable. \n-   Pattern [Model-View-ViewModel](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel) (MVVM) facilitating a\u00a0[separation](https://en.wikipedia.org/wiki/Separation_of_concerns)\u00a0of development of the\u00a0graphical user interface.\n-   [S.O.L.I.D](https://en.wikipedia.org/wiki/SOLID) design principles intended to make software designs more understandable, flexible and\u00a0maintainable.\n-   [Modular app architecture](https://proandroiddev.com/build-a-modular-android-app-architecture-25342d99de82) allows to be developed features in isolation, independently from other features.\n\n### Modules\n\nModules are collection of source files and build settings that allow you to divide a project into discrete units of functionality. In this case apart from dividing by functionality/responsibility, existing the following dependence between them:\n\n<p align=\"center\">\n <img src=\"screenshots/architecture/modules_diagram.png\">\n</p>\n\nThe above graph shows the app modularisation:\n-    `:app`\u00a0depends on\u00a0`:core` and indirectly depends on `:features` by dynamic-features.\n-    `:features` modules depends on\u00a0`:commons`, `:core`, `:libraries` and `:app`.\n-    `:core` and `:commons` only depends for possible utils on `:libraries`.\n-    `:libraries` don\u2019t have any dependency.\n\n#### App module\n\nThe\u00a0`:app`\u00a0module is an\u00a0[com.android.application](https://developer.android.com/studio/build/), which is needed to create the app bundle.  It is also responsible for initiating the [dependency graph](https://github.com/google/dagger), [play core](https://developer.android.com/reference/com/google/android/play/core/release-notes) and another project global libraries, differentiating especially between different app environments.\n\n#### Core module\n\nThe `:core`\u00a0module is an [com.android.library](https://developer.android.com/studio/projects/android-library)  for serving network requests or accessing to the database. Providing the data source for the many features that require it.\n\n#### Features modules\n\nThe `:features` module are an [com.android.dynamic-feature](https://developer.android.com/studio/projects/dynamic-delivery)\u00a0is essentially a gradle module which can be downloaded independently from the base application module. It can hold code and resources and include dependencies, just like any other gradle module. \n\n#### Commons modules\n\nThe `:commons` modules are an [com.android.library](https://developer.android.com/studio/projects/android-library) only contains code and resources which are shared between feature modules. Reusing this way resources, layouts, views, and components in the different features modules, without the need to duplicate code.\n\n#### Libraries modules\n\nThe `:libraries` modules are an [com.android.library](https://developer.android.com/studio/projects/android-library), basically contains different utilities that can be used by the different modules.\n\n### Architecture components\n\nIdeally, ViewModels shouldn\u2019t know anything about Android. This improves testability, leak safety and modularity. ViewModels have different scopes than activities or fragments. While a ViewModel is alive and running, an activity can be in any of its lifecycle states. Activities and fragments can be destroyed and created again while the ViewModel is unaware.\n\nPassing a reference of the View (activity or fragment) to the ViewModel is a serious risk. Lets assume the ViewModel requests data from the network and the data comes back some time later. At that moment, the View reference might be destroyed or might be an old activity that is no longer visible, generating a memory leak and, possibly, a crash.\n\n<img src=\"screenshots/architecture/communication_diagram.png\">\n\nThe communication between the different layers follow the above diagram using the reactive paradigm, observing changes on components without need of callbacks avoiding leaks and edge cases related with them.\n\n### Build variants\n\nThe application has different product flavours: `Dev`, `QA`, `Prod`. Each variant has a specific target environment and to make easier to distinguish them the app uses a specific icon colour for `debug` and `release` build variant with descriptive app name. In this case and given that it's a sample, all variants have the same Marvel API endpoint. But the idea is to have different environments target for Development and QA respectively, what doesn't affect the production environment. This is applicable to any tool, platform, service what is being used. For more information about build variant, check this [link](https://developer.android.com/studio/build/build-variants).\n\n| Types  | DEV   | QA     | PROD   |\n|-------|:------:|:------:|:------:|\n| Debug | <p><img src=\"app/src/debug/res/mipmap-xhdpi/ic_launcher.png\"><br> MarvelDEV</p> | <p><img src=\"app/src/debug/res/mipmap-xhdpi/ic_launcher.png\"><br> MarvelQA</p> | <p><img src=\"app/src/debug/res/mipmap-xhdpi/ic_launcher.png\"><br> Marvel</p> |\n| Release | <p><img src=\"app/src/main/res/mipmap-xhdpi/ic_launcher.png\"><br> MarvelDEV</p> | <p><img src=\"app/src/main/res/mipmap-xhdpi/ic_launcher.png\"><br> MarvelQA</p> | <p><img src=\"app/src/main/res/mipmap-xhdpi/ic_launcher.png\"><br> Marvel</p> |\n\n## Documentation\n\nThe documentation is generated following [KDoc](https://kotlinlang.org/docs/reference/kotlin-doc.html) language (the equivalent of Java's [JavaDoc](https://en.wikipedia.org/wiki/Javadoc)) via documentation engine for Kotlin [Dokka](https://github.com/Kotlin/dokka).\n\nTo consult it check this [link](https://vmadalin.github.io/kotlin-sample-app/) or open the project `/docs` directory.\n\n## Tech-stack\n\nThis project takes advantage of many popular libraries, plugins and tools of the Android ecosystem. Most of the libraries are in the stable version, unless there is a good reason to use non-stable dependency.\n\n### Dependencies\n\n-   [Jetpack](https://developer.android.com/jetpack):\n    -   [Android KTX](https://developer.android.com/kotlin/ktx.html) - provide concise, idiomatic Kotlin to Jetpack and Android platform APIs.\n    -   [AndroidX](https://developer.android.com/jetpack/androidx) - major improvement to the original Android [Support Library](https://developer.android.com/topic/libraries/support-library/index), which is no longer maintained.\n    -   [Benchmark](https://developer.android.com/studio/profile/benchmark.html) - handles warmup, measures your code performance, and outputs benchmarking results to the Android Studio console.\n    -   [Data Binding](https://developer.android.com/topic/libraries/data-binding/) - allows you to bind UI components in your layouts to data sources in your app using a declarative format rather than programmatically.\n    -   [Lifecycle](https://developer.android.com/topic/libraries/architecture/lifecycle) - perform actions in response to a change in the lifecycle status of another component, such as activities and fragments.\n    -   [LiveData](https://developer.android.com/topic/libraries/architecture/livedata) - lifecycle-aware, meaning it respects the lifecycle of other app components, such as activities, fragments, or services.\n    -   [Navigation](https://developer.android.com/guide/navigation/) - helps you implement navigation, from simple button clicks to more complex patterns, such as app bars and the navigation drawer.\n    -   [Paging](https://developer.android.com/topic/libraries/architecture/paging/) - helps you load and display small chunks of data at a time. Loading partial data on demand reduces usage of network bandwidth and system resources.\n    -   [Room](https://developer.android.com/topic/libraries/architecture/room) - persistence library provides an abstraction layer over SQLite to allow for more robust database access while harnessing the full power of SQLite.\n    -   [ViewModel](https://developer.android.com/topic/libraries/architecture/viewmodel) - designed to store and manage UI-related data in a lifecycle conscious way. The ViewModel class allows data to survive configuration changes such as screen rotations.\n-   [Coroutines](https://kotlinlang.org/docs/reference/coroutines-overview.html) - managing background threads with simplified code and reducing needs for callbacks.\n-   [Dagger2](https://dagger.dev/) - dependency injector for replacement all FactoryFactory classes.\n-   [Retrofit](https://square.github.io/retrofit/) - type-safe HTTP client.\n-   [Coil](https://github.com/bumptech/glide) - image loading library for Android backed by Kotlin Coroutines.\n-   [Moshi](https://github.com/square/moshi) - makes it easy to parse JSON into Kotlin objects.\n-   [Timber](https://github.com/JakeWharton/timber) - a logger with a small, extensible API which provides utility on top of Android's normal Log class.\n-   [Stetho](http://facebook.github.io/stetho/) - debug bridge for applications via Chrome Developer Tools.\n-   [and more...](https://github.com/VMadalin/kotlin-sample-app/blob/master/buildSrc/src/main/kotlin/dependencies/Dependencies.kt)\n\n### Test dependencies\n\n-   [UIAutomator](https://developer.android.com/training/testing/ui-automator) - a UI testing framework suitable for cross-app functional UI testing across system and installed apps.\n-   [Espresso](https://developer.android.com/training/testing/espresso) - to write concise, beautiful, and reliable Android UI tests\n-   [Robolectric](https://github.com/robolectric/robolectric) - industry-standard unit testing framework for Android.\n-   [JUnit](https://github.com/junit-team/junit4) - a simple framework to write repeatable tests. It is an instance of the xUnit architecture for unit testing frameworks.\n-   [Mockito](https://github.com/nhaarman/mockito-kotlin) - most popular Mocking framework for unit tests written in Java.\n-   [Mockk](https://github.com/mockk/mockk) - provides DSL to mock behavior. Built from zero to fit Kotlin language.\n-   [AndroidX](https://github.com/android/android-test) - the androidx test library provides an extensive framework for testing Android apps.\n-   [and more...](https://github.com/VMadalin/kotlin-sample-app/blob/master/buildSrc/src/main/kotlin/dependencies/TestDependencies.kt)\n\n### Plugins\n\n-   [Ktlint](https://github.com/pinterest/ktlint) - an anti-bikeshedding Kotlin linter with built-in formatter.\n-   [Detekt](https://github.com/arturbosch/detekt) - a static code analysis tool for the Kotlin programming language.\n-   [Spotless](https://github.com/diffplug/spotless) - a code formatter can do more than just find formatting errors.\n-   [Versions](https://github.com/ben-manes/gradle-versions-plugin) - make easy to determine which dependencies have updates.\n-   [SafeArgs](https://developer.android.com/guide/navigation/navigation-pass-data#Safe-args) - generates simple object and builder classes for type-safe navigation and access to any associated arguments.\n-   [Jacoco](https://github.com/jacoco/jacoco) - code coverage library\n-   [and more...](https://github.com/VMadalin/kotlin-sample-app/blob/master/buildSrc/build-dependencies.gradle.kts)\n\n## Resources\n\n### Projects\n\nThis is project is a sample, to inspire you and should handle most of the common cases, but obviously not all. If you need to take a look at additional resources to find solutions for your project, visit these interesting projects:\n\n-   [iosched](https://github.com/google/iosched) (by [google](https://github.com/google)) - official Android application from google IO 2019.\n-   [plaid](https://github.com/android/plaid) (by [android](https://github.com/android)) - app which provides design news & inspiration, being an example of implementing material design.\n-   [sunflower](https://github.com/android/sunflower) (by [android](https://github.com/android)) - a gardening app illustrating Android development best practices with Android Jetpack.\n-   [architecture-components-samples](https://github.com/android/architecture-components-samples) (by [android](https://github.com/android)) - collection of samples for Android Architecture Components.\n-   [architecture-sample](https://github.com/android/architecture-samples) (by [android](https://github.com/android)) - collection of samples to discuss and showcase different architectural tools and patterns for Android apps.\n-   [android-clean-architecture-boilerplate](https://github.com/bufferapp/android-clean-architecture-boilerplate) (by [bufferapp](https://github.com/bufferapp)) - an android boilerplate project using clean architecture\n-   [android-kotlin-clean-architecture](https://github.com/sanogueralorenzo/Android-Kotlin-Clean-Architecture) (by [sanogueralorenzo](https://github.com/sanogueralorenzo)) - android sample Clean Architecture app written in Kotlin.\n-   [modularization-example](https://github.com/JeroenMols/ModularizationExample) (by [JeroenMols](https://github.com/JeroenMols)) - easy to understand real-life example of a modularized Android app.\n-   [lego-catalog](https://github.com/Eli-Fox/LEGO-Catalog) (by [Eli-Fox](https://github.com/Eli-Fox)) - app illustrating current Android Architecture state using Android development best practices.\n-   [tivi](https://github.com/chrisbanes/tivi) (by [chrisbanes](https://github.com/chrisbanes)) - an app which attempts to use the latest cutting edge libraries and tools.\n-   [android-showcase](https://github.com/igorwojda/android-showcase) (by [igorwojda](https://github.com/igorwojda)) - app following best practices: Kotlin, coroutines, Clean Architecture, feature modules, tests, MVVM, static analysis.\n\n### Articles\n\nA collection of very interesting articles related last android community tendencies and recommendations for start to take in consideration for your current/next project:\n\n-   [Transform monolith to modularization application](https://medium.com/androiddevelopers/a-patchwork-plaid-monolith-to-modularized-app-60235d9f212e)\n-   [Using the Navigation Component in a Modular World](https://medium.com/swlh/using-the-navigation-component-in-a-modular-world-e7578825962)\n-   [Dependency injection in a multi module project](https://medium.com/androiddevelopers/dependency-injection-in-a-multi-module-project-1a09511c14b7)\n-   [ViewModels and LiveData: Patterns + AntiPatterns](https://medium.com/androiddevelopers/viewmodels-and-livedata-patterns-antipatterns-21efaef74a54)\n-   [Dynamic feature and regular modules using Dagger2](https://blog.q42.nl/dynamic-feature-and-regular-modules-using-dagger2-12a7edcec1ff)\n-   [Android Architecture starring Kotlin Coroutines, Jetpack (MVVM, Room, Paging), Retrofit and Dagger 2](https://proandroiddev.com/android-architecture-starring-kotlin-coroutines-jetpack-mvvm-room-paging-retrofit-and-dagger-7749b2bae5f7)\n-   [Official Kotlin Style Guide with Ktlint](https://proandroiddev.com/official-kotlin-style-guide-with-ktlint-4a649c172956)\n-   [Gradle dependency management with Kotlin (buildSrc)](https://proandroiddev.com/gradle-dependency-management-with-kotlin-94eed4df9a28)\n-   [Detecting Kotlin Code Smells with Detekt](https://proandroiddev.com/detecting-kotlin-code-smells-with-detekt-e79c52a35faf)\n-   [Best coding practices, tips and more for Android](https://medium.com/mindorks/best-coding-practices-tips-and-more-for-android-4ec03c7eeb2c)\n\n### Libraries\n\nThe open-source community create and maintains tons of awesome libraries making your job more easy, giving the opportunity to use them in your developments. Here are a very important collection of them:\n\n-   [awesome-android-ui](https://github.com/wasabeef/awesome-android-ui) - collection list of awesome Android UI/UX libraries.\n-   [awesome-android-libraries](https://github.com/KotlinBy/awesome-kotlin#android-libraries) - collection of awesome Kotlin related stuff.\n-   [android-arsenal](https://android-arsenal.com/) - android developer portal with tools, libraries, and apps.\n\n### Best practices\n\nAvoid reinventing the wheel by following these guidelines:\n\n-   [Google best practices](https://developer.android.com/distribute/best-practices)\n-   [Android development best practices](https://github.com/futurice/android-best-practices)\n\n### Codelabs\n\nGoogle Developers Codelabs provide a guided, tutorial, hands-on coding experience. Most codelabs will step you through the process of building a small application, or adding a new feature to an existing application. They cover a wide range of android concepts to learn and practice:\n\n-   [Android Developer Fundamentals](https://developer.android.com/courses/fundamentals-training/toc-v2)\n-   [Android Developer Codelabs](https://codelabs.developers.google.com/?cat=Android)\n\n## Contributions\n\nAll contributions are welcome!\nPlease feel free to post questions, recommendations, ideas, bugs by create [new issue](https://github.com/VMadalin/kotlin-sample-app/issues/new) following the template or if you want create directly [new pull request](https://github.com/VMadalin/kotlin-sample-app/compare).\n\n## License\n    Copyright 2019 vmadalin.com\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"}, {"repo": "davidfowl/FeatherHttp", "language": "C#", "readme_contents": "## Feather HTTP\n\nA super lightweight low ceremony APIs for ASP.NET Core applications.\n\n- Built on the same primitives as ASP.NET Core\n- Optimized for building HTTP APIs quickly\n- Take advantage of existing ASP.NET Core middleware and frameworks\n\n### Hello World\n\n```C#\nusing FeatherHttp;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.AspNetCore.Http;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var builder = WebApplicationHost.CreateDefaultBuilder(args);\n\n        builder.UseUrls(\"http://localhost:3000\");\n\n        var app = builder.Build();\n\n        app.MapGet(\"/\", async context =>\n        {\n            await context.Response.WriteAsync(\"Hello World\");\n        });\n\n        await app.RunAsync();\n    }\n}\n```\n\n### ASP.NET Core Controllers\n\n\n```C#\nusing FeatherHttp;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.AspNetCore.Mvc;\n\npublic class HomeController\n{\n    [HttpGet(\"/\")]\n    public string HelloWorld() => \"Hello World\";\n}\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var builder = WebApplicationHost.CreateDefaultBuilder(args);\n        \n        builder.UseUrls(\"http://localhost:3000\");\n\n        builder.Services.AddControllers();\n\n        var app = builder.Build();\n\n        app.MapControllers();\n        \n        await app.RunAsync();\n    }\n}\n```\n\n### Carter\n\n```C#\nusing FeatherHttp;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.Extensions.Hosting;\nusing Carter;\n\npublic class HomeModule : CarterModule\n{\n    public HomeModule()\n    {\n        Get(\"/\", async (req, res) => await res.WriteAsync(\"Hello from Carter!\"));\n    }\n}\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var builder = WebApplicationHost.CreateDefaultBuilder(args);\n        \n        builder.UseUrls(\"http://localhost:3000\");\n\n        builder.Services.AddCarter();\n\n        var app = builder.Build();\n\n        app.MapCarter();\n\n        await app.RunAsync();\n    }\n}\n```\n\n### SignalR\n\n```C#\nusing FeatherHttp;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.AspNetCore.SignalR;\n\nclass Chat : Hub\n{\n    public Task Send(string message) => Clients.All.SendAsync(\"Send\", message);\n}\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var builder = WebApplicationHost.CreateDefaultBuilder(args);\n        \n        builder.UseUrls(\"http://localhost:3000\");\n\n        builder.Services.AddSignalR();\n\n        var app = builder.Build();\n\n        app.MapHub<Chat>(\"/chat\");\n        \n        await app.RunAsync();\n    }\n}\n```\n\n### GRPC\n\n```C#\nusing FeatherHttp;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.DependencyInjection;\nusing Grpc.Core;\nusing Greet;\n\npublic class GreeterService : Greeter.GreeterBase\n{\n    public override Task<HelloReply> SayHello(HelloRequest request, ServerCallContext context)\n    {\n        return Task.FromResult(new HelloReply\n        {\n            Message = \"Hello \" + request.Name\n        });\n    }\n}\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var builder = WebApplicationHost.CreateDefaultBuilder(args);\n        \n        builder.UseUrls(\"https://localhost:3000\");\n\n        builder.Services.AddGrpc();\n\n        var host = builder.Build();\n\n        app.MapGrpcService<GreeterService>();\n        \n        await app.RunAsync();\n    }\n}\n```\n\n### Uber Example\n\n- Serilog for logging\n- Autofac for DI\n- Yaml configuration provider\n\n```C#\nusing System.Threading.Tasks;\nusing Autofac.Extensions.DependencyInjection;\nusing FeatherHttp;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.Hosting;\nusing Serilog;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        Log.Logger = new LoggerConfiguration()\n            .Enrich.FromLogContext()\n            .WriteTo.Console()\n            .CreateLogger();\n\n        var builder = WebApplicationHost.CreateDefaultBuilder(args);\n\n        builder.Configuration.AddYamlFile(\"appsettings.yml\", optional: true);\n\n        builder.UseSerilog();\n\n        builder.UseServiceProviderFactory(new AutofacServiceProviderFactory());\n\n        builder.UseUrls(\"http://localhost:3000\");\n\n        var app = builder.Build();\n\n        if (app.Environment.IsDevelopment())\n        {\n            app.UseDeveloperExceptionPage();\n        }\n\n        app.UseRouting();\n\n        app.MapGet(\"/\", async context =>\n        {\n            await context.Response.WriteAsync(\"Hello World\");\n        });\n\n        await app.RunAsync();\n    }\n}\n```\n"}, {"repo": "0vercl0k/CVE-2019-11708", "language": "JavaScript", "readme_contents": "# Full chain exploit for CVE-2019-11708 & CVE-2019-9810\n\nThis is a full browser compromise exploit chain (CVE-2019-11708 & CVE-2019-9810) targeting Firefox on Windows 64-bit. It uses CVE-2019-9810 for getting code execution in both the content process as well as the parent process and CVE-2019-11708 to trick the parent process into browsing to an arbitrary URL.\n\n![bigint](pics/cthulhu.js.gif)\n\nI have covered CVE-2019-9810's root-cause and exploitation in the past in [A journey into IonMonkey: root-causing CVE-2019-9810](https://doar-e.github.io/blog/2019/06/17/a-journey-into-ionmonkey-root-causing-cve-2019-9810/) article and in the associated [github repository](https://github.com/0vercl0k/CVE-2019-9810).\n\nCVE-2019-11708 has been fixed by the bulletin [mfsa2019-19](https://www.mozilla.org/en-US/security/advisories/mfsa2019-19/) and was assigned *Bug 1559858* in the Mozilla bug tracker. Here is the summary of the issue:\n\n```text\nInsufficient vetting of parameters passed with the Prompt:Open IPC message between child\nand parent processes can result in the non-sandboxed parent process opening web content\nchosen by a compromised child process. When combined with additional vulnerabilities this\ncould result in executing arbitrary code on the user's computer.\n```\n\nYou can find the commit addressing the issue here: [Clean up prompt open calls in Prompter.jsm](https://phabricator.services.mozilla.com/D35371).\n\n## Overview of the issue\n\nA full-write up of the issue as well as the techniques used in the exploit will be described in an upcoming article on [doar-e.github.io](https://doar-e.github.io/).\n\n## Organization\n\nThe [exploit](https://github.com/0vercl0k/CVE-2019-11708/blob/master/cthulhu.js) has been tested against Windows 19H2 64-bit and it targets a custom build of Firefox so don't be surprised if a bit of work is required to make it work elsewhere :). However, if you just feel like running the exploit without compiling anything, I prepared a packaged browser that I uploaded in [release/firefox-68.0a1.en-US.win64.7z](https://github.com/0vercl0k/CVE-2019-11708/releases/download/1/firefox-68.0a1.en-US.win64.7z). It also includes the `js.exe` shell as well as private symbol information for `js.exe`, `firefox.exe` and `xul.dll`.\n\nThe exploit assumes that the support for [BigInt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) is turned on in Firefox which you can do by toggling `javascript.options.bigint` in `about:config`.\n\n![bigint](pics/bigint.png)\n\nThe exploitation process uses a data corruption to gain privileged JS execution aka **God Mode** (which is basically an implementation of [a technique used in Pwn2Own2014](https://bugzilla.mozilla.org/show_bug.cgi?id=982974) by Ju\u0308ri Aedla) which is very different (and much more convenient) from the way I had exploited [CVE-2019-9810](https://github.com/0vercl0k/CVE-2019-9810). This means that there is no control-flow getting hijacked during the exploit chain.\n\n1. The exploit uses CVE-2019-9810 to perform the **God Mode** data corruption and refreshes the current page.\n2. Once it can execute privileged JS, it finds the current frame [message manager](https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Multiprocess_Firefox/Message_Manager/Message_manager_overview) and triggers CVE-2019-11708.\n3. Now that the parent process visited our arbitrary page, we exploit CVE-2019-9810 again  and get privileged JS execution there as well.\n4. At this point the entire browser (sandbox included) is compromised. The first stage is to download and drop a local payload dubbed **slimeshady.exe** that you can find in [payload/](https://github.com/0vercl0k/CVE-2019-11708/blob/master/payload) which draws a bunch of animated **Slime shady** sprites on the desktop with GDI. The exploit also drops and injects a [frame script](https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Multiprocess_Firefox/Message_Manager/Frame_script_loading_and_lifetime) (privileged JS) in every tab to backdoor the whole navigation (already created tabs as well as newly created ones). The tab backdooring is similar to [CVE-2019-9810/payload](https://github.com/0vercl0k/CVE-2019-9810/tree/master/payload) in effect (arbitrary JS injected in every tabs), but this time it is implemented using a Firefox feature (`Services.mm.loadFrameScript`) instead of [hacky and dirty hooks](https://github.com/0vercl0k/CVE-2019-9810/blob/master/payload/src/ReflectiveDll.cc#L326).\n\nIn reality, there are a bunch of more subtle details that are not described by the above and so if you are interested you are invited to go find the truth and read the sources / future article :).\n\n## Building the payload\n\nTo build the payload, you just have to run `nmake` from a VS 2017 x64 prompt.\n\n```text\nCVE-2019-11708\\payload>nmake\n\nMicrosoft (R) Program Maintenance Utility Version 14.16.27034.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n        taskkill /f /im payload.exe\nERROR: The process \"payload.exe\" not found.\n        if not exist .\\bin mkdir bin\n        python src\\genheaders.py sprites\n        cl /O1 /nologo /ZI /W3 /D_AMD64_ /DWIN_X64 /sdl /Febin\\payload.exe src\\payload.cc /link /nologo /debug:full user32.lib\npayload.cc\n        del *.obj *.pdb *.idb\n        if exist .\\bin del bin\\*.exp bin\\*.ilk bin\\*.lib\n        start .\\bin\\payload.exe\n```\n\nThis creates a `payload.exe` / `payload.pdb` file inside the `payload\\bin` directory.\n\n## Building Firefox\n\nI wrote this exploit against a local Windows build synchronized to the following revision id: [2abb636ad481768b7c88619080cf224b2c266b2d](https://hg.mozilla.org/mozilla-central/rev/2abb636ad481768b7c88619080cf224b2c266b2d) (if you don't feel like building it yourself, I've uploaded my build here: [release/firefox-68.0a1.en-US.win64.7z](https://github.com/0vercl0k/CVE-2019-11708/releases/download/1/firefox-68.0a1.en-US.win64.7z)):\n\n```text\n$ hg --debug id -i\n2abb636ad481768b7c88619080cf224b2c266b2d\n```\n\nAnd I have used the following `mozconfig` file:\n\n```text\n. \"$topsrcdir/browser/config/mozconfigs/win64/common-win64\"\n\nac_add_options --disable-crashreporter\nac_add_options --enable-debug-symbols\n\n. \"$topsrcdir/build/mozconfig.clang-cl\"\n. \"$topsrcdir/build/mozconfig.lld-link\"\n\n# Use the clang version in .mozbuild\nCLANG_LIB_DIR=\"$(cd ~/.mozbuild/clang/lib/clang/*/lib/windows && pwd)\"\nexport LIB=$LIB:$CLANG_LIB_DIR\n\nac_add_options --enable-js-shell\nac_add_options --enable-jitspew\nmk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-ff64\n```\n"}, {"repo": "mrdoob/three.js", "language": "JavaScript", "readme_contents": "three.js\n========\n\n[![NPM package][npm]][npm-url]\n[![Build Size][build-size]][build-size-url]\n[![Build Status][build-status]][build-status-url]\n[![Dependencies][dependencies]][dependencies-url]\n[![Dev Dependencies][dev-dependencies]][dev-dependencies-url]\n[![Language Grade][lgtm]][lgtm-url]\n\n#### JavaScript 3D library ####\n\nThe aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.\n\n[Examples](http://threejs.org/examples/) &mdash;\n[Documentation](http://threejs.org/docs/) &mdash;\n[Wiki](https://github.com/mrdoob/three.js/wiki) &mdash;\n[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &mdash;\n[Questions](http://stackoverflow.com/questions/tagged/three.js) &mdash;\n[Forum](https://discourse.threejs.org/) &mdash;\n[Gitter](https://gitter.im/mrdoob/three.js) &mdash;\n[Slack](https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk)\n\n### Usage ###\n\nDownload the [minified library](http://threejs.org/build/three.min.js) and include it in your HTML, or install and import it as a [module](http://threejs.org/docs/#manual/introduction/Import-via-modules),\nAlternatively, see [how to build the library yourself](https://github.com/mrdoob/three.js/wiki/Build-instructions).\n\n```html\n<script src=\"js/three.min.js\"></script>\n```\n\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.\n\n```javascript\nvar camera, scene, renderer;\nvar geometry, material, mesh;\n\ninit();\nanimate();\n\nfunction init() {\n\n\tcamera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );\n\tcamera.position.z = 1;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\n\tmaterial = new THREE.MeshNormalMaterial();\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tdocument.body.appendChild( renderer.domElement );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.02;\n\n\trenderer.render( scene, camera );\n\n}\n```\n\nIf everything went well you should see [this](https://jsfiddle.net/f2Lommf5/).\n\n### Change log ###\n\n[Releases](https://github.com/mrdoob/three.js/releases)\n\n\n[npm]: https://img.shields.io/npm/v/three.svg\n[npm-url]: https://www.npmjs.com/package/three\n[build-size]: https://badgen.net/bundlephobia/minzip/three\n[build-size-url]: https://bundlephobia.com/result?p=three\n[build-status]: https://travis-ci.org/mrdoob/three.js.svg?branch=dev\n[build-status-url]: https://travis-ci.org/mrdoob/three.js\n[dependencies]: https://img.shields.io/david/mrdoob/three.js.svg\n[dependencies-url]: https://david-dm.org/mrdoob/three.js\n[dev-dependencies]: https://img.shields.io/david/dev/mrdoob/three.js.svg\n[dev-dependencies-url]: https://david-dm.org/mrdoob/three.js#info=devDependencies\n[lgtm]: https://img.shields.io/lgtm/grade/javascript/g/mrdoob/three.js.svg?label=code%20quality\n[lgtm-url]: https://lgtm.com/projects/g/mrdoob/three.js/\n"}, {"repo": "OfficeDev/office-ui-fabric-react", "language": "TypeScript", "readme_contents": "# [Office UI Fabric React](https://dev.microsoft.com/fabric)\r\n\r\n**The React-based front-end framework for building experiences for Office and Office 365.**\r\n\r\n**Fabric 7**: Summary, breaking changes, and more details available in [the wiki](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Fabric-7).\r\n\r\n[![npm version](https://badge.fury.io/js/office-ui-fabric-react.svg)](https://badge.fury.io/js/office-ui-fabric-react) [![Build Status](https://uifabric.visualstudio.com/fabricpublic/_apis/build/status/office-ui-fabric-react%20-%20PR?branchName=master)](https://uifabric.visualstudio.com/fabricpublic/_build/latest?definitionId=84&branchName=master)\r\n\r\nFabric React is a collection of robust React-based components designed to make it simple for you to create consistent web experiences using the Office Design Language.\r\n\r\n## Who uses UI Fabric?\r\n\r\n![image](https://user-images.githubusercontent.com/785361/50458071-45b58d00-0915-11e9-90c0-ad8789c99db5.png)\r\n\r\n\\+ 45 additional Microsoft sites and products\r\n\r\n## For more information...\r\n\r\nPlease see the [wiki](https://github.com/OfficeDev/office-ui-fabric-react/wiki).\r\n\r\n## Contents\r\n\r\n- [Using Fabric React](#using-fabric-react)\r\n  - [Starter apps](#starter-apps)\r\n  - [Integrating in your project](#integrating-in-your-project)\r\n  - [Version policy](#version-policy)\r\n  - [Browser support](#browser-support)\r\n  - [Right-to-left support](#right-to-left-support)\r\n  - [Server-side rendering](#server-side-rendering)\r\n  - [Advanced usage](#advanced-usage)\r\n- [Contribute to Fabric React](#contribute-to-fabric-react)\r\n- [Building the repo](#building-the-repo)\r\n  - [Testing](#testing)\r\n  - [Advanced building tips](#advanced-building-tips)\r\n- [Licenses](#licenses)\r\n- [Changelog](#changelog)\r\n\r\n## Using Fabric React\r\n\r\n### Starter apps\r\n\r\nTo create a simple starter app using Fabric components, [install the latest LTS node.js](https://nodejs.org), then run:\r\n\r\n```\r\nnpm init uifabric\r\n```\r\n\r\nIt'll prompt you for a project name. If you choose to create a project called `my-app`, you can start working on the project like this:\r\n\r\n```\r\ncd my-app\r\nnpm start\r\n```\r\n\r\nThis scaffold uses the [`just`](https://github.com/microsoft/just) build library. It is very flexible and requires no \"eject\" script to allow for customization on its configurations.\r\n\r\nIf you prefer to use `create-react-app`, [follow these instructions](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Getting-Started-with-UI-Fabric#create-react-app).\r\n\r\n### Integrating in your project\r\n\r\nHow to integrate components into your project depends heavily on your setup. The recommended setup is to use a bundler such as [Webpack](https://webpack.js.org/) which can resolve NPM package imports in your code and bundle only the specific things you import.\r\n\r\nWithin an npm project, you should install the package and save it as a dependency:\r\n\r\n```\r\nnpm install --save office-ui-fabric-react\r\n```\r\n\r\nThis will add the package as a dependency in your `package.json` file and download it under `node_modules/office-ui-fabric-react`.\r\n\r\nThe library includes ES2015 module entry points under the `lib` folder (use `lib-amd` if you need AMD, or `lib-commonjs` if you need commonjs). To use a control, import it and then use it in your render method:\r\n\r\n```js\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\r\n\r\nReactDOM.render(<PrimaryButton>I am a button.</PrimaryButton>, document.body.firstChild);\r\n```\r\n\r\n### Version policy\r\n\r\nFabric React adheres to [semantic versioning](http://www.semver.org/). However, we only consider constructs directly importable at the package level or from files at the root (e.g. `office-ui-fabric-react/lib/Utilities` or `office-ui-fabric-react/lib-amd/Styling`) to be part of our API surface. Everything else is considered package-internal and may be subject to changes, moves, renames, etc.\r\n\r\n### Browser support\r\n\r\nFabric React supports all evergreen browsers, with IE 11 as the min-bar version of Internet Explorer. See the [browser support doc](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Browser-Support) for more information.\r\n\r\n### Right-to-left support\r\n\r\nAll components can render in LTR or RTL, depending on the `dir` attribute set on the `html` element (`dir=\"rtl\"` will flip the direction of everything). You can also use the `setRTL` API if you don't have control over the `html` element's rendering. Example:\r\n\r\n```tsx\r\nimport { setRTL } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nsetRTL(true);\r\n```\r\n\r\n### Server-side rendering\r\n\r\nFabric components can be rendered in a server-side Node environment (or used in tests which run in an SSR-like environment), but it requires customizing how styles and SCSS files are loaded. See the [server-side rendering documentation](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Server-side-rendering-and-browserless-testing) for examples of how to handle this.\r\n\r\n### Advanced usage\r\n\r\nFor info about advanced usage including module- vs. path-based imports, using an AMD bundler like RequireJS, and deployment features, see our [advanced documentation](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Advanced-Usage).\r\n\r\n## Contribute to Fabric React\r\n\r\nPlease take a look at our [contribution guidelines](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Contributing) for more info. Also read [Contribute bug fixes](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Bug-Fixes) and [Contribute new component](https://github.com/OfficeDev/office-ui-fabric-react/wiki/New-Components).\r\n\r\n## Building the repo\r\n\r\nBefore you get started, **make sure you have read the [Git branch setup instructions](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Setup)**\r\n\r\nTo view the documentation including examples, contracts, component status, and to add functionality or fix issues locally, you can:\r\n\r\n1. `git clone https://github.com/OfficeDev/office-ui-fabric-react.git`\r\n2. `cd office-ui-fabric-react`\r\n3. `yarn`\r\n4. `yarn builddemo`\r\n5. `yarn start`\r\n\r\nThis will start a demo page from the office-ui-fabric-react package folder, which will open a web browser with the example page. You can make changes to the code which will automatically build and refresh the page using live-reload.\r\n\r\nTo build and run tests for all packages in the repo, run `yarn build` from the root.\r\n\r\nTo build individual packages within the `packages/*` or `apps/*` folders, `cd` to the relevant folder and run `yarn build`. Note that because the packages are symlinked together, you must manage building dependencies in the right order, or use the `yarn buildto` script to build to the specific package you want.\r\n\r\n#### Advanced build commands\r\n\r\nThere are more advanced build commands listed in the [Build Commands](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Build-Commands) wiki page.\r\n\r\n### Testing\r\n\r\nFor info about testing, see our [testing documentation](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Testing).\r\n\r\n## Licenses\r\n\r\nAll files on the Office UI Fabric React GitHub repository are subject to the MIT license. Please read the License file at the root of the project.\r\n\r\nUsage of the fonts and icons referenced in Office UI Fabric is subject to the terms of the [assets license agreement](https://aka.ms/fabric-assets-license).\r\n\r\n## Changelog\r\n\r\nWe use [GitHub Releases](https://github.com/blog/1547-release-your-software) to manage our releases, including the changelog between every release. View a complete list of additions, fixes, and changes on the [releases](https://github.com/OfficeDev/office-ui-fabric-react/releases) page.\r\n\r\n---\r\n\r\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\r\n"}, {"repo": "standard/standard", "language": "JavaScript", "readme_contents": "<h1 align=\"center\">\n  <a href=\"https://standardjs.com\"><img src=\"https://cdn.rawgit.com/standard/standard/master/sticker.svg\" alt=\"Standard - JavaScript Style Guide\" width=\"200\"></a>\n  <br>\n  JavaScript Standard Style\n  <br>\n  <br>\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/ZegqCBr\"><img src=\"https://img.shields.io/discord/612704110008991783\" alt=\"discord\"></a>\n  <a href=\"https://travis-ci.org/standard/standard\"><img src=\"https://img.shields.io/travis/standard/standard/master.svg\" alt=\"travis\"></a>\n  <a href=\"https://www.npmjs.com/package/standard\"><img src=\"https://img.shields.io/npm/v/standard.svg\" alt=\"npm version\"></a>\n  <a href=\"https://www.npmjs.com/package/eslint-config-standard\"><img src=\"https://img.shields.io/npm/dm/eslint-config-standard.svg\" alt=\"npm downloads\"></a>\n  <a href=\"https://standardjs.com\"><img src=\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\" alt=\"Standard - JavaScript Style Guide\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"/docs/README-en.md\">English</a> \u2022\n  <a href=\"/docs/README-esla.md\">Espa\u00f1ol (Latinoam\u00e9rica)</a> \u2022\n  <a href=\"/docs/README-fr.md\">Fran\u00e7ais</a> \u2022\n  <a href=\"/docs/README-iteu.md\">Italiano (Italian)</a> \u2022\n  <a href=\"/docs/README-ja.md\">\u65e5\u672c\u8a9e (Japanese)</a> \u2022\n  <a href=\"/docs/README-kokr.md\">\ud55c\uad6d\uc5b4 (Korean)</a> \u2022\n  <a href=\"/docs/README-ptbr.md\">Portugu\u00eas (Brasil)</a> \u2022\n  <a href=\"/docs/README-zhcn.md\">\u7b80\u4f53\u4e2d\u6587 (Simplified Chinese)</a> \u2022\n  <a href=\"/docs/README-zhtw.md\">\u7e41\u9ad4\u4e2d\u6587 (Taiwanese Mandarin)</a>\n</p>\n\n<h5 align=\"center\">\n  Sponsored by&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://botpress.io/?utm_source=standardjs&utm_medium=referral&utm_campaign=feross\" rel=\"nofollow\"><img src=\"https://feross.org/images/supporters/botpress.png\" alt=\"Botpress\" height=35 valign=\"middle\"></a>\n</h5>\n\n## JavaScript style guide, linter, and formatter\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce code quality in your\n  project. No decisions to make. No `.eslintrc` files to manage. It just works.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nGive it a try by running `npx standard --fix` right now!\n\n## Table of Contents\n\n- Quick start\n  - [Install](#install)\n  - [Usage](#usage)\n  - [What you might do if you're clever](#what-you-might-do-if-youre-clever)\n- FAQ\n  - [Why should I use JavaScript Standard Style?](#why-should-i-use-javascript-standard-style)\n  - [Who uses JavaScript Standard Style?](#who-uses-javascript-standard-style)\n  - [Are there text editor plugins?](#are-there-text-editor-plugins)\n  - [Is there a readme badge?](#is-there-a-readme-badge)\n  - [I disagree with rule X, can you change it?](#i-disagree-with-rule-x-can-you-change-it)\n  - [But this isn't a real web standard!](#but-this-isnt-a-real-web-standard)\n  - [Is there an automatic formatter?](#is-there-an-automatic-formatter)\n  - [How do I ignore files?](#how-do-i-ignore-files)\n  - [How do I hide a certain warning?](#how-do-i-hide-a-certain-warning)\n  - [I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?](#i-use-a-library-that-pollutes-the-global-namespace-how-do-i-prevent-variable-is-not-defined-errors)\n  - [How do I use experimental JavaScript (ES Next) features?](#how-do-i-use-experimental-javascript-es-next-features)\n  - [Can I use a JavaScript language variant, like Flow or TypeScript?](#can-i-use-a-javascript-language-variant-like-flow-or-typescript)\n  - [What about Mocha, Jest, Jasmine, QUnit, etc?](#what-about-mocha-jest-jasmine-qunit-etc)\n  - [What about Web Workers and Service Workers?](#what-about-web-workers-and-service-workers)\n  - [Can I check code inside of Markdown or HTML files?](#can-i-check-code-inside-of-markdown-or-html-files)\n  - [Is there a Git `pre-commit` hook?](#is-there-a-git-pre-commit-hook)\n  - [How do I make the output all colorful and pretty?](#how-do-i-make-the-output-all-colorful-and-pretty)\n  - [Is there a Node.js API?](#is-there-a-nodejs-api)\n  - [How do I contribute to StandardJS?](#how-do-i-contribute-to-standardjs)\n- [License](#license)\n\n## Install\n\nThe easiest way to use JavaScript Standard Style is to install it globally as a\nNode command line program. Run the following command in Terminal:\n\n```bash\n$ npm install standard --global\n```\n\nOr, you can install `standard` locally, for use in a single project:\n\n```bash\n$ npm install standard --save-dev\n```\n\n*Note: To run the preceding commands, [Node.js](http://nodejs.org) and [npm](https://npmjs.com) must be installed.*\n\n## Usage\n\nAfter you've installed `standard`, you should be able to use the `standard` program. The\nsimplest use case would be checking the style of all JavaScript files in the\ncurrent working directory:\n\n```bash\n$ standard\nError: Use JavaScript Standard Style\n  lib/torrent.js:950:11: Expected '===' and instead saw '=='.\n```\n\nIf you've installed `standard` locally, run with `npx` instead:\n\n```bash\n$ npx standard\n```\n\nYou can optionally pass in a directory (or directories) using the glob pattern. Be\nsure to quote paths containing glob patterns so that they are expanded by\n`standard` instead of your shell:\n\n```bash\n$ standard \"src/util/**/*.js\" \"test/**/*.js\"\n```\n\n**Note:** by default `standard` will look for all files matching the patterns:\n`**/*.js`, `**/*.jsx`.\n\n## What you might do if you're clever\n\n1. Add it to `package.json`\n\n  ```json\n  {\n    \"name\": \"my-cool-package\",\n    \"devDependencies\": {\n      \"standard\": \"*\"\n    },\n    \"scripts\": {\n      \"test\": \"standard && node my-tests.js\"\n    }\n  }\n  ```\n\n2. Style is checked automatically when you run `npm test`\n\n  ```bash\n  $ npm test\n  Error: Use JavaScript Standard Style\n    lib/torrent.js:950:11: Expected '===' and instead saw '=='.\n  ```\n\n3. Never give style feedback on a pull request again!\n\n## Why should I use JavaScript Standard Style?\n\nThe beauty of JavaScript Standard Style is that it's simple. No one wants to\nmaintain multiple hundred-line style configuration files for every module/project\nthey work on. Enough of this madness!\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce consistent style in your\n  project. Just drop it in.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nAdopting `standard` style means ranking the importance of code clarity and\ncommunity conventions higher than personal style. This might not make sense for\n100% of projects and development cultures, however open source can be a hostile\nplace for newbies. Setting up clear, automated contributor expectations makes a\nproject healthier.\n\nFor more info, see the conference talk [\"Write Perfect Code with Standard and\nESLint\"](https://www.youtube.com/watch?v=kuHfMw8j4xk). In this talk, you'll learn\nabout linting, when to use `standard` versus `eslint`, and how `prettier` compares\nto `standard`.\n\n## Who uses JavaScript Standard Style?\n\n[<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodejs.png>](https://nodejs.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/npm.png>](https://www.npmjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/github.png>](https://github.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/elastic.png>](https://www.elastic.co) |\n|---|---|---|---|\n\n[<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/express.png>](http://expressjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/electron.png>](http://electron.atom.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nuxtjs.png>](https://nuxtjs.org/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/atom.png>](https://atom.io) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/mongodb.jpg>](https://www.mongodb.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zendesk.png>](https://www.zendesk.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/brave.png>](https://www.brave.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zeit.png>](https://zeit.co) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodesource.png>](https://nodesource.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nearform.png>](http://www.nearform.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/typeform.png>](https://www.typeform.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/gov-uk.png>](https://gds.blog.gov.uk) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/heroku.png>](https://www.heroku.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/saucelabs.png>](https://saucelabs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/automattic.png>](https://automattic.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/godaddy.png>](https://www.godaddy.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/webtorrent.png>](https://webtorrent.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/ipfs.png>](https://ipfs.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/dat.png>](https://datproject.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bitcoinjs.png>](https://bitcoinjs.org) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/voltra.png>](https://voltra.co) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/treasuredata.png>](https://www.treasuredata.com) | [<img alt=\"Free MIDIs, MIDI file downloads\" width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bitmidi.png>](https://bitmidi.com) | [<img width=190 alt=\"College essays, AP notes\" src=https://cdn.rawgit.com/standard/standard/master/docs/logos/studynotes.jpg>](https://www.apstudynotes.org) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/optiopay.png>](https://www.optiopay.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/jaguar-landrover.png>](https://www.jlrtechincubator.com/jlrti/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bustle.jpg>](https://www.bustle.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zentrick.png>](https://www.zentrick.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/greenkeeper.png>](https://greenkeeper.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/karma.png>](https://karma-runner.github.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/taser.png>](https://www.taser.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/neo4j.png>](https://www.neo4j.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/rentograph.png>](https://rentograph.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/eaze.png>](https://www.eaze.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/ctrl-alt-deseat.png>](https://www.ctrlaltdeseat.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/clevertech.png>](https://clevertech.biz) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/aragon.png>](https://aragon.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/flowsent.png>](https://www.flowsent.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/puma-browser.png>](https://www.pumabrowser.com/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/webstorm.png>](https://www.jetbrains.com/webstorm/) |\n|---|---|---|---|\n\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/fastify.png>](https://www.fastify.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/scuttlebutt.png>](https://www.scuttlebutt.nz) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/solid.png>](https://solid.inrupt.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/grab.png>](https://www.grab.com) |\n|---|---|---|---|\n\n\n| Your logo here | Your logo here | Your logo here | Your logo here |\n|---|---|---|---|\n\n\nIn addition to companies, many community members use `standard` on packages that\nare [too numerous](https://raw.githubusercontent.com/standard/standard-packages/master/all.json)\nto list here.\n\n`standard` is also the top-starred linter in GitHub's\n[Clean Code Linter](https://github.com/showcases/clean-code-linters) showcase.\n\n## Are there text editor plugins?\n\nFirst, install `standard`. Then, install the appropriate plugin for your editor:\n\n### Sublime Text\n\nUsing **[Package Control][sublime-1]**, install **[SublimeLinter][sublime-2]** and\n**[SublimeLinter-contrib-standard][sublime-3]**.\n\nFor automatic formatting on save, install **[StandardFormat][sublime-4]**.\n\n[sublime-1]: https://packagecontrol.io/\n[sublime-2]: http://www.sublimelinter.com/en/latest/\n[sublime-3]: https://packagecontrol.io/packages/SublimeLinter-contrib-standard\n[sublime-4]: https://packagecontrol.io/packages/StandardFormat\n\n### Atom\n\nInstall **[linter-js-standard][atom-1]**.\n\nAlternatively, you can install **[linter-js-standard-engine][atom-4]**. Instead of\nbundling a version of `standard` it will automatically use the version installed\nin your current project. It will also work out of the box with other linters based\non **[standard-engine][atom-5]**.\n\nFor automatic formatting, install **[standard-formatter][atom-2]**. For snippets,\ninstall **[standardjs-snippets][atom-3]**.\n\n[atom-1]: https://atom.io/packages/linter-js-standard\n[atom-2]: https://atom.io/packages/standard-formatter\n[atom-3]: https://atom.io/packages/standardjs-snippets\n[atom-4]: https://atom.io/packages/linter-js-standard-engine\n[atom-5]: https://github.com/standard/standard-engine\n\n### Visual Studio Code\n\nInstall **[vscode-standardjs][vscode-1]**. (Includes support for automatic formatting.)\n\nFor JS snippets, install: **[vscode-standardjs-snippets][vscode-2]**. For React snippets, install **[vscode-react-standard][vscode-3]**.\n\n[vscode-1]: https://marketplace.visualstudio.com/items/chenxsan.vscode-standardjs\n[vscode-2]: https://marketplace.visualstudio.com/items?itemName=capaj.vscode-standardjs-snippets\n[vscode-3]: https://marketplace.visualstudio.com/items/TimonVS.ReactSnippetsStandard\n\n### Vim\n\nInstall **[ale][vim-1]**. And add these lines to your `.vimrc` file.\n\n```vim\nlet g:ale_linters = {\n\\   'javascript': ['standard'],\n\\}\nlet g:ale_fixers = {'javascript': ['standard']}\n```\n\nThis sets standard as your only linter and fixer for javascript files and so prevents conflicts with eslint. For linting and automatic fixing on save, add these lines to `.vimrc`:\n```vim\nlet g:ale_lint_on_save = 1\nlet g:ale_fix_on_save = 1\n```\n\n\nAlternative plugins to consider include [neomake][vim-2] and [syntastic][vim-3], both of which have built-in support for `standard` (though configuration may be necessary).\n\n[vim-1]: https://github.com/w0rp/ale\n[vim-2]: https://github.com/neomake/neomake\n[vim-3]: https://github.com/vim-syntastic/syntastic\n\n### Emacs\n\nInstall **[Flycheck][emacs-1]** and check out the **[manual][emacs-2]** to learn\nhow to enable it in your projects.\n\n[emacs-1]: http://www.flycheck.org\n[emacs-2]: http://www.flycheck.org/en/latest/user/installation.html\n\n### Brackets\n\nSearch the extension registry for **[\"Standard Code Style\"][brackets-1]** and click \"Install\".\n\n[brackets-1]: https://github.com/ishamf/brackets-standard/\n\n### WebStorm (PhpStorm, IntelliJ, RubyMine, JetBrains, etc.)\n\nWebStorm [recently announced native support](https://blog.jetbrains.com/webstorm/2017/01/webstorm-2017-1-eap-171-2272/)\nfor `standard` directly in the IDE.\n\nIf you still prefer to configure `standard` manually, [follow this guide][webstorm-1]. This applies to all JetBrains products, including PhpStorm, IntelliJ, RubyMine, etc.\n\n[webstorm-1]: docs/webstorm.md\n\n## Is there a readme badge?\n\nYes! If you use `standard` in your project, you can include one of these badges in\nyour readme to let people know that your code is using the standard style.\n\n[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)\n\n```md\n[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)\n```\n\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n```md\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n```\n\n## I disagree with rule X, can you change it?\n\nNo. The whole point of `standard` is to save you time by avoiding\n[bikeshedding][bikeshedding] about code style. There are lots of debates online about\ntabs vs. spaces, etc. that will never be resolved. These debates just distract from\ngetting stuff done. At the end of the day you have to 'just pick something', and\nthat's the whole philosophy of `standard` -- its a bunch of sensible 'just pick\nsomething' opinions. Hopefully, users see the value in that over defending their\nown opinions.\n\nThere are a couple of similar packages for anyone who does not want to completely accept `standard`:\n- [semistandard](https://github.com/standard/semistandard) - standard, with semicolons\n- [standardx](https://github.com/standard/standardx) - standard, with custom tweaks\n\nIf you really want to configure hundreds of ESLint rules individually, you can\nalways use `eslint` directly with\n[eslint-config-standard](https://github.com/standard/eslint-config-standard) to\nlayer your changes on top.\n[`standard-eject`](https://github.com/josephfrazier/standard-eject) can help\nyou migrate from `standard` to `eslint` and `eslint-config-standard`.\n\nPro tip: Just use `standard` and move on. There are actual real problems that you\ncould spend your time solving! :P\n\n[bikeshedding]: https://www.freebsd.org/doc/en/books/faq/misc.html#bikeshed-painting\n\n## But this isn't a real web standard!\n\nOf course it's not! The style laid out here is not affiliated with any official web\nstandards groups, which is why this repo is called `standard/standard` and not\n`ECMA/standard`.\n\nThe word \"standard\" has more meanings than just \"web standard\" :-) For example:\n\n- This module helps hold our code to a high *standard of quality*.\n- This module ensures that new contributors follow some basic *style standards*.\n\n## Is there an automatic formatter?\n\nYes! You can use `standard --fix` to fix most issues automatically.\n\n`standard --fix` is built into `standard` for maximum convenience. Most problems\nare fixable, but some errors (like forgetting to handle errors) must be fixed\nmanually.\n\nTo save you time, `standard` outputs the message \"`Run standard --fix to\nautomatically fix some problems`\" when it detects problems that can be fixed\nautomatically.\n\n## How do I ignore files?\n\nCertain paths (`node_modules/`, `coverage/`, `vendor/`, `*.min.js`, `bundle.js`,\nand files/folders that begin with `.` like `.git/`) are automatically ignored.\n\nPaths in a project's root `.gitignore` file are also automatically ignored.\n\nSometimes you need to ignore additional folders or specific minified files. To do\nthat, add a `standard.ignore` property to `package.json`:\n\n```json\n\"standard\": {\n  \"ignore\": [\n    \"**/out/\",\n    \"/lib/select2/\",\n    \"/lib/ckeditor/\",\n    \"tmp.js\"\n  ]\n}\n```\n\n## How do I hide a certain warning?\n\nIn rare cases, you'll need to break a rule and hide the warning generated by\n`standard`.\n\nJavaScript Standard Style uses [ESLint](http://eslint.org/) under-the-hood and\nyou can hide warnings as you normally would if you used ESLint directly.\n\nTo get verbose output (so you can find the particular rule name to ignore), run:\n\n```bash\n$ standard --verbose\nError: Use JavaScript Standard Style\n  routes/error.js:20:36: 'file' was used before it was defined. (no-use-before-define)\n```\n\nDisable **all rules** on a specific line:\n\n```js\nfile = 'I know what I am doing' // eslint-disable-line\n```\n\nOr, disable **only** the `\"no-use-before-define\"` rule:\n\n```js\nfile = 'I know what I am doing' // eslint-disable-line no-use-before-define\n```\n\nOr, disable the `\"no-use-before-define\"` rule for **multiple lines**:\n\n```js\n/* eslint-disable no-use-before-define */\nconsole.log('offending code goes here...')\nconsole.log('offending code goes here...')\nconsole.log('offending code goes here...')\n/* eslint-enable no-use-before-define */\n```\n\n## I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?\n\nSome packages (e.g. `mocha`) put their functions (e.g. `describe`, `it`) on the\nglobal object (poor form!). Since these functions are not defined or `require`'d\nanywhere in your code, `standard` will warn that you're using a variable that is\nnot defined (usually, this rule is really useful for catching typos!). But we want\nto disable it for these global variables.\n\nTo let `standard` (as well as humans reading your code) know that certain variables\nare global in your code, add this to the top of your file:\n\n```js\n/* global myVar1, myVar2 */\n```\n\nIf you have hundreds of files, it may be desirable to avoid adding comments to\nevery file. In this case, run:\n\n```bash\n$ standard --global myVar1 --global myVar2\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"globals\": [ \"myVar1\", \"myVar2\" ]\n  }\n}\n```\n\n*Note: `global` and `globals` are equivalent.*\n\n## How do I use experimental JavaScript (ES Next) features?\n\n`standard` supports the latest ECMAScript features, ES8 (ES2017), including\nlanguage feature proposals that are in \"Stage 4\" of the proposal process.\n\nTo support experimental language features, `standard` supports specifying a\ncustom JavaScript parser. Before using a custom parser, consider whether the added\ncomplexity is worth it.\n\nTo use a custom parser, first install it from npm:\n\n```bash\nnpm install babel-eslint --save-dev\n```\n\nThen run:\n\n```bash\n$ standard --parser babel-eslint\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"babel-eslint\"\n  }\n}\n```\n\n## Can I use a JavaScript language variant, like Flow or TypeScript?\n\n`standard` supports the latest ECMAScript features. However, Flow and TypeScript add new\nsyntax to the language, so they are not supported out-of-the-box.\n\nTo support JavaScript language variants, `standard` supports specifying a custom JavaScript\nparser as well as an ESLint plugin to handle the changed syntax. Before using a JavaScript\nlanguage variant, consider whether the added complexity is worth it.\n\n### Flow\n\nTo use Flow, you need to run `standard` with `babel-eslint` as the parser and\n`eslint-plugin-flowtype` as a plugin.\n\n```bash\nnpm install babel-eslint eslint-plugin-flowtype --save-dev\n```\n\nThen run:\n\n```bash\n$ standard --parser babel-eslint --plugin flowtype\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"babel-eslint\",\n    \"plugins\": [ \"flowtype\" ]\n  }\n}\n```\n\n*Note: `plugin` and `plugins` are equivalent.*\n\n### TypeScript\n\nTo use TypeScript, you need to run `standard` with `@typescript-eslint/parser` as the parser,\n`@typescript-eslint/eslint-plugin` as a plugin, and tell standard to lint `**/*.ts` files (since it\ndoesn't by default).\n\nUnfortunately, there's an outstanding [issue](https://github.com/standard/standard/issues/1283)\nwith `standard` and Typescript where `standard` would incorrectly emit unused-variable errors\n(e.g: when you import interfaces). And as a workaround, you need to use\n[standardx](https://github.com/standard/standardx) instead:sweat_smile:.\n\n```bash\nnpm install standardx @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev\n```\n\nThen run:\n\n```bash\n$ standardx --parser @typescript-eslint/parser --plugin @typescript-eslint/eslint-plugin **/*.ts\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"eslintConfig\": {\n    \"rules\": {\n      \"no-unused-vars\": \"off\",\n      \"@typescript-eslint/no-unused-vars\": \"error\"\n    }\n  },\n  \"standardx\": {\n    \"parser\": \"@typescript-eslint/parser\",\n    \"plugins\": [ \"@typescript-eslint/eslint-plugin\" ]\n  }\n}\n```\n\nWith that in `package.json`, you can run:\n\n```bash\nstandardx **/*.ts\n```\n\nAnd you probably should remove `standard` too to avoid confusion where it's used by mistake\ninstead of `standardx`.\n\n```bash\nnpm uninstall standard\n```\n\n## What about Mocha, Jest, Jasmine, QUnit, etc?\n\nTo support mocha in test files, add this to the top of the test files:\n\n```js\n/* eslint-env mocha */\n```\n\nOr, run:\n\n```bash\n$ standard --env mocha\n```\n\nWhere `mocha` can be one of `jest`, `jasmine`, `qunit`, `phantomjs`, and so on. To see a\nfull list, check ESLint's\n[specifying environments](http://eslint.org/docs/user-guide/configuring.html#specifying-environments)\ndocumentation. For a list of what globals are available for these environments,\ncheck the\n[globals](https://github.com/sindresorhus/globals/blob/master/globals.json) npm\nmodule.\n\n*Note: `env` and `envs` are equivalent.*\n\n## What about Web Workers and Service Workers?\n\nAdd this to the top of web worker files:\n\n```js\n/* eslint-env worker */\n```\n\nThis lets `standard` (as well as humans reading the code) know that `self` is a\nglobal in web worker code.\n\nFor Service workers, add this instead:\n\n```js\n/* eslint-env serviceworker */\n```\n\n## Can I check code inside of Markdown or HTML files?\n\nTo check code inside Markdown files, use [`standard-markdown`](https://www.npmjs.com/package/standard-markdown).\n\nAlternatively, there are ESLint plugins that can check code inside Markdown, HTML,\nand many other types of language files:\n\nTo check code inside Markdown files, use an ESLint plugin:\n\n```bash\n$ npm install eslint-plugin-markdown\n```\n\nThen, to check JS that appears inside code blocks, run:\n\n```bash\n$ standard --plugin markdown '**/*.md'\n```\n\nTo check code inside HTML files, use an ESLint plugin:\n\n```bash\n$ npm install eslint-plugin-html\n```\n\nThen, to check JS that appears inside `<script>` tags, run:\n\n```bash\n$ standard --plugin html '**/*.html'\n```\n\n## Is there a Git `pre-commit` hook?\n\nFunny you should ask!\n\n```bash\n#!/bin/bash\n\n# Ensure all JavaScript files staged for commit pass standard code style\nfunction xargs-r() {\n  # Portable version of \"xargs -r\". The -r flag is a GNU extension that\n  # prevents xargs from running if there are no input files.\n  if IFS= read -r -d $'\\n' path; then\n    { echo \"$path\"; cat; } | xargs $@\n  fi\n}\ngit diff --name-only --cached --relative | grep '\\.jsx\\?$' | sed 's/[^[:alnum:]]/\\\\&/g' | xargs-r -E '' -t standard\nif [[ $? -ne 0 ]]; then\n  echo 'JavaScript Standard Style errors were detected. Aborting commit.'\n  exit 1\nfi\n```\n\n## How do I make the output all colorful and pretty?\n\nThe built-in output is simple and straightforward, but if you like shiny things,\ninstall [snazzy](https://www.npmjs.com/package/snazzy):\n\n```bash\n$ npm install snazzy\n```\n\nAnd run:\n\n```bash\n$ standard --verbose | snazzy\n```\n\nThere's also [standard-tap](https://www.npmjs.com/package/standard-tap),\n[standard-json](https://www.npmjs.com/package/standard-json),\n[standard-reporter](https://www.npmjs.com/package/standard-reporter), and\n[standard-summary](https://www.npmjs.com/package/standard-summary).\n\n## Is there a Node.js API?\n\nYes!\n\n### `standard.lintText(text, [opts], callback)`\n\nLint the provided source `text`. An `opts` object may be provided:\n\n```js\n{\n  cwd: '',      // current working directory (default: process.cwd())\n  filename: '', // path of the file containing the text being linted (optional, though some eslint plugins require it)\n  fix: false,   // automatically fix problems\n  globals: [],  // custom global variables to declare\n  plugins: [],  // custom eslint plugins\n  envs: [],     // custom eslint environment\n  parser: ''    // custom js parser (e.g. babel-eslint)\n}\n```\n\nAdditional options may be loaded from a `package.json` if it's found for the\ncurrent working directory.\n\nThe `callback` will be called with an `Error` and `results` object.\n\nThe `results` object will contain the following properties:\n\n```js\nvar results = {\n  results: [\n    {\n      filePath: '',\n      messages: [\n        { ruleId: '', message: '', line: 0, column: 0 }\n      ],\n      errorCount: 0,\n      warningCount: 0,\n      output: '' // fixed source code (only present with {fix: true} option)\n    }\n  ],\n  errorCount: 0,\n  warningCount: 0\n}\n```\n\n### `results = standard.lintTextSync(text, [opts])`\n\nSynchronous version of `standard.lintText()`. If an error occurs, an exception is\nthrown. Otherwise, a `results` object is returned.\n\n### `standard.lintFiles(files, [opts], callback)`\n\nLint the provided `files` globs. An `opts` object may be provided:\n\n```js\nvar opts = {\n  ignore: [],   // file globs to ignore (has sane defaults)\n  cwd: '',      // current working directory (default: process.cwd())\n  fix: false,   // automatically fix problems\n  globals: [],  // global variables to declare\n  plugins: [],  // eslint plugins\n  envs: [],     // eslint environment\n  parser: ''    // js parser (e.g. babel-eslint)\n}\n```\n\nThe `callback` will be called with an `Error` and `results` object (same as above).\n\n## How do I contribute to StandardJS?\n\nContributions are welcome! Check out the [issues](https://github.com/standard/standard/issues) or the [PRs](https://github.com/standard/standard/pulls), and make your own if you want something that you don't see there.\n\nWant to chat? Join contributors on IRC in the `#standard` channel on freenode.\n\nHere are some important packages in the `standard` ecosystem:\n\n- **[standard](https://github.com/standard/standard)** - this repo\n  - **[standard-engine](https://github.com/standard/standard-engine)** - cli engine for arbitrary eslint rules\n  - **[eslint-config-standard](https://github.com/standard/eslint-config-standard)** - eslint rules for standard\n  - **[eslint-config-standard-jsx](https://github.com/standard/eslint-config-standard-jsx)** - eslint rules for standard (JSX)\n  - **[eslint-plugin-standard](https://github.com/standard/eslint-plugin-standard)** - custom eslint rules for standard (not part of eslint core)\n  - **[eslint](https://github.com/eslint/eslint)** - the linter that powers standard\n- **[snazzy](https://github.com/standard/snazzy)** - pretty terminal output for standard\n- **[standard-www](https://github.com/standard/standard-www)** - code for https://standardjs.com\n- **[semistandard](https://github.com/standard/semistandard)** - standard, with semicolons (if you must)\n- **[standardx](https://github.com/standard/standardx)** - standard, with custom tweaks\n\nThere are also many **[editor plugins](#are-there-text-editor-plugins)**, a list of\n**[npm packages that use `standard`](https://github.com/standard/standard-packages)**,\nand an awesome list of\n**[packages in the `standard` ecosystem](https://github.com/standard/awesome-standard)**.\n\n## Security Policies and Procedures\n\nThe `standard` team and community take all security bugs in `standard` seriously. Please see our [security policies and procedures](https://github.com/standard/.github/blob/master/SECURITY.md) document to learn how to report issues.\n\n## License\n\n[MIT](LICENSE). Copyright (c) [Feross Aboukhadijeh](https://feross.org).\n"}, {"repo": "eslint/eslint", "language": "JavaScript", "readme_contents": "[![NPM version][npm-image]][npm-url]\n[![Build Status](https://dev.azure.com/eslint/eslint/_apis/build/status/eslint.eslint?branchName=master)](https://dev.azure.com/eslint/eslint/_build/latest?definitionId=1&branchName=master)\n[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)\n[![Downloads][downloads-image]][downloads-url]\n[![Bountysource](https://www.bountysource.com/badge/tracker?tracker_id=282608)](https://www.bountysource.com/trackers/282608-eslint?utm_source=282608&utm_medium=shield&utm_campaign=TRACKER_BADGE)\n[![Join the chat at https://gitter.im/eslint/eslint](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eslint/eslint?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_shield)\n\n# ESLint\n\n[Website](https://eslint.org) |\n[Configuring](https://eslint.org/docs/user-guide/configuring) |\n[Rules](https://eslint.org/docs/rules/) |\n[Contributing](https://eslint.org/docs/developer-guide/contributing) |\n[Reporting Bugs](https://eslint.org/docs/developer-guide/contributing/reporting-bugs) |\n[Code of Conduct](https://js.foundation/community/code-of-conduct) |\n[Twitter](https://twitter.com/geteslint) |\n[Mailing List](https://groups.google.com/group/eslint) |\n[Chat Room](https://gitter.im/eslint/eslint)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n* ESLint uses [Espree](https://github.com/eslint/espree) for JavaScript parsing.\n* ESLint uses an AST to evaluate patterns in code.\n* ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Table of Contents\n\n1. [Installation and Usage](#installation-and-usage)\n2. [Configuration](#configuration)\n3. [Code of Conduct](#code-of-conduct)\n4. [Filing Issues](#filing-issues)\n5. [Frequently Asked Questions](#faq)\n6. [Releases](#releases)\n7. [Semantic Versioning Policy](#semantic-versioning-policy)\n8. [License](#license)\n9. [Team](#team)\n10. [Sponsors](#sponsors)\n11. [Technology Sponsors](#technology-sponsors)\n\n## <a name=\"installation-and-usage\"></a>Installation and Usage\n\nPrerequisites: [Node.js](https://nodejs.org/) (`^8.10.0`, `^10.13.0`, or `>=11.10.1`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)\n\nYou can install ESLint using npm:\n\n```\n$ npm install eslint --save-dev\n```\n\nYou should then set up a configuration file:\n\n```\n$ ./node_modules/.bin/eslint --init\n```\n\nAfter that, you can run ESLint on any file or directory like this:\n\n```\n$ ./node_modules/.bin/eslint yourfile.js\n```\n\n## <a name=\"configuration\"></a>Configuration\n\nAfter running `eslint --init`, you'll have a `.eslintrc` file in your directory. In it, you'll see some rules configured like this:\n\n```json\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\n```\n\nThe names `\"semi\"` and `\"quotes\"` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:\n\n* `\"off\"` or `0` - turn the rule off\n* `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n* `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/user-guide/configuring)).\n\n## <a name=\"code-of-conduct\"></a>Code of Conduct\n\nESLint adheres to the [JS Foundation Code of Conduct](https://js.foundation/community/code-of-conduct).\n\n## <a name=\"filing-issues\"></a>Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n* [Bug Report](https://eslint.org/docs/developer-guide/contributing/reporting-bugs)\n* [Propose a New Rule](https://eslint.org/docs/developer-guide/contributing/new-rules)\n* [Proposing a Rule Change](https://eslint.org/docs/developer-guide/contributing/rule-changes)\n* [Request a Change](https://eslint.org/docs/developer-guide/contributing/changes)\n\n## <a name=\"faq\"></a>Frequently Asked Questions\n\n### I'm using JSCS, should I migrate to ESLint?\n\nYes. [JSCS has reached end of life](https://eslint.org/blog/2016/07/jscs-end-of-life) and is no longer supported.\n\nWe have prepared a [migration guide](https://eslint.org/docs/user-guide/migrating-from-jscs) to help you convert your JSCS settings to an ESLint configuration.\n\nWe are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.\n\n### Does Prettier replace ESLint?\n\nNo, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.\n\n### Why can't ESLint find my plugins?\n\n* Make sure your plugins (and ESLint) are both in your project's `package.json` as devDependencies (or dependencies, if your project uses ESLint at runtime).\n* Make sure you have run `npm install` and all your dependencies are installed.\n* Make sure your plugins' peerDependencies have been installed as well. You can use `npm view eslint-plugin-myplugin peerDependencies` to see what peer dependencies `eslint-plugin-myplugin` has.\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/user-guide/configuring)). Please note that supporting JSX syntax *is not* the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.\n\n### What ECMAScript versions does ESLint support?\n\nESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, and 2019. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through [configuration](https://eslint.org/docs/user-guide/configuring).\n\n### What about experimental features?\n\nESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.\n\nIn other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use the [babel-eslint](https://github.com/babel/babel-eslint) parser and [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) to use any option available in Babel.\n\nOnce a language feature has been adopted into the ECMAScript standard (stage 4 according to the [TC39 process](https://tc39.github.io/process-document/)), we will accept issues and pull requests related to the new feature, subject to our [contributing guidelines](https://eslint.org/docs/developer-guide/contributing). Until then, please use the appropriate parser and plugin(s) for your experimental feature.\n\n### Where to ask for help?\n\nJoin our [Mailing List](https://groups.google.com/group/eslint) or [Chatroom](https://gitter.im/eslint/eslint).\n\n## <a name=\"releases\"></a>Releases\n\nWe have scheduled releases every two weeks on Friday or Saturday. You can follow a [release issue](https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease) for updates about the scheduling of any particular release.\n\n## <a name=\"semantic-versioning-policy\"></a>Semantic Versioning Policy\n\nESLint follows [semantic versioning](https://semver.org). However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:\n\n* Patch release (intended to not break your lint build)\n    * A bug fix in a rule that results in ESLint reporting fewer errors.\n    * A bug fix to the CLI or core (including formatters).\n    * Improvements to documentation.\n    * Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    * Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n* Minor release (might break your lint build)\n    * A bug fix in a rule that results in ESLint reporting more errors.\n    * A new rule is created.\n    * A new option to an existing rule that does not result in ESLint reporting more errors by default.\n    * An existing rule is deprecated.\n    * A new CLI capability is created.\n    * New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).\n    * A new formatter is created.\n    * `eslint:recommended` is updated and will result in strictly fewer errors (e.g., rule removals).\n* Major release (likely to break your lint build)\n    * `eslint:recommended` is updated and may result in new errors (e.g., rule additions, most rule option updates).\n    * A new option to an existing rule that results in ESLint reporting more errors by default.\n    * An existing formatter is removed.\n    * Part of the public API is removed or changed in an incompatible way.\n\nAccording to our policy, any minor update may report more errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (`~`) in `package.json` e.g. `\"eslint\": \"~3.1.0\"` to guarantee the results of your builds.\n\n## <a name=\"license\"></a>License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_large)\n\n## <a name=\"team\"></a>Team\n\nThese folks keep the project moving and are resources for help.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--teamstart-->\n\n### Technical Steering Committee (TSC)\n\nThe people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/nzakas\">\n<img src=\"https://github.com/nzakas.png?s=75\" width=\"75\" height=\"75\"><br />\nNicholas C. Zakas\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/platinumazure\">\n<img src=\"https://github.com/platinumazure.png?s=75\" width=\"75\" height=\"75\"><br />\nKevin Partington\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/ilyavolodin\">\n<img src=\"https://github.com/ilyavolodin.png?s=75\" width=\"75\" height=\"75\"><br />\nIlya Volodin\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/btmills\">\n<img src=\"https://github.com/btmills.png?s=75\" width=\"75\" height=\"75\"><br />\nBrandon Mills\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mysticatea\">\n<img src=\"https://github.com/mysticatea.png?s=75\" width=\"75\" height=\"75\"><br />\nToru Nagashima\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/kaicataldo\">\n<img src=\"https://github.com/kaicataldo.png?s=75\" width=\"75\" height=\"75\"><br />\nKai Cataldo\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/not-an-aardvark\">\n<img src=\"https://github.com/not-an-aardvark.png?s=75\" width=\"75\" height=\"75\"><br />\nTeddy Katz\n</a>\n</td></tr></tbody></table>\n\n\n### Reviewers\n\nThe people who review and implement new features.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/aladdin-add\">\n<img src=\"https://github.com/aladdin-add.png?s=75\" width=\"75\" height=\"75\"><br />\n\u859b\u5b9a\u8c14\u7684\u732b\n</a>\n</td></tr></tbody></table>\n\n\n\n\n### Committers\n\nThe people who review and fix bugs and help triage issues.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/gyandeeps\">\n<img src=\"https://github.com/gyandeeps.png?s=75\" width=\"75\" height=\"75\"><br />\nGyandeep Singh\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/g-plane\">\n<img src=\"https://github.com/g-plane.png?s=75\" width=\"75\" height=\"75\"><br />\nPig Fang\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mdjermanovic\">\n<img src=\"https://github.com/mdjermanovic.png?s=75\" width=\"75\" height=\"75\"><br />\nMilos Djermanovic\n</a>\n</td></tr></tbody></table>\n\n\n<!--teamend-->\n\n## <a name=\"sponsors\"></a>Sponsors\n\nThe following companies, organizations, and individuals support ESLint's ongoing maintenance and development. [Become a Sponsor](https://opencollective.com/eslint) to get your logo on our README and website.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--sponsorsstart-->\n<h3>Gold Sponsors</h3>\n<p><a href=\"https://www.shopify.com\"><img src=\"https://images.opencollective.com/shopify/eeb91aa/logo.png\" alt=\"Shopify\" height=\"96\"></a> <a href=\"http://engineering.salesforce.com\"><img src=\"https://images.opencollective.com/salesforce/ca8f997/logo.png\" alt=\"Salesforce\" height=\"96\"></a> <a href=\"https://badoo.com/team?utm_source=eslint\"><img src=\"https://images.opencollective.com/badoo/2826a3b/logo.png\" alt=\"Badoo\" height=\"96\"></a> <a href=\"https://www.airbnb.com/\"><img src=\"https://images.opencollective.com/airbnb/d327d66/logo.png\" alt=\"Airbnb\" height=\"96\"></a> <a href=\"https://opensource.facebook.com\"><img src=\"https://images.opencollective.com/fbopensource/fbb8a5b/logo.png\" alt=\"Facebook Open Source\" height=\"96\"></a></p><h3>Silver Sponsors</h3>\n<p><a href=\"https://www.ampproject.org/\"><img src=\"https://images.opencollective.com/amp/c8a3b25/logo.png\" alt=\"AMP Project\" height=\"64\"></a></p><h3>Bronze Sponsors</h3>\n<p><a href=\"https://uxplanet.org/top-ui-ux-design-agencies-user-experience-firms-8c54697e290\"><img src=\"https://images.opencollective.com/ui-ux-design-agencies/cae5dfe/logo.png\" alt=\"UI UX Design Agencies\" height=\"32\"></a> <a href=\"https://medium.com/@niksundin/best-web-design-companies-1872e445775f\"><img src=\"https://images.opencollective.com/top-web-design-agencies/d92d747/logo.png\" alt=\"Top Web Design Agencies\" height=\"32\"></a> <a href=\"https://www.bugsnag.com/platforms?utm_source=Open Collective&utm_medium=Website&utm_content=open-source&utm_campaign=2019-community&utm_term=\"><img src=\"https://images.opencollective.com/bugsnag-stability-monitoring/c2cef36/logo.png\" alt=\"Bugsnag Stability Monitoring\" height=\"32\"></a> <a href=\"https://www.crosswordsolver.com\"><img src=\"https://images.opencollective.com/crosswordsolver/d4481d6/logo.png\" alt=\"Crosswordsolver\" height=\"32\"></a> <a href=\"https://www.codacy.com/?utm_source=eslint&utm_medium=cpm&utm_campaign=eslint-sponsorship\"><img src=\"https://images.opencollective.com/codacy/ed22716/logo.png\" alt=\"Codacy\" height=\"32\"></a> <a href=\"https://mixpanel.com\"><img src=\"https://images.opencollective.com/mixpanel/cd682f7/logo.png\" alt=\"Mixpanel\" height=\"32\"></a> <a href=\"https://www.vpsserver.com\"><img src=\"https://images.opencollective.com/vpsservercom/logo.png\" alt=\"VPS Server\" height=\"32\"></a> <a href=\"https://icons8.com\"><img src=\"https://images.opencollective.com/icons8/0b37d14/logo.png\" alt=\"Free Icons by Icons8\" height=\"32\"></a> <a href=\"https://edubirdie.com/\"><img src=\"https://images.opencollective.com/edubirdie2/b1d51ab/logo.png\" alt=\"EduBirdie\" height=\"32\"></a> <a href=\"https://clay.global\"><img src=\"https://images.opencollective.com/clayglobal/2468f34/logo.png\" alt=\"clay\" height=\"32\"></a> <a href=\"https://discordapp.com\"><img src=\"https://images.opencollective.com/discordapp/7e3d9a9/logo.png\" alt=\"Discord\" height=\"32\"></a> <a href=\"https://themeisle.com\"><img src=\"https://images.opencollective.com/themeisle/d5592fe/logo.png\" alt=\"ThemeIsle\" height=\"32\"></a> <a href=\"https://tekhattan.com\"><img src=\"https://images.opencollective.com/tekhattan/bc73c28/logo.png\" alt=\"TekHattan\" height=\"32\"></a> <a href=\"https://www.marfeel.com/\"><img src=\"https://images.opencollective.com/marfeel/4b88e30/logo.png\" alt=\"Marfeel\" height=\"32\"></a> <a href=\"http://www.firesticktricks.com\"><img src=\"https://images.opencollective.com/fire-stick-tricks/b8fbe2c/logo.png\" alt=\"Fire Stick Tricks\" height=\"32\"></a> <a href=\"https://jsheroes.io/\"><img src=\"https://images.opencollective.com/jsheroes1/9fedf0b/logo.png\" alt=\"JSHeroes \" height=\"32\"></a></p>\n<!--sponsorsend-->\n\n## <a name=\"technology-sponsors\"></a>Technology Sponsors\n\n* Site search ([eslint.org](https://eslint.org)) is sponsored by [Algolia](https://www.algolia.com)\n\n\n[npm-image]: https://img.shields.io/npm/v/eslint.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/eslint\n[downloads-image]: https://img.shields.io/npm/dm/eslint.svg?style=flat-square\n[downloads-url]: https://www.npmjs.com/package/eslint\n"}, {"repo": "jshint/jshint", "language": "JavaScript", "readme_contents": "# JSHint, A Static Code Analysis Tool for JavaScript\n\n\\[ [Use it online](http://jshint.com/) \u2022\n[Docs](http://jshint.com/docs/) \u2022 [FAQ](http://jshint.com/docs/faq) \u2022\n[Install](http://jshint.com/install/) \u2022\n[Contribute](http://jshint.com/contribute/) \u2022\n[Blog](http://jshint.com/blog/) \u2022 [Twitter](https://twitter.com/jshint/) \\]\n\n[![NPM version](https://img.shields.io/npm/v/jshint.svg?style=flat)](https://www.npmjs.com/package/jshint)\n[![Linux Build Status](https://img.shields.io/travis/jshint/jshint/master.svg?style=flat&label=Linux%20build)](https://travis-ci.org/jshint/jshint)\n[![Windows Build status](https://img.shields.io/appveyor/ci/jshint/jshint/master.svg?style=flat&label=Windows%20build)](https://ci.appveyor.com/project/jshint/jshint/branch/master)\n[![Dependency Status](https://img.shields.io/david/jshint/jshint.svg?style=flat)](https://david-dm.org/jshint/jshint)\n[![devDependency Status](https://img.shields.io/david/dev/jshint/jshint.svg?style=flat)](https://david-dm.org/jshint/jshint#info=devDependencies)\n[![Coverage Status](https://img.shields.io/coveralls/jshint/jshint.svg?style=flat)](https://coveralls.io/r/jshint/jshint?branch=master)\n\nJSHint is a community-driven tool that detects errors and potential problems in\nJavaScript code. Since JSHint is so flexible, you can easily adjust it in \nthe environment you expect your code to execute. JSHint is open source and\nwill always stay this way.\n\n## Our goal\n\nThe project aims to help JavaScript developers write complex programs\nwithout worrying about typos and language gotchas.\n\nAny code base eventually becomes huge at some point, so simple mistakes \u2014 that\nwould not show themselves when written \u2014 can become show stoppers and add \nextra hours of debugging. So, static code analysis tools come into play\nand help developers spot such problems. JSHint scans a program written in\nJavaScript and reports about commonly made mistakes and potential bugs. The\npotential problem could be a syntax error, a bug due to an implicit type\nconversion, a leaking variable, or something else entirely.\n\nOnly 15% of all programs linted on [jshint.com](http://jshint.com) pass the\nJSHint checks. In all other cases, JSHint finds some red flags that could've\nbeen bugs or potential problems.\n\nPlease note, that while static code analysis tools can spot many different kind\nof mistakes, it can't detect if your program is correct, fast or has memory\nleaks. You should always combine tools like JSHint with unit and functional\ntests as well as with code reviews.\n\n## Reporting a bug\n\nTo report a bug simply create a\n[new GitHub Issue](https://github.com/jshint/jshint/issues/new) and describe\nyour problem or suggestion. We welcome all kinds of feedback regarding\nJSHint including but not limited to:\n\n * When JSHint doesn't work as expected\n * When JSHint complains about valid JavaScript code that works in all browsers\n * When you simply want a new option or feature\n\nBefore reporting a bug, please look around to see if there are any open or closed tickets\nthat discuss your issue, and remember the wisdom: pull request > bug report > tweet.\n\n## Who uses JSHint?\n\nEngineers from these companies and projects use JSHint:\n\n* [Mozilla](https://www.mozilla.org/)\n* [Wikipedia](https://wikipedia.org/)\n* [Facebook](https://facebook.com/)\n* [Twitter](https://twitter.com/)\n* [Bootstrap](http://getbootstrap.com/)\n* [Disqus](https://disqus.com/)\n* [Medium](https://medium.com/)\n* [Yahoo!](https://yahoo.com/)\n* [SmugMug](http://smugmug.com/)\n* [jQuery](http://jquery.com/)\n* [PDF.js](http://mozilla.github.io/pdf.js)\n* [Coursera](http://coursera.com/)\n* [Adobe Brackets](http://brackets.io/)\n* [Apache Cordova](http://cordova.io/)\n* [RedHat](http://redhat.com/)\n* [SoundCloud](http://soundcloud.com/)\n* [Nodejitsu](http://nodejitsu.com/)\n* [Yelp](https://yelp.com/)\n* [Voxer](http://voxer.com/)\n* [EnyoJS](http://enyojs.com/)\n* [QuickenLoans](http://quickenloans.com/)\n* [Cloud9](http://c9.io/)\n* [CodeClimate](https://codeclimate.com/)\n* [Zendesk](http://zendesk.com/)\n* [Apache CouchDB](http://couchdb.apache.org/)\n* [Google](https://www.google.com/)\n* [Codacy](https://www.codacy.com) [ref](https://support.codacy.com/hc/en-us/articles/207995005-Special-Thanks)\n* [Spotify](https://www.spotify.com)\n\nAnd many more!\n\n## License\n\nMost files are published using [the standard MIT Expat\nlicense](https://www.gnu.org/licenses/license-list.html#Expat). One file,\nhowever, is provided under a slightly modified version of that license. The\nso-called [JSON license](https://www.gnu.org/licenses/license-list.html#JSON)\nis a non-free license, and unfortunately, we can't change it due to historical\nreasons. This license is included as an in-line within the file it concerns.\n\n## The JSHint Team\n\nJSHint is currently maintained by [Rick Waldron](https://github.com/rwaldron/),\n[Caitlin Potter](https://github.com/caitp/), [Mike\nPennisi](https://github.com/jugglinmike/), and [Luke\nPage](https://github.com/lukeapage). You can reach them via admin@jshint.org.\n\n## Previous Maintainers\n\nOriginating from the JSLint project in 2010, JSHint has been maintained by a\nnumber of dedicated individuals. In chronological order, they are: Douglas\nCrockford, Anton Kovalyov, and Mike Sherov. We appreciate their long-term\ncommitment!\n\n## Thank you!\n\nWe really appreciate all kinds of feedback and contributions. Thanks for using and supporting JSHint!\n"}, {"repo": "clutchski/coffeelint", "language": "CoffeeScript", "readme_contents": "CoffeeLint\n==========\n\nCoffeeLint is a style checker that helps keep CoffeeScript code\nclean and consistent.\n\nFor guides on installing, using and configuring CoffeeLint, head over\n[here](http://www.coffeelint.org).\n\nTo suggest a feature, report a bug, or general discussion, head over\n[here](http://github.com/clutchski/coffeelint/issues/).\n\n## Team\n\nCurrent:\n\n- [Shuan Wang](https://github.com/swang)\n\nPast:\n\n- [Asa Ayers](https://github.com/AsaAyers) - [You Don't Need CoffeeScript](https://gist.github.com/AsaAyers/d09e4de118b8d6b5e2d8fa3e38e496e0)\n- [Matt Perpick](https://github.com/clutchski)\n\n## Contributing\n\n* New rules should be set to a `warn` level. Developers will expect new changes to NOT break their existing workflow, so unless your change is extremely usefull, default to `warn`. Expect discussion if you choose to use `error`.\n\n* Look at existing rules and test structures when deciding how to name your rule. `no_foo.coffee` is used for many tests designed to catch specific errors, whereas `foo.coffee` is used for tests that are designed to enforce formatting and syntax.\n\n### Steps\n\n1. Fork the repo locally.\n2. Run `npm install` to get dependencies.\n3. Create your rule in a single file as `src/rules/your_rule_here.coffee`, using the existing\n   rules as a guide.\n   You may examine the AST and tokens using\n   [http://asaayers.github.io/clfiddle/](http://asaayers.github.io/clfiddle/).\n4. Add your test file `my_test.coffee` to the `test` directory.\n5. Register your rule in `src/coffeelint.coffee`.\n6. Run your test using `npm run testrule test/your_test_here.coffee`.\n7. Run the whole tests suite using `npm test`.\n8. Check that your rule's documentation is generated properly (see _Updating documentation when\nadding a new rule_ below).\n9. Squash all commits into a single commit when done.\n10. Submit a pull request.\n\n[![Build Status](https://secure.travis-ci.org/clutchski/coffeelint.svg)](http://travis-ci.org/clutchski/coffeelint)\n\n### Updating documentation when adding a new rule\n\nWhen adding a new rule, its documentation is specified by setting a\n`description` property within its `rule` property:\n```coffeescript\nmodule.exports = class NoComment\n\n    rule:\n        name: 'no_comment'\n        level: 'ignore'\n        message: 'No comment'\n        description: '''\n            Disallows any comment in the code\n            '''\n\n    tokens: ['#', '###']\n\n    lintToken : (token, tokenApi) ->\n\t\treturn {context: \"Found '#{token[0]}'\"}\n```\n\nThe description property is a string that can embed HTML code:\n```html\ndescription: '''\n\tDisallows any comment in the code. This code would not pass:\n\t<pre>\n\t<code>### Some code with comments\n\tfoo = ->\n\t\t# some other comments\n\t\tbar()\n\t</code>\n\t</pre>\n\t'''\n```\n[Coffeelint's website](http://www.coffeelint.org/) generates each\nrule's documentation based on this `description` property.\n\nWhen adding a new rule, it is suggested that you check that the documentation\nfor your new rule is generated correctly. In order to do that, you should\nfollow these steps:\n* Checkout the branch that contains the changes adding the new rule.\n* Run `npm run compile`.\n* Checkout the `gh-pages` branch: `git checkout origin/gh-pages`.\n* Run `cp lib/coffeelint.js js/coffeelint.js`.\n* Regenerate the HTML documentation: `rake updatehtml`. Note that you will\nprobably need to install rake.\n* Open the `index.html` file with your favorite browser and make sure that your\nrule's documentation is generated properly.\n"}, {"repo": "csscomb/csscomb.js", "language": "JavaScript", "readme_contents": "# CSScomb [![CSSComb](logo.png)](http://csscomb.com/)\n[![Build Status](https://travis-ci.org/csscomb/csscomb.js.svg?branch=master)](http://travis-ci.org/csscomb/csscomb.js)\n[![NPM version](https://badge.fury.io/js/csscomb.svg)](http://badge.fury.io/js/csscomb)\n[![Dependency Status](https://david-dm.org/csscomb/csscomb.js.svg)](https://david-dm.org/csscomb/csscomb.js)\n[![devDependency Status](https://david-dm.org/csscomb/csscomb.js/dev-status.svg)](https://david-dm.org/csscomb/csscomb.js#info=devDependencies)\n\nCSScomb is a coding style formatter for CSS.\nYou can easily write your own [configuration](doc/configuration.md) to make\nyour style sheets beautiful and consistent.\n\nThe main feature is [sorting properties](doc/options.md#sort-order) in a specific order.\nIt was inspired by [@miripiruni](https://github.com/miripiruni)'s\n[PHP-based tool](https://github.com/csscomb/csscomb) of the same name.\nThis is the new JavaScript version, based on the powerful CSS parser\n[Gonzales PE](https://github.com/tonyganch/gonzales-pe).\n\n## 1. Install\n\nGlobal installation (for use as a command-line tool):\n\n```bash\nnpm install csscomb -g\n```\n\nLocal installation (for use as a command-line tool within current directory):\n\n```bash\nnpm install csscomb\n```\n\nTo install as a project dependency (the package will appear in your dependencies):\n\n```bash\nnpm install csscomb --save\n```\n\nTo install as a dev dependency (the package will appear in your devDependencies):\n\n```bash\nnpm install csscomb --save-dev\n```\n\n## 2. [Configure](doc/configuration.md)\n\nThere are a number of ways to configure CSScomb:\n\n- Use one of [predefined configs](config)\n- Put `.csscomb.json` file in the project root.\n- Set path to config's file\n- Use `*.css` file as a template\n\n## 3. Use\n\n### [Command Line](doc/usage-cli.md)\n\n```bash\ncsscomb assets/css\n```\n\n### [Node.js module](doc/usage-node.md)\n\n```js\nvar Comb = require('csscomb');\nvar comb = new Comb('zen');\ncomb.processPath('assets/css');\n```\n\n## 4. Contribute\n\nThis project is actively mantained. But anyone and everyone is welcome to contribute.\nPlease take a moment to review the [guidelines for contributing](CONTRIBUTING.md).\n\nAlso you can become a maintainer. To do that please ping\n[@tonyganch](https://github.com/tonyganch).\n\n## Authors\n\n[@mishanga](https://github.com/mishanga),\n[@tonyganch](https://github.com/tonyganch)\n\nThanks for assistance and contributions:\n\n[@miripiruni](https://github.com/miripiruni),\n[@anton-rudeshko](https://github.com/anton-rudeshko),\n[@cvrebert](https://github.com/cvrebert),\n[@filtercake](https://github.com/filtercake),\n[@ignovak](https://github.com/ignovak),\n[@kizu](https://github.com/kizu),\n[@lefoy](https://github.com/lefoy),\n[@L0stSoul](https://github.com/L0stSoul),\n[@mishaberezin](https://github.com/mishaberezin),\n[@puzankov](https://github.com/puzankov),\n[@schneyra](https://github.com/schneyra),\n[@thejameskyle](https://github.com/thejameskyle),\n[@vecmezoni](https://github.com/vecmezoni)\n\n## License\n\nThis software is released under the terms of the\n[MIT license](https://github.com/csscomb/csscomb.js/blob/master/LICENSE).\n\n## Other projects\n* https://github.com/senchalabs/cssbeautify\n* https://github.com/css/gonzales\n* https://github.com/tonyganch/gonzales-pe\n* https://github.com/css/csso\n* https://github.com/nzakas/parser-lib\n"}, {"repo": "sds/scss-lint", "language": "Ruby", "readme_contents": "[![Gem Version](https://badge.fury.io/rb/scss_lint.svg)](http://badge.fury.io/rb/scss_lint)\n[![Build Status](https://travis-ci.org/sds/scss-lint.svg?branch=master)](https://travis-ci.org/sds/scss-lint)\n[![Code Climate](https://codeclimate.com/github/sds/scss-lint.svg)](https://codeclimate.com/github/sds/scss-lint)\n[![Coverage Status](https://coveralls.io/repos/sds/scss-lint/badge.svg)](https://coveralls.io/r/sds/scss-lint)\n[![Inline docs](http://inch-ci.org/github/sds/scss-lint.svg?branch=master)](http://inch-ci.org/github/sds/scss-lint)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/sds/scss-lint/master/logo/horizontal.png\" width=\"40%\" alt=\"SCSS-Lint Logo\"/>\n</p>\n\n`scss-lint` is a tool to help keep your [SCSS](http://sass-lang.com) files\nclean and readable by running it against a collection of\nconfigurable [linter rules](lib/scss_lint/linter/README.md). You can run it\nmanually from the command line, or integrate it into your\n[SCM hooks](https://github.com/sds/overcommit).\n\n# NOTICE: Consider other tools before adopting SCSS-Lint\n\nThe Sass core team is now building Sass in [Dart instead of Ruby](http://sass.logdown.com/posts/1022316-announcing-dart-sass),\nand will no longer be maintaining the Ruby implementation unless a maintainer\nsteps up to help. Since the SCSS-Lint project relies on the Ruby Sass\nimplementation, this means it will eventually not support the latest Sass\nfeatures and bug fixes.\n\nTwo alternatives worthy of consideration are [stylelint](http://stylelint.io/)\nand [sass-lint](https://github.com/sasstools/sass-lint), with sass-lint having\ncloser feature parity to SCSS-lint.\n\nThe SCSS-Lint project will continue to accept pull requests and provide basic\nsupport on the issue tracker.\n\n* [Requirements](#requirements)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Configuration](#configuration)\n* [Formatters](#formatters)\n* [Exit Status Codes](#exit-status-codes)\n* [Linters](#linters)\n* [Custom Linters](#custom-linters)\n* [Preprocessing](#preprocessing)\n* [Automated Code Review](#automated-code-review)\n* [Editor Integration](#editor-integration)\n* [Git Integration](#git-integration)\n* [Rake Integration](#rake-integration)\n* [Maven Integration](#maven-integration)\n* [Documentation](#documentation)\n* [Contributing](#contributing)\n* [Community](#community)\n* [Changelog](#changelog)\n* [License](#license)\n\n## Requirements\n\n* Ruby 2.4+\n* Sass 3.5.5+\n* Files you wish to lint must be written in SCSS (not Sass) syntax\n\n## Installation\n\n```bash\ngem install scss_lint\n```\n\n...or add the following to your `Gemfile` and run `bundle install`:\n\n```ruby\ngem 'scss_lint', require: false\n```\n\nThe `require: false` is necessary because `scss-lint` monkey patches Sass in\norder to properly traverse the parse tree created by the Sass parser. This can\ninterfere with other applications that invoke the Sass parser after `scss-lint`\nlibraries have been loaded at runtime, so you should only require it in the\ncontext in which you are linting, nowhere else.\n\n## Usage\n\nRun `scss-lint` from the command line by passing in a directory (or multiple\ndirectories) to recursively scan:\n\n```bash\nscss-lint app/assets/stylesheets/\n```\n\nYou can also specify a list of files explicitly:\n\n```bash\nscss-lint app/assets/stylesheets/**/*.css.scss\n```\n\n...or you can lint a file passed via standard input (**note** the\n`--stdin-file-path` flag is required when passing via standard input):\n\n```bash\ncat some-file | scss-lint --stdin-file-path=path/to/treat/stdin/as/having.scss\n```\n\n`scss-lint` will output any problems with your SCSS, including the offending\nfilename and line number (if available).\n\nCommand Line Flag         | Description\n--------------------------|----------------------------------------------------\n`-c`/`--config`           | Specify a configuration file to use\n`-e`/`--exclude`          | Exclude one or more files from being linted\n`-f`/`--format`           | Output format (see [Formatters](#formatters))\n`-o`/`--out`              | Write output to a file instead of STDOUT\n`-r`/`--require`          | Require file/library (mind `$LOAD_PATH`, uses `Kernel.require`)\n`-i`/`--include-linter`   | Specify which linters you specifically want to run\n`-x`/`--exclude-linter`   | Specify which linters you _don't_ want to run\n`--stdin-file-path`       | When linting a file passed via standard input, treat it as having the specified path to apply the appropriate configuration\n`--[no-]color`            | Whether to output in color\n`-h`/`--help`             | Show command line flag documentation\n`--show-formatters`       | Show all available formatters\n`--show-linters`          | Show all available linters\n`-v`/`--version`          | Show version\n\nWhen running `scss-lint` with JRuby, using JRuby's\n[`--dev` flag](https://github.com/jruby/jruby/wiki/Improving-startup-time)\nwill probably improve performance.\n\n## Configuration\n\n`scss-lint` loads configuration in the following order of precedence:\n\n1. Configuration file specified via the `--config` flag\n2. Configuration from `.scss-lint.yml` in the current working directory,\n   if it exists\n3. Configuration from `.scss-lint.yml` in the user's home directory,\n   if it exists\n\nAll configurations extend the [default configuration](config/default.yml).\n\n**Note**: The first configuration file found is the one that is loaded, e.g.\nthe `.scss-lint.yml` file in the current working directory is loaded _instead_\nof the one in the user's home directory&mdash;they are not merged with each\nother.\n\nHere's an example configuration file:\n\n```yaml\nscss_files: 'app/assets/stylesheets/**/*.css.scss'\n\nexclude: 'app/assets/stylesheets/plugins/**'\n\nlinters:\n  BorderZero:\n    enabled: false\n\n  Indentation:\n    exclude:\n      - 'path/to/file.scss'\n      - 'path/to/directory/**'\n    severity: warning\n    width: 2\n```\n\nAll linters have an `enabled` option which can be `true` or `false`, which\ncontrols whether the linter is run, along with linter-specific options. The\ndefaults are defined in `config/default.yml`.\n\n### Severities\n\nThe `severity` linter option allows you to specify whether the lint should be\ntreated as a `warning` or an `error`. Warnings cause `scss-lint` to exit with a\ndifferent error code than errors (unless both warnings _and_ errors are\npresent, in which case the `error` exit code is returned). This is useful when\nintegrating `scss-lint` with build systems or other executables, as you can\nrely on its exit status code to indicate whether a lint actually requires\nattention.\n\nYou can also define the default severity for all linters by setting the global\n`severity` option.\n\n### Excluding Files\n\nThe `exclude` directive allows you to specify a glob pattern of files that\nshould not be linted by `scss-lint`. Paths are relative to the location of the\nconfig file itself if they are not absolute paths. If an inherited file\nspecifies the `exclude` directive, the two exclusion lists are combined. Any\nadditional exclusions specified via the `--exclude` flag are also combined. If\nyou need to exclude files for a single linter you can specify the list of files\nusing the linter's `exclude` configuration option.\n\n### Generating a Configuration\n\nTo start using `scss-lint` you can use the [`Config` Formatter](#config),\nwhich will generate an `.scss-lint.yml` configuration file with all linters\nwhich caused a lint disabled. Starting with this as your configuration\nyou can slowly enable each linter and fix any lints one by one.\n\n### Disabling Linters via Source\n\nFor special cases where a particular lint doesn't make sense in a specific\narea of a file, special inline comments can be used to enable/disable linters.\nSome examples are provided below:\n\n**Disable for the entire file**\n```scss\n// scss-lint:disable BorderZero\np {\n  border: none; // No lint reported\n}\n```\n\n**Disable a few linters**\n```scss\n// scss-lint:disable BorderZero, StringQuotes\np {\n  border: none; // No lint reported\n  content: \"hello\"; // No lint reported\n}\n```\n\n**Disable all lints within a block (and all contained blocks)**\n```scss\np {\n  // scss-lint:disable BorderZero\n  border: none; // No lint reported\n}\n\na {\n  border: none; // Lint reported\n}\n```\n\n**Disable and enable again**\n```scss\n// scss-lint:disable BorderZero\np {\n  border: none; // No lint reported\n}\n// scss-lint:enable BorderZero\n\na {\n  border: none; // Lint reported\n}\n```\n\n**Disable/enable all linters**\n```scss\n// scss-lint:disable all\np {\n  border: none; // No lint reported\n}\n// scss-lint:enable all\n\na {\n  border: none; // Lint reported\n}\n```\n\n## Formatters\n\n### Default\n\nThe default formatter is intended to be easy to consume by both humans and\nexternal tools.\n\n```bash\nscss-lint [scss-files...]\n```\n\n```\ntest.scss:2:1 [W] StringQuotes: Prefer single quoted strings\ntest.scss:2:1 [W] Indentation: Line should be indented 0 spaces, but was indented 1 space\ntest.scss:5:1 [W] StringQuotes: Prefer single quoted strings\ntest.scss:6:8 [W] UrlQuotes: URLs should be enclosed in quotes\n```\n\n### CleanFiles\n\nDisplays a list of all files that were free of lints.\n\n### Config\n\nReturns a valid `.scss-lint.yml` configuration where all linters which caused\na lint are disabled. Starting with this as your configuration, you can slowly\nenable each linter and fix any lints one by one.\n\n```bash\nscss-lint --format=Config [scss-files...]\n```\n\n```yaml\nlinters:\n  Indentation:\n    enabled: false\n  StringQuotes:\n    enabled: false\n  UrlQuotes:\n    enabled: false\n```\n\n### Files\n\nUseful when you just want to open all offending files in an editor. This will\njust output the names of the files so that you can execute the following to\nopen them all:\n\n```bash\nscss-lint --format=Files [scss-files...] | xargs vim\n```\n\n### JSON\n\nOutputs JSON with filenames and an array of issue objects.\n\n```json\n{\n  \"test.css\": [\n    {\"line\": 2, \"column\": 1, \"length\": 2, \"severity\": \"warning\", \"reason\": \"Prefer single quoted strings\", \"linter\": \"StringQuotes\"},\n    {\"line\": 2, \"column\": 1, \"length\": 1, \"severity\": \"warning\", \"reason\": \"Line should be indented 0 spaces, but was indented 1 spaces\", \"linter\": \"Indentation\"},\n    {\"line\": 5, \"column\": 5, \"length\": 2, \"severity\": \"warning\", \"reason\": \"Prefer single quoted strings\", \"linter\": \"StringQuotes\"},\n    {\"line\": 6, \"column\": 4, \"length\": 9, \"severity\": \"warning\", \"reason\": \"URLs should be enclosed in quotes\", \"linter\": \"UrlQuotes\"}\n  ]\n}\n```\n\n### TAP\n\nOutputs [TAP version 13](https://testanything.org) format.\n\n```\nTAP version 13\n1..5\nok 1 - ok1.scss\nnot ok 2 - not-ok1.scss:123:10 SCSSLint::Linter::PrivateNamingConvention\n  ---\n  message: Description of lint 1\n  severity: warning\n  data:\n    file: not-ok1.scss\n    line: 123\n    column: 10\n  ---\nnot ok 3 - not-ok2.scss:20:2 SCSSLint::Linter::PrivateNamingConvention\n  ---\n  message: Description of lint 2\n  severity: error\n  data:\n    file: not-ok2.scss\n    line: 20\n    column: 2\n  ---\nnot ok 4 - not-ok2.scss:21:3 SCSSLint::Linter::PrivateNamingConvention\n  ---\n  message: Description of lint 3\n  severity: warning\n  data:\n    file: not-ok2.scss\n    line: 21\n    column: 3\n  ---\nok 5 - ok2.scss\n```\n\n### Stats\n\nOutputs statistics about how many lints of each type were found, and across how many files. This\nreporter can help in cleaning up a large codebase, allowing you to fix and then enable one lint\ntype at a time.\n\n```\n15  ColorKeyword                  (across  1 files)\n15  ColorVariable                 (across  1 files)\n11  StringQuotes                  (across 11 files)\n11  EmptyLineBetweenBlocks        (across 11 files)\n 5  Indentation                   (across  1 files)\n 5  QualifyingElement             (across  2 files)\n 4  MergeableSelector             (across  1 files)\n--  ----------------------        -----------------\n66  total                         (across 12 files)\n```\n\n### Plugins\n\nThere are also formatters that integrate with third-party tools which are available as plugins.\n\n#### Checkstyle\n\nOutputs an XML document with `<checkstyle>`, `<file>`, and `<error>` tags.\nSuitable for consumption by tools like\n[Jenkins](http://jenkins-ci.org/) with the\n[Checkstyle plugin](https://wiki.jenkins-ci.org/display/JENKINS/Checkstyle+Plugin).\n\n```bash\ngem install scss_lint_reporter_checkstyle\nscss-lint --require=scss_lint_reporter_checkstyle --format=Checkstyle [scss-files...]\n```\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<checkstyle version=\"1.5.6\">\n  <file name=\"test.css\">\n    <error line=\"2\" severity=\"warning\" message=\"Prefer single quoted strings\" />\n    <error line=\"2\" severity=\"warning\" message=\"Line should be indented 0 spaces, but was indented 1 spaces\" />\n    <error line=\"5\" severity=\"warning\" message=\"Prefer single quoted strings\" />\n    <error line=\"6\" severity=\"warning\" message=\"URLs should be enclosed in quotes\" />\n  </file>\n</checkstyle>\n```\n\n## Exit Status Codes\n\n`scss-lint` tries to use\n[semantic exit statuses](http://www.gsp.com/cgi-bin/man.cgi?section=3&topic=sysexits)\nwherever possible, but the full list of codes and the conditions under which they are\nreturned is listed here for completeness.\n\nExit Status | Description\n------------|-------------------------------------------------------------\n`0`         | No lints were found\n`1`         | Lints with a severity of `warning` were reported (no errors)\n`2`         | One or more errors were reported (and any number of warnings)\n`64`        | Command line usage error (invalid flag, etc.)\n`66`        | One or more files specified were not found\n`69`        | Required library specified via `-r`/`--require` flag was not found\n`70`        | Unexpected error (i.e. a bug); please [report it](https://github.com/sds/scss-lint/issues)\n`78`        | Invalid configuration file; your [YAML](http://www.yaml.org/) is likely incorrect\n`80`        | Files glob patterns specified did not match any files.\n\n## Linters\n\n`scss-lint` is a customizable tool with opinionated defaults that helps you\nenforce a consistent style in your SCSS. For these opinionated defaults, we've\nhad to make calls about what we think are the \"best\" style conventions, even\nwhen there are often reasonable arguments for more than one possible style.\n\nShould you want to customize the checks run against your code, you can do so by\nediting your [configuration file](#configuration) to match your\npreferred style.\n\n### [\u00bb Linters Documentation](lib/scss_lint/linter/README.md)\n\n## Custom Linters\n\n`scss-lint` allows you to create custom linters specific to your project. By\ndefault, it will load linters from the `.scss-linters` in the root of your\nrepository. You can customize which directories to load from via the\n`plugin_directories` option in your `.scss-lint.yml` configuration file. See\nthe [linters directory](lib/scss_lint/linter) for examples of how to write\nlinters. All linters loaded from directories in `plugin_directories` are\nenabled by default, and you can set their configuration in your\n`.scss-lint.yml`.\n\n```ruby\n# .scss-linters/another_linter.rb\n\nmodule SCSSLint\n  class Linter::AnotherLinter < Linter\n    include LinterRegistry\n\n    ...\n  end\nend\n```\n\n```yaml\n# .scss-lint.yml\nplugin_directories: ['.scss-linters', '.another_directory']\n\nlinters:\n  AnotherLinter:\n    enabled: true\n    some_option: [1, 2, 3]\n```\n\nYou can also load linters packaged as gems by specifying the gems via the\n`plugin_gems` configuration option. See the\n[`scss_lint_plugin_example`](https://github.com/cih/scss_lint_plugin_example)\nfor an example of how to structure these plugins.\n\nIf the gem is packaged with an `.scss-lint.yml` file in its root directory then\nthis will be merged with your configuration. This provides a convenient way for\norganizations to define a single repo with their `scss-lint` configuration and\ncustom linters and use them across multiple projects. You can always override\nplugin configuration with your repo's `.scss-lint.yml` file.\n\n```yaml\n# .scss-lint.yml\nplugin_gems: ['scss_lint_plugin_example']\n```\n\nNote that you don't need to publish a gem to Rubygems to take advantage of\nthis feature. Using Bundler, you can specify your plugin gem in your project's\n`Gemfile` and reference its git repository instead:\n\n```ruby\n# Gemfile\ngem 'scss_lint_plugin_example', git: 'git://github.com/cih/scss_lint_plugin_example'\n```\n\nAs long as you execute `scss-lint` via `bundle exec scss-lint`, it should be\nable to load the gem.\n\n## Preprocessing\n\nSometimes SCSS files need to be preprocessed before being linted. This is made\npossible with two options that can be specified in your configuration file.\n\nThe `preprocess_command` option specifies the command to run once per SCSS\nfile. The command can be specified with arguments. The contents of a SCSS\nfile will be written to STDIN, and the processed SCSS contents must be written\nto STDOUT. If the process exits with a code other than 0, scss-lint will\nimmediately exit with an error.\n\nFor example, `preprocess_command: \"cat\"` specifies a simple no-op preprocessor\n(on Unix-like systems). `cat` simply writes the contents of STDIN back out to\nSTDOUT.\n\nMetadata codeblocks like [Jekyll Front Matter](http://jekyllrb.com/docs/assets/)\nat the beginning of SCSS files can cause a syntax error when SCSS-Lint does not\nencounter Sass at the first line of the file, e.g.\n`Invalid CSS after \"@charset \"utf-8\"\": expected \"{\", was \";\"`.\nTo search the first line for front matter's triple dash delimiter `---`,\nstrip out the YAML codeblock and pass the result to SCSS-Lint with line\nnumbers preserved, you can use\n`preprocess_command: \"sed '1{/^---$/{:a N;/---$/!ba;d}}'\"` -- please note this\nsed command is valid for gnu-sed. If you are using the FreeBSD version of sed that\nships with Mac OS X by default, it will throw an EOF error. You may solve this\nerror by installing [Homebrew](https://brew.sh), running `brew install gnu-sed`,\nand then substituting `gsed` for `sed` in the `preprocess_command`.\n\nIf only some SCSS files need to be preprocessed, you may use the\n`preprocess_files` option to specify a list of file globs that need\npreprocessing. Preprocessing only a subset of files should make scss-lint more\nperformant.\n\n## Automated Code Review\n\n### Codacy\n\n[Codacy](https://www.codacy.com/) automates code reviews and monitors code quality on every commit and pull request.\nWith Codacy you have scss-lint analysis out-of-the-box, and it is free for open source projects.\nIt gives visibility into the technical debt and it can track code style and security issues, code coverage, code duplication, cyclomatic complexity and enforce best practices.\n\n## Editor Integration\n\n### Vim\n\nYou can have `scss-lint` automatically run against your SCSS files after saving\nby using the [Syntastic](https://github.com/scrooloose/syntastic) plugin. If\nyou already have the plugin, just add\n`let g:syntastic_scss_checkers = ['scss_lint']` to your `.vimrc`.\n\n### IntelliJ\n\nInstall the [SCSS Lint plugin for IntelliJ](https://github.com/idok/scss-lint-plugin)\n\n### Sublime Text\n\nInstall the\n[Sublime scss-lint plugin](https://sublime.wbond.net/packages/SublimeLinter-contrib-scss-lint).\n\n### Atom\n\nInstall the [Atom scss-lint plugin](https://atom.io/packages/linter-scss-lint). It is a part of the [`atomlinter`](https://atom.io/users/atomlinter) project, so if you are already using other linter plugins, you can keep them in one place.\n\n### Emacs\n\nInstall and enable both [scss-mode](https://github.com/antonj/scss-mode) and [flycheck-mode](https://github.com/flycheck/flycheck). You can enable automatic linting for scss-mode buffers with `(add-hook 'scss-mode-hook 'flycheck-mode)` in your `init.el`.\n\n### TextMate 2\n\nIf you use `TextMate 2`, you can install the [SCSS-Lint.tmbundle](https://github.com/jjuliano/SCSS-Lint.tmbundle) bundle.\n\n### Visual Studio Code\n\nIf you use `Visual Studio Code`, you can install the [scss-lint](https://marketplace.visualstudio.com/items?itemName=adamwalzer.scss-lint) extension\n\n## Git Integration\n\nIf you'd like to integrate `scss-lint` into your Git workflow, check out our\nGit hook manager, [overcommit](https://github.com/sds/overcommit).\n\n## Rake Integration\n\nTo execute `scss-lint` via a [Rake](https://github.com/ruby/rake) task, ensure\nyou have `rake` in your gem path (e.g. by adding to your `Gemfile`), and add the\nfollowing to your `Rakefile`:\n\n```ruby\nrequire 'scss_lint/rake_task'\n\nSCSSLint::RakeTask.new\n```\n\nWhen you execute `rake scss_lint`, the above configuration is equivalent to\njust running `scss-lint`, which will lint all `.scss` files in the current\nworking directory and its descendants.\n\nYou can customize the task by writing:\n\n```ruby\nrequire 'scss_lint/rake_task'\n\nSCSSLint::RakeTask.new do |t|\n  t.config = 'custom/config.yml'\n  t.args = ['--format', 'JSON', '--out', 'results.txt']\n  t.files = Dir.glob(['app/assets', 'custom/*.scss'])\nend\n```\n\nYou can specify any command line arguments in the `args` attribute that are\nallowed by the `scss-lint` Ruby binary script. Each argument must be passed as\nan Array element, rather than one String with spaces.\n\nYou can also use this custom configuration with a set of files specified via\nthe command line (note that this will not expand glob patterns):\n\n```bash\n# Single quotes prevent shell glob expansion\nrake 'scss_lint[app/assets, custom/file-with-a-literal-asterisk-*.scss]'\n```\n\nFiles specified in this manner take precedence over the `files` attribute\ninitialized in the configuration above.\n\n## Maven Integration\n\n[Maven] integration is available as part of the [Sass maven\nplugin][maven-plugin] `scss-lint` since [version 2.3][maven-plugin-2.3] Check\nout the [plugin documentation][maven-plugin-info].\n\nThe Maven plugin comes with the necessary libraries included, a separate\ninstallation of `ruby` or `scss-lint` is not required.\n\n[maven]: https://maven.apache.org/\n[maven-plugin]: https://github.com/GeoDienstenCentrum/sass-maven-plugin\n[maven-plugin-2.3]: http://www.geodienstencentrum.nl/sass-maven-plugin/releasenotes.html#a2.3_Release_Notes\n[maven-plugin-info]: https://GeoDienstenCentrum.github.io/sass-maven-plugin/plugin-info.html\n\n## Documentation\n\n[Code documentation] is generated with [YARD] and hosted by [RubyDoc.info].\n\n[Code documentation]: http://rdoc.info/github/sds/scss-lint/master/frames\n[YARD]: http://yardoc.org/\n[RubyDoc.info]: http://rdoc.info/\n\n## Contributing\n\nWe love getting feedback with or without pull requests. If you do add a new\nfeature, please add tests so that we can avoid breaking it in the future.\n\nSpeaking of tests, we use `rspec`, which can be run like so:\n\n```bash\nbundle exec rspec\n```\n\nAfter you get the unit tests passing, you probably want to see your version of\n`scss-lint` in action. You can use Bundler to execute your binary locally from\nwithin your project's directory:\n\n```bash\nbundle exec bin/scss-lint\n```\n\n## Community\n\nAll major discussion surrounding SCSS-Lint happens on the\n[GitHub issues page](https://github.com/sds/scss-lint/issues).\n\nYou can also follow [@scss_lint on Twitter](https://twitter.com/scss_lint).\n\n## Changelog\n\nIf you're interested in seeing the changes and bug fixes between each version\nof `scss-lint`, read the [SCSS-Lint Changelog](CHANGELOG.md).\n\n## Code of conduct\n\nThis project adheres to the [Open Code of Conduct][code-of-conduct]. By\nparticipating, you are expected to honor this code.\n\n[code-of-conduct]: https://github.com/civiccc/code-of-conduct\n\n## License\n\nThis project is released under the [MIT license](MIT-LICENSE).\n"}, {"repo": "htmlhint/HTMLHint", "language": "JavaScript", "readme_contents": "<h1 align=\"center\">\n  <br>\n  <a href=\"https://htmlhint.com\"><img src=\"https://raw.githubusercontent.com/htmlhint/htmlhint/develop/src/img/htmlhint.png\" alt=\"Logo HTMLHint\" width=\"170\"></a>\n  <br>\n  HTMLHint\n  <br>\n</h1>\n\n<h4 align=\"center\">The static code analysis tool you need for your HTML.</h4>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/htmlhint/HTMLHint\">\n    <img src=\"https://img.shields.io/travis/htmlhint/HTMLHint.svg\" alt=\"Travis Build Status\">\n  </a>\n  <a href=\"https://codecov.io/gh/htmlhint/HTMLHint\">\n    <img src=\"https://codecov.io/gh/htmlhint/HTMLHint/branch/master/graph/badge.svg\" alt=\"Codecov\">\n  </a>\n  <a href=\"https://www.npmjs.com/package/htmlhint\">\n    <img src=\"https://img.shields.io/npm/dm/htmlhint.svg\" alt=\"NPM count\">\n  </a>\n  <img src=\"https://badgen.net/badge/license/MIT/green\" alt=\"MIT Licence\" />\n  <a href=\"https://discord.gg/nJ6J9CP\">\n    <img src=\"https://img.shields.io/badge/chat-on%20discord-7289da.svg\" alt=\"Chat\">\n  </a>\n  <a href=\"http://roadmap.htmlhint.io/roadmap\">\n    <img src=\"https://img.shields.io/badge/check-our%20roadmap-EE503E.svg\" alt=\"Chat\">\n  </a>\n</p>\n\n<p align=\"center\">\n\u00a0 <a href=\"#installation-and-usage\">How To Use</a> \u2022 <a href=\"#contributing\">Contributing</a> \u2022 <a href=\"http://roadmap.htmlhint.io/\">Roadmap</a> \u2022 <a href=\"https://htmlhint.com\">Website</a>\n</p>\n\n## Table of Contents\n\n- **[Installation and Usage](#-installation-and-usage)**\n  - **[Local Installation and Usage](#local-installation-and-usage)**\n  - **[Global Installation and Usage](#global-installation-and-usage)**\n- **[Example output](#-example-output)**\n- **[Configuration](#-configuration)**\n- **[Docs](#-docs)**\n\n## \ud83d\udcdf Installation and Usage\n\nPrerequisites: Node.js (>=6.14), npm version 3+.\n\nThere are two ways to install HTMLHint: globally and locally.\n\n### Local Installation and Usage\n\nIn case you want to include HTMLHint as part of your project, you can install it locally using NPM:\n\n```\n$ npm install htmlhint --save-dev\n```\n\nAfter that, You can run HTMLHint on any file or directory like this:\n\n```\n$ ./node_modules/.bin/htmlhint www/index.html\n$ ./node_modules/.bin/htmlhint www/**/*.html\n```\n\n### Global Installation and Usage\n\nIf you want to make HTMLHint available to tools that run across all of your projects, you can install HTMLHint globally using NPM:\n\n```\n$ npm install htmlhint -g\n```\n\nAfter that, you can run HTMLHint on any file like this:\n\n```\n$ htmlhint www/index.html\n$ htmlhint www/**/*.html\n```\n\nYou can even launch HTMLHint to analyse an URL:\n\n```\n$ htmlhint https://htmlhint.com/\n```\n\n## \ud83d\udcc3 Example output\n\n## \ud83d\udd27 Configuration\n\nSearch `.htmlhintrc` file in current directory and all parent directories:\n\n```\n$ htmlhint\n$ htmlhint test.html\n```\n\nCustom config file:\n\n```\n$ htmlhint --config htmlhint.conf test.html\n```\n\nCustom rules:\n\n```\n$ htmlhint --rules tag-pair,id-class-value=underline index.html\n```\n\nInline rules in `test.html`:\n\n```\n<!--htmlhint tag-pair,id-class-value:underline -->\n<html>\n<head>\n...\n```\n\n## \ud83d\udcd9 Docs\n\n1. [How to use](https://github.com/htmlhint/HTMLHint/wiki/Usage)\n2. [All Rules](https://github.com/htmlhint/HTMLHint/wiki/Rules)\n3. [How to Develop](https://github.com/htmlhint/HTMLHint/wiki/Developer-guide)\n\n## \u00a9 License\n\n[MIT License](./LICENSE.md)\n\n## \ud83d\udcaa\ud83c\udffb Contributors\n\nThis project exists thanks to all these people. [Contribute](CONTRIBUTING.md).\n<a href=\"https://github.com/htmlhint/HTMLHint/graphs/contributors\"><img src=\"https://opencollective.com/htmlhint/contributors.svg?width=890\" /></a>\n\n## \ud83c\udfc5 Backers\n\nThank you to all our backers! [Become a backer](https://opencollective.com/htmlhint#backer).\n\n<a href=\"https://opencollective.com/htmlhint#backers\" target=\"_blank\"><img src=\"https://opencollective.com/htmlhint/backers.svg?width=890\"></a>\n\n## \ud83c\udf96 Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor](https://opencollective.com/htmlhint#sponsor).\n\n<a href=\"https://opencollective.com/htmlhint/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/htmlhint/sponsor/0/avatar.svg\"></a>\n"}, {"repo": "validator/validator", "language": "Java", "readme_contents": "# The Nu Html Checker (v.Nu) [![Chat room][1]][2] [![Download latest][3]][4]\n\n   [1]: https://goo.gl/1kHqwI\n   [2]: https://gitter.im/validator/validator\n   [3]: https://goo.gl/3PC2Qn\n   [4]: https://github.com/validator/validator/releases/latest\n\nThe Nu Html Checker (v.Nu) helps you [catch unintended mistakes in your HTML,\nCSS, and SVG][5]. It enables you to [batch-check documents from the command\nline][6] and from other scripts/apps, and to [deploy your own instance of the\nchecker as a service][7] (like [validator.w3.org/nu][8]). Its [source code is\navailable][9], as are [instructions on how to build, test, and run the\ncode][10].\n\n   [5]: https://validator.w3.org/nu/about.html#why-validate\n   [6]: https://validator.github.io/validator/#usage\n   [7]: https://validator.github.io/validator/#standalone\n   [8]: https://validator.w3.org/nu/\n   [9]: https://github.com/validator/validator\n\n   [10]: https://validator.github.io/validator/#build-instructions\n\nA [Dockerfile][11] (see the **Pulling from Docker Hub** section below) and\n[npm][12], [pip][13], and [brew][14] packages of it are also available, and it\u2019s\nreleased upstream in these formats:\n\n   [11]: https://hub.docker.com/r/validator/validator/\n   [12]: https://www.npmjs.com/package/vnu-jar\n   [13]: https://github.com/svenkreiss/html5validator\n   [14]: https://libraries.io/homebrew/vnu\n\n  * pre-compiled Linux, Windows, and macOS binaries that include an embedded\n  Java runtime\n\n  * `vnu.jar` \u2014 a portable version you can use on any system that has Java 8 or\n  above installed\n\n  * `vnu.war` \u2014 for [deploying the checker service through a servlet container\n  such as Tomcat][15]\n\n   [15]: https://validator.github.io/validator/#servlet\n\n**Note:** The _vnu.jar_ and _vnu.war_ files require you to have Java 8 or above\ninstalled. The pre-compiled Linux, Windows, and macOS binaries don\u2019t require you\nto have any version of Java already installed at all.\n\nYou can [get the latest release][16] or run [`docker run -it --rm -p 8888:8888\nvalidator/validator:latest`][17], [`npm\u00a0install\u00a0vnu-jar`][18],\n[`brew\u00a0install\u00a0vnu`][19], or [`pip install html5validator`][20] and see the\n**Usage** and **Web-based checking** sections below. Or automate your document\nchecking with a frontend such as:\n\n   [16]: https://github.com/validator/validator/releases/latest\n   [17]: https://hub.docker.com/r/validator/validator/\n   [18]: https://www.npmjs.com/package/vnu-jar\n   [19]: https://libraries.io/homebrew/vnu\n\n   [20]: https://github.com/svenkreiss/html5validator\n\n  * [Grunt plugin for HTML validation][21] or [Gulp plugin for HTML\n  validation][22]\n\n  * [html5validator `pip` package][23] (for HTML checking integration in Travis\n  CI, CircleCI, CodeShip, Jekyll, Pelican, etc.)\n\n  * [LMVTFY: Let Me Validate That For You][24] (auto-check HTML of\n  JSFiddle/JSBin, etc., links in GitHub issue comments)\n\n   [21]: https://github.com/validator/grunt-html\n   [22]: https://github.com/validator/gulp-html\n   [23]: https://github.com/svenkreiss/html5validator\n   [24]: https://github.com/cvrebert/lmvtfy/\n\n## Usage\n\nRun the checker with one of the following invocations:\n\n\u2022 `vnu-runtime-image/bin/vnu OPTIONS FILES` (Linux or macOS)\n\n\u2022 `vnu-runtime-image\\bin\\vnu.bat OPTIONS FILES` (Windows)\n\n\u2022 `java -jar ~/vnu.jar OPTIONS FILES` (any system with Java8+ installed)\n\n\u2026where _`FILES`_ are the documents to check, and _`OPTIONS`_ are zero or more of\nthe following options:\n\n    --errors-only --Werror --exit-zero-always --asciiquotes\n    --user-agent\u00a0USER_AGENT --no-langdetect --no-stream --filterfile\u00a0FILENAME\n    --filterpattern\u00a0PATTERN --css --skip-non-css --also-check-css --svg\n    --skip-non-svg --also-check-svg --html --skip-non-html\n    --format\u00a0gnu|xml|json|text --help --verbose --version\n\nThe [Options][25] section below provides details on each option, and the rest of\nthis section provides some specific examples.\n\n   [25]: https://validator.github.io/validator/#options\n\n**Note:** Throughout these examples, replace `~/vnu.jar` with the actual path to\nthat jar file on your system, and replace `vnu-runtime-image/bin/vnu` and\n`vnu-runtime-image\\bin\\vnu.bat` with the actual path to the `vnu` or `vnu.bat`\nprogram on your system \u2014 or if you add the `vnu-runtime-image/bin` or\n`vnu-runtime-image\\bin` directory your system `PATH` environment variable, you\ncan invoke the checker with just `vnu`.\n\nTo check one or more documents from the command line:\n\n      vnu-runtime-image/bin/vnu      FILE.html FILE2.html FILE3.HTML...\n\n      vnu-runtime-image\\bin\\vnu.bat  FILE.html FILE2.html FILE3.HTML...\n\n      java -jar ~/vnu.jar            FILE.html FILE2.html FILE3.HTML...\n\n**Note:** If you get a `StackOverflowError` error when invoking the checker, try\nadjusting the thread stack size by providing the `-Xss` option to java:\n\n      java -Xss512k -jar ~/vnu.jar ...\n\n      vnu-runtime-image/bin/java -Xss512k \\\n          -m vnu/nu.validator.client.SimpleCommandLineValidator ...\n\nTo check all documents in a particular directory `DIRECTORY_PATH` as HTML:\n\n      java -jar ~/vnu.jar            DIRECTORY_PATH\n\n      vnu-runtime-image/bin/vnu      DIRECTORY_PATH\n\n      vnu-runtime-image\\bin\\vnu.bat  DIRECTORY_PATH\n\n#### More examples\n\n**Note:** The examples in this section assume you have the\n`vnu-runtime-image/bin` or `vnu-runtime-image\\bin` directory in your system\n`PATH` environment variable. If you\u2019re using the jar file instead, replace `vnu`\nin the examples with `java -jar ~/vnu.jar`.\n\nTo check all documents in a particular directory `DIRECTORY_PATH` as HTML, but\nskip any documents whose names don\u2019t end with the extensions `.html`, `.htm`,\n`.xhtml`, or `.xht`:\n\n      vnu --skip-non-html DIRECTORY_PATH\n\nTo check all documents in a particular directory as CSS:\n\n      vnu --css DIRECTORY_PATH\n\nTo check all documents in a particular directory as CSS, but skip any documents\nwhose names don\u2019t end with the extension `.css`:\n\n      vnu --skip-non-css DIRECTORY_PATH\n\nTo check all documents in a particular directory, with documents whose names end\nin the extension `.css` being checked as CSS, and all other documents being\nchecked as HTML:\n\n      vnu --also-check-css DIRECTORY_PATH\n\nTo check all documents in a particular directory as SVG:\n\n      vnu --svg DIRECTORY_PATH\n\nTo check all documents in a particular directory as SVG, but skip any documents\nwhose names don\u2019t end with the extension `.svg`:\n\n      vnu --skip-non-svg DIRECTORY_PATH\n\nTo check all documents in a particular directory, with documents whose names end\nin the extension `.svg` being checked as SVG, and all other documents being\nchecked as HTML:\n\n      vnu --also-check-svg DIRECTORY_PATH\n\nTo check a Web document:\n\n      vnu _URL_\n\n      example: vnu http://example.com/foo\n\nTo check standard input:\n\n      vnu -\n\n      example:\n\n      echo '<!doctype html><title>...' | vnu -\n\n      echo '<!doctype html><title>...' | java -jar ~/vnu.jar -\n\n### Options\n\nWhen used from the command line as described in this section, the checker\nprovides the following options:\n\n#### --asciiquotes\n\n    Specifies whether ASCII quotation marks are substituted for Unicode smart\n    quotation marks in messages.\n\n    default: [unset; Unicode smart quotation marks are used in messages]\n\n#### --errors-only\n\n    Specifies that only error-level messages and non-document-error messages are\n    reported (so that warnings and info messages are not reported).\n\n    default: [unset; all messages reported, including warnings & info messages]\n\n#### --Werror\n\n    Makes the checker exit non-zero if any warnings are encountered (even if\n    there are no errors).\n\n    default: [unset; checker exits zero if only warnings are encountered]\n\n#### --exit-zero-always\n\n    Makes the checker exit zero even if errors are reported for any documents.\n\n    default: [unset; checker exits 1 if errors are reported for any documents]\n\n#### --filterfile _FILENAME_\n\n    Specifies a filename. Each line of the file contains either a regular\n    expression or starts with \"#\" to indicate the line is a comment. Any error\n    message or warning message that matches a regular expression in the file is\n    filtered out (dropped/suppressed).\n\n    default: [unset; checker does no message filtering]\n\n#### --filterpattern _REGEXP_\n\n    Specifies a regular expression. Any error message or warning message that\n    matches the regular expression is filtered out (dropped/suppressed).\n\n    As with all other checker options, this option may only be specified once.\n    So to filter multiple error messages or warning messages, you must provide a\n    single regular expression that will match all the messages. The typical way\n    to do that for regular expressions is to OR multiple patterns together using\n    the \"|\" character.\n\n    default: [unset; checker does no message filtering]\n\n#### --format _format_\n\n    Specifies the output format for reporting the results.\n\n    default: \"gnu\"\n\n    possible values: \"gnu\", \"xml\", \"json\", \"text\" [see information at URL below]\n\n    https://github.com/validator/validator/wiki/Service-%C2%BB-Common-params#out\n\n#### --help\n\n    Shows detailed usage information.\n\n#### --skip-non-css\n\n    Check documents as CSS but skip documents that don\u2019t have *.css extensions.\n\n    default: [unset; all documents found are checked]\n\n#### --css\n\n    Force all documents to be checked as CSS, regardless of extension.\n\n    default: [unset]\n\n#### --skip-non-svg\n\n    Check documents as SVG but skip documents that don\u2019t have *.svg extensions.\n\n    default: [unset; all documents found are checked]\n\n#### --svg\n\n    Force all documents to be checked as SVG, regardless of extension.\n\n    default: [unset]\n\n#### --skip-non-html\n\n    Skip documents that don\u2019t have *.html, *.htm, *.xhtml, or *.xht extensions.\n\n    default: [unset; all documents found are checked, regardless of extension]\n\n#### --html\n\n    Forces any *.xhtml or *.xht documents to be parsed using the HTML parser.\n\n    default: [unset; XML parser is used for *.xhtml and *.xht documents]\n\n#### --also-check-css\n\n    Check CSS documents (in addition to checking HTML documents).\n\n    default: [unset; no documents are checked as CSS]\n\n#### --also-check-svg\n\n    Check SVG documents (in addition to checking HTML documents).\n\n    default: [unset; no documents are checked as SVG]\n\n#### --user-agent _USER_AGENT_\n\n    Specifies the value of the User-Agent request header to send when checking\n    HTTPS/HTTP URLs.\n\n    default: \"Validator.nu/LV\"\n\n#### --no-langdetect\n\n    Disables language detection, so that documents are not checked for missing\n    or mislabeled html[lang] attributes.\n\n    default: [unset; language detection & html[lang] checking are performed]\n\n#### --no-stream\n\n    Forces all documents to be be parsed in buffered mode instead of streaming\n    mode (causes some parse errors to be treated as non-fatal document errors\n    instead of as fatal document errors).\n\n    default: [unset; non-streamable parse errors cause fatal document errors]\n\n#### --verbose\n\n    Specifies \"verbose\" output. (Currently this just means that the names of\n    files being checked are written to stdout.)\n\n    default: [unset; output is not verbose]\n\n#### --version\n\n    Shows the checker version number.\n\n## Web-based checking\n\nThe Nu Html Checker \u2014 along with being usable as [a standalone command-line\nclient][26] \u2014 can be run as an HTTP service, similar to [checker.html5.org][27],\n[html5.validator.nu][28], and [validator.w3.org/nu][29], for browser-based\nchecking of HTML documents over the Web. To that end, the checker is released as\nseveral separate packages:\n\n   [26]: https://validator.github.io/validator/#usage\n   [27]: https://checker.html5.org/\n   [28]: https://html5.validator.nu/\n   [29]: https://validator.w3.org/nu/\n\n  * Linux, Windows, and macOS binaries for deploying the checker as a simple\n  self-contained service on any system\n\n  * `vnu.jar` for deploying the checker as a simple self-contained service on a\n  system with Java installed\n\n  * `vnu.war` for deploying the checker to a servlet container such as Tomcat\n\nAll deployments expose a REST API that enables checking of HTML documents from\nother clients, not just web browsers. And the Linux, Windows, and macOS binaries\nand `vnu.jar` package also include a simple HTTP client that enables you to\neither send documents to a locally-running instance of the checker HTTP service\n\u2014 for fast command-line checking \u2014 or to any remote instance of the checker HTTP\nservice running anywhere on the Web.\n\nThe [latest releases of the Linux, Windows, and macOS binaries and vnu.jar and\nvnu.war packages][30] are available from the `validator` project at github. The\nfollowing are detailed instructions on using them.\n\n   [30]: https://github.com/validator/validator/releases/latest\n\n**Note:** Throughout these instructions, replace `~/vnu.jar` with the actual\npath to that jar file on your system, and replace `vnu-runtime-image/bin/java`\nand `vnu-runtime-image\\bin\\java.exe` with the actual path to the checker `java`\nor `java.exe` program on your system \u2014 or if you add the `vnu-runtime-image/bin`\nor `vnu-runtime-image\\bin` directory your system `PATH` environment variable,\nyou can invoke the checker with just `java\u00a0nu.validator.servlet.Main 8888`.\n\n### Standalone web server\n\nTo run the checker as a standalone service (using a built-in Jetty server), open\na new terminal window and invoke the checker like this:\n\n    java -cp ~/vnu.jar              nu.validator.servlet.Main 8888\n\n    vnu-runtime-image/bin/java      nu.validator.servlet.Main 8888\n\n    vnu-runtime-image\\bin\\java.exe  nu.validator.servlet.Main 8888\n\nThen open [http://0.0.0.0:8888][31] in a browser. (To listen on a different\nport, replace `8888` with the port number.)\n\n   [31]: http://0.0.0.0:8888\n\n**Warning:** Future checker releases will bind by default to the address\n`127.0.0.1`. Your checker deployment might become unreachable unless you use the\n`nu.validator.servlet.bind-address` system property to bind the checker to a\ndifferent address:\n\n    java -cp ~/vnu.jar \\\n        -Dnu.validator.servlet.bind-address=128.30.52.73 \\\n        nu.validator.servlet.Main 8888\n\n    vnu-runtime-image/bin/java \\\n        -Dnu.validator.servlet.bind-address=128.30.52.73 \\\n        nu.validator.servlet.Main 8888\n\n    vnu-runtime-image\\bin\\java.exe  \\\n        -Dnu.validator.servlet.bind-address=128.30.52.73 \\\n        nu.validator.servlet.Main 8888\n\nWhen you open [http://0.0.0.0:8888][32] (or whatever URL corresponds to the\n`nu.validator.servlet.bind-address` value you\u2019re using), you\u2019ll see a form\nsimilar to [validator.w3.org/nu][33] that allows you to enter the URL of an HTML\ndocument and have the results for that document displayed in the browser.\n\n   [32]: http://0.0.0.0:8888\n   [33]: https://validator.w3.org/nu/\n\n**Note:** If you get a `StackOverflowError` error when using the checker, try\nadjusting the thread stack size by providing the `-Xss` option to java:\n\n      java -Xss512k -cp ~/vnu.jar nu.validator.servlet.Main 8888\n\n      vnu-runtime-image/bin/java -Xss512k -m vnu/nu.validator.servlet.Main 8888\n\n### Deployment to servlet container\n\nTo run the checker inside of an existing servlet container such as Apache Tomcat\nyou will need to deploy the `vnu.war` file to that server following its\ndocumentation. For example, on Apache Tomcat you could do this using the\n[Manager][34] application or simply by copying the file to the `webapps`\ndirectory (since that is the default `appBase` setting). Typically you would see\na message similar to the following in the `catalina.out` log file.\n\n   [34]: https://tomcat.apache.org/tomcat-8.0-doc/manager-howto.html\n\n    May 7, 2014 4:42:04 PM org.apache.catalina.startup.HostConfig deployWAR\n    INFO: Deploying web application archive /var/lib/tomcat7/webapps/vnu.war\n\nAssuming your servlet container is configured to receive HTTP requests sent to\n`localhost` on port `80` and the context root of this application is `vnu`\n(often the default behavior is to use the WAR file's filename as the context\nroot unless one is explicitly specified) you should be able to access the\napplication by connecting to [http://localhost/vnu/][35].\n\n   [35]: http://localhost/vnu/\n\n**Note:** You may want to customize the `/WEB-INF/web.xml` file inside the WAR\nfile (you can use any ZIP-handling program) to modify the servlet filter\nconfiguration. For example, if you wanted to disable the inbound-size-limit\nfilter, you could comment out that filter like this:\n\n    <!--\n      <filter>\n          <filter-name>inbound-size-limit-filter</filter-name>\n          <filter-class>nu.validator.servlet.InboundSizeLimitFilter</filter-class>\n      </filter>\n      <filter-mapping>\n          <filter-name>inbound-size-limit-filter</filter-name>\n          <url-pattern>/*</url-pattern>\n      </filter-mapping>\n    -->\n\n### HTTP client (for fast command-line checking)\n\nThe checker is packaged with an HTTP client you can use from the command line to\neither send documents to a locally-running instance of the checker HTTP service\n\u2014 for fast command-line checking \u2014 or to a remote instance anywhere on the Web.\n\nTo check documents locally using the packaged HTTP client, do this:\n\n  1. Start up the checker as a local HTTP service, as described in the\n  **Standalone web server** section.\n\n  2. Open a new terminal window and invoke the HTTP client like this:\n\n    java -cp ~/vnu.jar nu.validator.client.HttpClient FILE.html...\n\n    vnu-runtime-image/bin/java nu.validator.client.HttpClient FILE.html...\n\nTo send documents to an instance of the checker on the Web, such as\n[html5.validator.nu/][36], use the nu.validator.client.host and\nnu.validator.client.port options, like this:\n\n   [36]: https://html5.validator.nu/\n\n    java -cp ~/vnu.jar -Dnu.validator.client.port=80 \\\n        -Dnu.validator.client.host=html5.validator.nu \\\n        nu.validator.client.HttpClient FILE.html...\n\n\u2026or like this:\n\n    vnu-runtime-image/bin/java -Dnu.validator.client.port=80 \\\n        -Dnu.validator.client.host=html5.validator.nu \\\n        nu.validator.client.HttpClient FILE.html...\n\nOther options are documented below.\n\n### HTTP client options\n\nWhen using the packaged HTTP client for sending documents to an instance of the\nchecker HTTP service for checking, you can set Java system properties to control\nconfiguration options for the checker behavior.\n\nFor example, you can suppress warning-level messages and only show error-level\nones by setting the value of the `nu.validator.client.level` system property to\n`error`, like this:\n\n    java -Dnu.validator.client.level=error \\\n           -cp ~/vnu.jar nu.validator.client.HttpClient FILE.html...\n\n\u2026or like this:\n\n    vnu-runtime-image/bin/java -Dnu.validator.client.level=error \\\n           -cp ~/vnu.jar nu.validator.client.HttpClient FILE.html...\n\nMost of the properties listed below map to the common input parameters for the\nchecker service, as documented at\n[github.com/validator/validator/wiki/Service-\u00bb-Common-params][37].\n\n   [37]: https://github.com/validator/validator/wiki/Service-%C2%BB-Common-params\n\n#### nu.validator.client.host\n\n    Specifies the hostname of the checker for the client to connect to.\n\n    default: \"127.0.0.1\"\n\n#### nu.validator.client.port\n\n    Specifies the hostname of the checker for the client to connect to.\n\n    default: \"8888\"\n\n    example: java -Dnu.validator.client.port=8080 -jar ~/vnu.jar FILE.html\n\n#### nu.validator.client.level\n\n    Specifies the severity level of messages to report; to suppress\n    warning-level messages, and only show error-level ones, set this property to\n    \"error\".\n\n    default: [unset]\n\n    possible values: \"error\"\n\n    example: java -Dnu.validator.client.level=error -jar ~/vnu.jar FILE.html\n\n#### nu.validator.client.parser\n\n    Specifies which parser to use.\n\n    default: \"html\"; or, for *.xhtml input files, \"xml\"\n\n    possible values: [see information at URL below]\n\n    https://github.com/validator/validator/wiki/Service-%C2%BB-Common-params#parser\n\n#### nu.validator.client.charset\n\n    Specifies the encoding of the input document.\n\n    default: [unset]\n\n#### nu.validator.client.content-type\n\n    Specifies the content-type of the input document.\n\n    default: \"text/html\"; or, for *.xhtml files, \"application/xhtml+xml\"\n\n#### nu.validator.client.out\n\n    Specifies the output format for messages.\n\n    default: \"gnu\"\n\n    possible values: [see information at URL below]\n\n    https://github.com/validator/validator/wiki/Service-%C2%BB-Common-params#out\n\n#### nu.validator.client.asciiquotes\n\n    Specifies whether ASCII quotation marks are substituted for Unicode smart\n    quotation marks in messages.\n\n    default: \"yes\"\n\n    possible values: \"yes\" or \"no\"\n\n### HTTP servlet options\n\n#### nu.validator.servlet.bind-address\n\n    Binds the validator service to the specified IP address.\n\n    default: 0.0.0.0 [causes the checker to listen on all interfaces]\n\n    possible values: The IP address of any network interface\n\n    example: -Dnu.validator.servlet.bind-address=127.0.0.1\n\n#### nu.validator.servlet.connection-timeout\n\n    Specifies the connection timeout.\n\n    default: 5000\n\n    possible values: number of milliseconds\n\n    example: -Dnu.validator.servlet.connection-timeout=5000\n\n#### nu.validator.servlet.socket-timeout\n\n    Specifies the socket timeout.\n\n    default: 5000\n\n    possible values: number of milliseconds\n\n    example: -Dnu.validator.servlet.socket-timeout=5000\n\n## Pulling from Docker Hub\n\nYou can pull the checker from the\n[https://hub.docker.com/r/validator/validator/][38] repo at Docker Hub.\n\n   [38]: https://hub.docker.com/r/validator/validator/\n\nTo pull and run the latest version of the checker:\n\n      docker run -it --rm -p 8888:8888 validator/validator:latest\n\nTo pull and run a specific Docker-Hub tag/version of the checker \u2014 for example,\nthe `17.11.1` version:\n\n      docker run -it --rm -p 8888:8888 validator/validator:17.11.1\n\nTo bind the checker to a specific address (rather than have it listening on all\ninterfaces):\n\n      docker run -it --rm -p 128.30.52.73:8888:8888 validator/validator:latest\n\nTo make the checker run with a connection timeout and socket timeout different\nthan the default 5 seconds, use the `CONNECTION_TIMEOUT_SECONDS` and\n`SOCKET_TIMEOUT_SECONDS` environment variables:\n\n      docker run -it --rm \\\n         -e\u00a0CONNECTION_TIMEOUT_SECONDS=15 \\\n         -e\u00a0SOCKET_TIMEOUT_SECONDS=15 \\\n         -p 8888:8888 \\\n         validator/validator\n\nTo make the checker run with particular Java system properties set, use the\n`JAVA_TOOL_OPTIONS` environment variable:\n\n      docker run -it --rm \\\n         -e\u00a0JAVA_TOOL_OPTIONS=-Dnu.validator.client.asciiquotes=yes  \\\n         -p\u00a08888:8888 \\\n         validator/validator\n\nTo define a service named `vnu` for use with `docker compose`, create a Compose\nfile named `docker-compose.yml` (for example), with contents such as the\nfollowing:\n\n      version: '2' services:\n        vnu:\n          image: validator/validator ports:\n            - \"8888:8888\"\n          network_mode: \"host\" #so \"localhost\" refers to the host machine.\n\n## Build instructions\n\nFollow the steps below to build, test, and run the checker such that you can\nopen `http://0.0.0.0:8888/` in a Web browser to use the checker Web UI.\n\n  1. Make sure you have git, python, and JDK 8 or above installed.\n\n  2. Set the `JAVA_HOME` environment variable:\n\n        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64    <-- Ubuntu, etc.\n\n        export JAVA_HOME=$(/usr/libexec/java_home)            <-- MacOS\n\n  3. Create a working directory:\n\n        git clone https://github.com/validator/validator.git\n\n  4. Change into your working directory:\n\n        cd validator\n\n  5. Start the checker Python script:\n\n        python ./checker.py all\n\nThe first time you run the checker Python script, you\u2019ll need to be online and\nthe build will need time to download several megabytes of dependencies.\n\nThe steps above will build, test, and run the checker such that you can open\n`http://0.0.0.0:8888/` in a Web browser to use the checker Web UI.\n\n**Warning:** Future checker releases will bind by default to the address\n`127.0.0.1`. Your checker deployment might become unreachable unless you use the\n`--bind-address` option to bind the checker to a different address:\n\n        python ./checker.py --bind-address=128.30.52.73 all\n\nUse `python ./checker.py --help` to see command-line options for controlling the\nbehavior of the script, as well as build-target names you can call separately;\ne.g.:\n\n  * `python ./checker.py build` (to build only)\n\n  * `python ./checker.py build test` (to build and test)\n\n  * `python ./checker.py run` (to run only)\n\n  * `python ./checker.py jar` (to compile `vnu.jar`)\n\n"}, {"repo": "CSSLint/csslint", "language": "JavaScript", "readme_contents": "[![npm version](https://img.shields.io/npm/v/csslint.svg)](https://www.npmjs.com/package/csslint)\n[![Build Status](https://img.shields.io/travis/CSSLint/csslint/master.svg)](https://travis-ci.org/CSSLint/csslint)\n[![Dependency Status](https://img.shields.io/david/CSSLint/csslint.svg)](https://david-dm.org/CSSLint/csslint)\n[![devDependency Status](https://img.shields.io/david/dev/CSSLint/csslint.svg)](https://david-dm.org/CSSLint/csslint#info=devDependencies)\n\n# CSSLint\n\nCSSLint is an open source CSS code quality tool originally written by\n[Nicholas C. Zakas](http://www.nczonline.net/) and\n[Nicole Sullivan](http://www.stubbornella.org/). It was released in June 2011 at\nthe Velocity conference.\n\nA [lint](http://en.wikipedia.org/wiki/Lint_programming_tool) tool performs\n[static analysis](http://en.wikipedia.org/wiki/Static_code_analysis) of source\ncode and flags patterns that might be errors or otherwise cause problems for the\ndeveloper.\n\nCSSLint is a tool to help point out problems with your CSS code. It does basic\nsyntax checking as well as applying a set of rules to the code that look for\nproblematic patterns or signs of inefficiency. The rules are all pluggable, so\nyou can easily write your own or omit ones you don't want.\n\n## Integration\n\n### Command Line Interface\n\nAll about the command line interface for CSSLint. If you'd rather use a CLI\nprogram to verify your CSS instead of using the web site, then this guide is\nyour best friend.\nhttps://github.com/CSSLint/csslint/wiki/Command-line-interface\n\n### Build System\n\nOnce you're familiar with the CSSLint command line interface, the next step is\nto integrate it into your build system. This guide walks through using CSSLint\nas part of your build.\nhttps://github.com/CSSLint/csslint/wiki/Build-System-Integration\n\n### IDE\n\nYou can integrate CSSLint into your favorite IDE to make checking your CSS code\nquality easy. In fact, some IDEs already have CSSLint built in.\nhttps://github.com/CSSLint/csslint/wiki/IDE-integration\n\n## Rules\n\nNot sure why a rule is important? This guide talks about each of the CSSLint\nrules and explains how the rule is designed to improve your CSS.\nhttps://github.com/CSSLint/csslint/wiki/Rules\n\n## Developer Guide\n\nIf you want to contribute to the project, or even just tinker on your own,\nthis guide explains how to get the source and work with it.\nhttps://github.com/CSSLint/csslint/wiki/Developer-Guide\n\n## Contributors\n\n1. Samori Gorse, https://twitter.com/shinuza (Rules, Non-zero Exit Code for CLI)\n1. Eitan Konigsburg, https://twitter.com/eitanmk (Rhino CLI)\n1. Ben Barber (Compatible Vendor Prefix Rule)\n1. Eric Wendelin, http://eriwen.com (Output formatters)\n1. Kasper Garnaes, http://reload.dk (Checkstyle XML format)\n1. Gord Tanner, http://www.tinyhippos.com (CLI quiet option)\n1. Hans-Peter Buniat, https://github.com/hpbuniat (Duplicate background image rule)\n1. Dino Chiesa, https://github.com/DinoChiesa (Windows Script Host CLI)\n1. Tomasz Oponowicz, https://github.com/tomasz-oponowicz (XML format and CLI fixes)\n1. Julien Kernec'h, https://github.com/parallel (Fixed a rule)\n1. Cillian de R\u00f3iste, https://plus.google.com/116480676247600483573/posts (Node CLI fixes)\n1. Damien Sennm, https://github.com/topaxi (README fixes)\n1. Jonathan Barnett, http://twitter.com/indieisaconcept (JUnit formatter)\n1. Zach Leatherman, http://www.zachleat.com/ (bug fixes)\n1. Philip Walton, http://philipwalton.com (Rules fixes, bug fixes)\n1. Jeff Beck, http://www.jeffbeck.info (Rules fixes, bug fixes)\n1. Jay Merrifield, https://github.com/fracmak (Rules fixes)\n1. Michael Mattiacci, http://mattiacci.com (Rules fixes)\n1. Jonathan Klein, http://www.jonathanklein.net (Bulletproof font-face rule)\n1. Shannon Moeller, http://shannonmoeller.com (Embedded rulesets)\n1. Nick Schonning, https://github.com/nschonni (Contributing.md, grunt build)\n1. Jared Wyles, https://github.com/jaredwy (Managing pull requests, endless advice)\n1. Scott Gonzalez, https://github.com/scottgonzalez (JSON config)\n"}, {"repo": "PyCQA/pycodestyle", "language": "Python", "readme_contents": "pycodestyle (formerly called pep8) - Python style guide checker\n===============================================================\n\n.. image:: https://img.shields.io/travis/PyCQA/pycodestyle.svg\n   :target: https://travis-ci.org/PyCQA/pycodestyle\n   :alt: Build status\n\n.. image:: https://readthedocs.org/projects/pycodestyle/badge/?version=latest\n    :target: https://pycodestyle.readthedocs.io\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/pypi/wheel/pycodestyle.svg\n   :target: https://pypi.org/project/pycodestyle/\n   :alt: Wheel Status\n\n.. image:: https://badges.gitter.im/PyCQA/pycodestyle.svg\n   :alt: Join the chat at https://gitter.im/PyCQA/pycodestyle\n   :target: https://gitter.im/PyCQA/pycodestyle?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\npycodestyle is a tool to check your Python code against some of the style\nconventions in `PEP 8`_.\n\n.. _PEP 8: http://www.python.org/dev/peps/pep-0008/\n\n.. note::\n\n    This package used to be called ``pep8`` but was renamed to ``pycodestyle``\n    to reduce confusion. Further discussion can be found `in the issue where\n    Guido requested this\n    change <https://github.com/PyCQA/pycodestyle/issues/466>`_, or in the\n    lightning talk at PyCon 2016 by @IanLee1521:\n    `slides <https://speakerdeck.com/ianlee1521/pep8-vs-pep-8>`_\n    `video <https://youtu.be/PulzIT8KYLk?t=36m>`_.\n\nFeatures\n--------\n\n* Plugin architecture: Adding new checks is easy.\n\n* Parseable output: Jump to error location in your editor.\n\n* Small: Just one Python file, requires only stdlib. You can use just\n  the ``pycodestyle.py`` file for this purpose.\n\n* Comes with a comprehensive test suite.\n\nInstallation\n------------\n\nYou can install, upgrade, and uninstall ``pycodestyle.py`` with these commands::\n\n  $ pip install pycodestyle\n  $ pip install --upgrade pycodestyle\n  $ pip uninstall pycodestyle\n\nThere's also a package for Debian/Ubuntu, but it's not always the\nlatest version.\n\nExample usage and output\n------------------------\n\n::\n\n  $ pycodestyle --first optparse.py\n  optparse.py:69:11: E401 multiple imports on one line\n  optparse.py:77:1: E302 expected 2 blank lines, found 1\n  optparse.py:88:5: E301 expected 1 blank line, found 0\n  optparse.py:222:34: W602 deprecated form of raising exception\n  optparse.py:347:31: E211 whitespace before '('\n  optparse.py:357:17: E201 whitespace after '{'\n  optparse.py:472:29: E221 multiple spaces before operator\n  optparse.py:544:21: W601 .has_key() is deprecated, use 'in'\n\nYou can also make ``pycodestyle.py`` show the source code for each error, and\neven the relevant text from PEP 8::\n\n  $ pycodestyle --show-source --show-pep8 testsuite/E40.py\n  testsuite/E40.py:2:10: E401 multiple imports on one line\n  import os, sys\n           ^\n      Imports should usually be on separate lines.\n\n      Okay: import os\\nimport sys\n      E401: import sys, os\n\n\nOr you can display how often each error was found::\n\n  $ pycodestyle --statistics -qq Python-2.5/Lib\n  232     E201 whitespace after '['\n  599     E202 whitespace before ')'\n  631     E203 whitespace before ','\n  842     E211 whitespace before '('\n  2531    E221 multiple spaces before operator\n  4473    E301 expected 1 blank line, found 0\n  4006    E302 expected 2 blank lines, found 1\n  165     E303 too many blank lines (4)\n  325     E401 multiple imports on one line\n  3615    E501 line too long (82 characters)\n  612     W601 .has_key() is deprecated, use 'in'\n  1188    W602 deprecated form of raising exception\n\nLinks\n-----\n\n* `Read the documentation <https://pycodestyle.readthedocs.io/>`_\n\n* `Fork me on GitHub <http://github.com/PyCQA/pycodestyle>`_\n"}, {"repo": "PyCQA/flake8", "language": "Python", "readme_contents": "========\n Flake8\n========\n\nFlake8 is a wrapper around these tools:\n\n- PyFlakes\n- pycodestyle\n- Ned Batchelder's McCabe script\n\nFlake8 runs all the tools by launching the single ``flake8`` command.\nIt displays the warnings in a per-file, merged output.\n\nIt also adds a few features:\n\n- files that contain this line are skipped::\n\n    # flake8: noqa\n\n- lines that contain a ``# noqa`` comment at the end will not issue warnings.\n- you can ignore specific errors on a line with ``# noqa: <error>``, e.g.,\n  ``# noqa: E234``. Multiple codes can be given, separated by comma. The ``noqa`` token is case insensitive, the colon before the list of codes is required otherwise the part after ``noqa`` is ignored\n- Git and Mercurial hooks\n- extendable through ``flake8.extension`` and ``flake8.formatting`` entry\n  points\n\n\nQuickstart\n==========\n\nSee our `quickstart documentation\n<http://flake8.pycqa.org/en/latest/index.html#quickstart>`_ for how to install\nand get started with Flake8.\n\n\nFrequently Asked Questions\n==========================\n\nFlake8 maintains an `FAQ <http://flake8.pycqa.org/en/latest/faq.html>`_ in its\ndocumentation.\n\n\nQuestions or Feedback\n=====================\n\nIf you have questions you'd like to ask the developers, or feedback you'd like\nto provide, feel free to use the mailing list: code-quality@python.org\n\nWe would love to hear from you. Additionally, if you have a feature you'd like\nto suggest, the mailing list would be the best place for it.\n\n\nLinks\n=====\n\n* `Flake8 Documentation <http://flake8.pycqa.org/en/latest/>`_\n\n* `GitLab Project <https://gitlab.com/pycqa/flake8>`_\n\n* `All (Open and Closed) Issues\n  <https://gitlab.com/pycqa/flake8/issues?scope=all&sort=updated_desc&state=all>`_\n\n* `Code-Quality Archives\n  <https://mail.python.org/mailman/listinfo/code-quality>`_\n\n* `Code of Conduct\n  <http://flake8.pycqa.org/en/latest/internal/contributing.html#code-of-conduct>`_\n\n* `Getting Started Contributing\n  <http://flake8.pycqa.org/en/latest/internal/contributing.html>`_\n\n\nMaintenance\n===========\n\nFlake8 was created by Tarek Ziad\u00e9 and is currently maintained by `Ian Cordasco\n<http://www.coglib.com/~icordasc/>`_\n"}, {"repo": "psf/black", "language": "Python", "readme_contents": "![Black Logo](https://raw.githubusercontent.com/psf/black/master/docs/_static/logo2-readme.png)\n\n<h2 align=\"center\">The Uncompromising Code Formatter</h2>\n\n<p align=\"center\">\n<a href=\"https://travis-ci.com/psf/black\"><img alt=\"Build Status\" src=\"https://travis-ci.com/psf/black.svg?branch=master\"></a>\n<a href=\"https://github.com/psf/black/actions\"><img alt=\"Actions Status\" src=\"https://github.com/psf/black/workflows/Test/badge.svg\"></a>\n<a href=\"https://black.readthedocs.io/en/stable/?badge=stable\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/black/badge/?version=stable\"></a>\n<a href=\"https://coveralls.io/github/psf/black?branch=master\"><img alt=\"Coverage Status\" src=\"https://coveralls.io/repos/github/psf/black/badge.svg?branch=master\"></a>\n<a href=\"https://github.com/psf/black/blob/master/LICENSE\"><img alt=\"License: MIT\" src=\"https://black.readthedocs.io/en/stable/_static/license.svg\"></a>\n<a href=\"https://pypi.org/project/black/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/black\"></a>\n<a href=\"https://pepy.tech/project/black\"><img alt=\"Downloads\" src=\"https://pepy.tech/badge/black\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n</p>\n\n> \u201cAny color you like.\u201d\n\n_Black_ is the uncompromising Python code formatter. By using it, you agree to cede\ncontrol over minutiae of hand-formatting. In return, _Black_ gives you speed,\ndeterminism, and freedom from `pycodestyle` nagging about formatting. You will save time\nand mental energy for more important matters.\n\nBlackened code looks the same regardless of the project you're reading. Formatting\nbecomes transparent after a while and you can focus on the content instead.\n\n_Black_ makes code review faster by producing the smallest diffs possible.\n\nTry it out now using the [Black Playground](https://black.now.sh). Watch the\n[PyCon 2019 talk](https://youtu.be/esZLCuWs_2Y) to learn more.\n\n---\n\n_Contents:_ **[Installation and usage](#installation-and-usage)** |\n**[Code style](#the-black-code-style)** | **[pyproject.toml](#pyprojecttoml)** |\n**[Editor integration](#editor-integration)** | **[blackd](#blackd)** |\n**[Version control integration](#version-control-integration)** |\n**[Ignoring unmodified files](#ignoring-unmodified-files)** | **[Used by](#used-by)** |\n**[Testimonials](#testimonials)** | **[Show your style](#show-your-style)** |\n**[Contributing](#contributing-to-black)** | **[Change Log](#change-log)** |\n**[Authors](#authors)**\n\n---\n\n## Installation and usage\n\n### Installation\n\n_Black_ can be installed by running `pip install black`. It requires Python 3.6.0+ to\nrun but you can reformat Python 2 code with it, too.\n\n### Usage\n\nTo get started right away with sensible defaults:\n\n```\nblack {source_file_or_directory}\n```\n\n### Command line options\n\n_Black_ doesn't provide many options. You can list them by running `black --help`:\n\n```text\nblack [OPTIONS] [SRC]...\n\nOptions:\n  -c, --code TEXT                 Format the code passed in as a string.\n  -l, --line-length INTEGER       How many characters per line to allow.\n                                  [default: 88]\n  -t, --target-version [py27|py33|py34|py35|py36|py37|py38]\n                                  Python versions that should be supported by\n                                  Black's output. [default: per-file auto-\n                                  detection]\n  --py36                          Allow using Python 3.6-only syntax on all\n                                  input files.  This will put trailing commas\n                                  in function signatures and calls also after\n                                  *args and **kwargs. Deprecated; use\n                                  --target-version instead. [default: per-file\n                                  auto-detection]\n  --pyi                           Format all input files like typing stubs\n                                  regardless of file extension (useful when\n                                  piping source on standard input).\n  -S, --skip-string-normalization\n                                  Don't normalize string quotes or prefixes.\n  --check                         Don't write the files back, just return the\n                                  status.  Return code 0 means nothing would\n                                  change.  Return code 1 means some files\n                                  would be reformatted.  Return code 123 means\n                                  there was an internal error.\n  --diff                          Don't write the files back, just output a\n                                  diff for each file on stdout.\n  --fast / --safe                 If --fast given, skip temporary sanity\n                                  checks. [default: --safe]\n  --include TEXT                  A regular expression that matches files and\n                                  directories that should be included on\n                                  recursive searches.  An empty value means\n                                  all files are included regardless of the\n                                  name.  Use forward slashes for directories\n                                  on all platforms (Windows, too).  Exclusions\n                                  are calculated first, inclusions later.\n                                  [default: \\.pyi?$]\n  --exclude TEXT                  A regular expression that matches files and\n                                  directories that should be excluded on\n                                  recursive searches.  An empty value means no\n                                  paths are excluded. Use forward slashes for\n                                  directories on all platforms (Windows, too).\n                                  Exclusions are calculated first, inclusions\n                                  later.  [default: /(\\.eggs|\\.git|\\.hg|\\.mypy\n                                  _cache|\\.nox|\\.tox|\\.venv|_build|buck-\n                                  out|build|dist)/]\n  -q, --quiet                     Don't emit non-error messages to stderr.\n                                  Errors are still emitted, silence those with\n                                  2>/dev/null.\n  -v, --verbose                   Also emit messages to stderr about files\n                                  that were not changed or were ignored due to\n                                  --exclude=.\n  --version                       Show the version and exit.\n  --config PATH                   Read configuration from PATH.\n  -h, --help                      Show this message and exit.\n```\n\n_Black_ is a well-behaved Unix-style command-line tool:\n\n- it does nothing if no sources are passed to it;\n- it will read from standard input and write to standard output if `-` is used as the\n  filename;\n- it only outputs messages to users on standard error;\n- exits with code 0 unless an internal error occurred (or `--check` was used).\n\n### NOTE: This is a beta product\n\n_Black_ is already [successfully used](#used-by) by many projects, small and big. It\nalso sports a decent test suite. However, it is still very new. Things will probably be\nwonky for a while. This is made explicit by the \"Beta\" trove classifier, as well as by\nthe \"b\" in the version number. What this means for you is that **until the formatter\nbecomes stable, you should expect some formatting to change in the future**. That being\nsaid, no drastic stylistic changes are planned, mostly responses to bug reports.\n\nAlso, as a temporary safety measure, _Black_ will check that the reformatted code still\nproduces a valid AST that is equivalent to the original. This slows it down. If you're\nfeeling confident, use `--fast`.\n\n## The _Black_ code style\n\n_Black_ reformats entire files in place. It is not configurable. It doesn't take\nprevious formatting into account. It doesn't reformat blocks that start with\n`# fmt: off` and end with `# fmt: on`. `# fmt: on/off` have to be on the same level of\nindentation. It also recognizes [YAPF](https://github.com/google/yapf)'s block comments\nto the same effect, as a courtesy for straddling code.\n\n### How _Black_ wraps lines\n\n_Black_ ignores previous formatting and applies uniform horizontal and vertical\nwhitespace to your code. The rules for horizontal whitespace can be summarized as: do\nwhatever makes `pycodestyle` happy. The coding style used by _Black_ can be viewed as a\nstrict subset of PEP 8.\n\nAs for vertical whitespace, _Black_ tries to render one full expression or simple\nstatement per line. If this fits the allotted line length, great.\n\n```py3\n# in:\n\nj = [1,\n     2,\n     3\n]\n\n# out:\n\nj = [1, 2, 3]\n```\n\nIf not, _Black_ will look at the contents of the first outer matching brackets and put\nthat in a separate indented line.\n\n```py3\n# in:\n\nImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument)\n\n# out:\n\nImportantClass.important_method(\n    exc, limit, lookup_lines, capture_locals, extra_argument\n)\n```\n\nIf that still doesn't fit the bill, it will decompose the internal expression further\nusing the same rule, indenting matching brackets every time. If the contents of the\nmatching brackets pair are comma-separated (like an argument list, or a dict literal,\nand so on) then _Black_ will first try to keep them on the same line with the matching\nbrackets. If that doesn't work, it will put all of them in separate lines.\n\n```py3\n# in:\n\ndef very_important_function(template: str, *variables, file: os.PathLike, engine: str, header: bool = True, debug: bool = False):\n    \"\"\"Applies `variables` to the `template` and writes to `file`.\"\"\"\n    with open(file, 'w') as f:\n        ...\n\n# out:\n\ndef very_important_function(\n    template: str,\n    *variables,\n    file: os.PathLike,\n    engine: str,\n    header: bool = True,\n    debug: bool = False,\n):\n    \"\"\"Applies `variables` to the `template` and writes to `file`.\"\"\"\n    with open(file, \"w\") as f:\n        ...\n```\n\nYou might have noticed that closing brackets are always dedented and that a trailing\ncomma is always added. Such formatting produces smaller diffs; when you add or remove an\nelement, it's always just one line. Also, having the closing bracket dedented provides a\nclear delimiter between two distinct sections of the code that otherwise share the same\nindentation level (like the arguments list and the docstring in the example above).\n\nIf a data structure literal (tuple, list, set, dict) or a line of \"from\" imports cannot\nfit in the allotted length, it's always split into one element per line. This minimizes\ndiffs as well as enables readers of code to find which commit introduced a particular\nentry. This also makes _Black_ compatible with [isort](https://pypi.org/p/isort/) with\nthe following configuration.\n\n<details>\n<summary>A compatible `.isort.cfg`</summary>\n\n```\n[settings]\nmulti_line_output=3\ninclude_trailing_comma=True\nforce_grid_wrap=0\nuse_parentheses=True\nline_length=88\n```\n\nThe equivalent command line is:\n\n```\n$ isort --multi-line=3 --trailing-comma --force-grid-wrap=0 --use-parentheses --line-width=88 [ file.py ]\n```\n\n</details>\n\n### Line length\n\nYou probably noticed the peculiar default line length. _Black_ defaults to 88 characters\nper line, which happens to be 10% over 80. This number was found to produce\nsignificantly shorter files than sticking with 80 (the most popular), or even 79 (used\nby the standard library). In general,\n[90-ish seems like the wise choice](https://youtu.be/wf-BqAjZb8M?t=260).\n\nIf you're paid by the line of code you write, you can pass `--line-length` with a lower\nnumber. _Black_ will try to respect that. However, sometimes it won't be able to without\nbreaking other rules. In those rare cases, auto-formatted code will exceed your allotted\nlimit.\n\nYou can also increase it, but remember that people with sight disabilities find it\nharder to work with line lengths exceeding 100 characters. It also adversely affects\nside-by-side diff review on typical screen resolutions. Long lines also make it harder\nto present code neatly in documentation or talk slides.\n\nIf you're using Flake8, you can bump `max-line-length` to 88 and forget about it.\nAlternatively, use [Bugbear](https://github.com/PyCQA/flake8-bugbear)'s B950 warning\ninstead of E501 and keep the max line length at 80 which you are probably already using.\nYou'd do it like this:\n\n```ini\n[flake8]\nmax-line-length = 80\n...\nselect = C,E,F,W,B,B950\nignore = E203, E501, W503\n```\n\nYou'll find _Black_'s own .flake8 config file is configured like this. Explanation of\nwhy W503 and E203 are disabled can be found further in this documentation. And if you're\ncurious about the reasoning behind B950,\n[Bugbear's documentation](https://github.com/PyCQA/flake8-bugbear#opinionated-warnings)\nexplains it. The tl;dr is \"it's like highway speed limits, we won't bother you if you\noverdo it by a few km/h\".\n\n**If you're looking for a minimal, black-compatible flake8 configuration:**\n\n```ini\n[flake8]\nmax-line-length = 88\nextend-ignore = E203\n```\n\n### Empty lines\n\n_Black_ avoids spurious vertical whitespace. This is in the spirit of PEP 8 which says\nthat in-function vertical whitespace should only be used sparingly.\n\n_Black_ will allow single empty lines inside functions, and single and double empty\nlines on module level left by the original editors, except when they're within\nparenthesized expressions. Since such expressions are always reformatted to fit minimal\nspace, this whitespace is lost.\n\nIt will also insert proper spacing before and after function definitions. It's one line\nbefore and after inner functions and two lines before and after module-level functions\nand classes. _Black_ will not put empty lines between function/class definitions and\nstandalone comments that immediately precede the given function/class.\n\n_Black_ will enforce single empty lines between a class-level docstring and the first\nfollowing field or method. This conforms to\n[PEP 257](https://www.python.org/dev/peps/pep-0257/#multi-line-docstrings).\n\n_Black_ won't insert empty lines after function docstrings unless that empty line is\nrequired due to an inner function starting immediately after.\n\n### Trailing commas\n\n_Black_ will add trailing commas to expressions that are split by comma where each\nelement is on its own line. This includes function signatures.\n\nUnnecessary trailing commas are removed if an expression fits in one line. This makes it\n1% more likely that your line won't exceed the allotted line length limit. Moreover, in\nthis scenario, if you added another argument to your call, you'd probably fit it in the\nsame line anyway. That doesn't make diffs any larger.\n\nOne exception to removing trailing commas is tuple expressions with just one element. In\nthis case _Black_ won't touch the single trailing comma as this would unexpectedly\nchange the underlying data type. Note that this is also the case when commas are used\nwhile indexing. This is a tuple in disguise: `numpy_array[3, ]`.\n\nOne exception to adding trailing commas is function signatures containing `*`, `*args`,\nor `**kwargs`. In this case a trailing comma is only safe to use on Python 3.6. _Black_\nwill detect if your file is already 3.6+ only and use trailing commas in this situation.\nIf you wonder how it knows, it looks for f-strings and existing use of trailing commas\nin function signatures that have stars in them. In other words, if you'd like a trailing\ncomma in this situation and _Black_ didn't recognize it was safe to do so, put it there\nmanually and _Black_ will keep it.\n\n### Strings\n\n_Black_ prefers double quotes (`\"` and `\"\"\"`) over single quotes (`'` and `'''`). It\nwill replace the latter with the former as long as it does not result in more backslash\nescapes than before.\n\n_Black_ also standardizes string prefixes, making them always lowercase. On top of that,\nif your code is already Python 3.6+ only or it's using the `unicode_literals` future\nimport, _Black_ will remove `u` from the string prefix as it is meaningless in those\nscenarios.\n\nThe main reason to standardize on a single form of quotes is aesthetics. Having one kind\nof quotes everywhere reduces reader distraction. It will also enable a future version of\n_Black_ to merge consecutive string literals that ended up on the same line (see\n[#26](https://github.com/psf/black/issues/26) for details).\n\nWhy settle on double quotes? They anticipate apostrophes in English text. They match the\ndocstring standard described in\n[PEP 257](https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring). An empty\nstring in double quotes (`\"\"`) is impossible to confuse with a one double-quote\nregardless of fonts and syntax highlighting used. On top of this, double quotes for\nstrings are consistent with C which Python interacts a lot with.\n\nOn certain keyboard layouts like US English, typing single quotes is a bit easier than\ndouble quotes. The latter requires use of the Shift key. My recommendation here is to\nkeep using whatever is faster to type and let _Black_ handle the transformation.\n\nIf you are adopting _Black_ in a large project with pre-existing string conventions\n(like the popular\n[\"single quotes for data, double quotes for human-readable strings\"](https://stackoverflow.com/a/56190)),\nyou can pass `--skip-string-normalization` on the command line. This is meant as an\nadoption helper, avoid using this for new projects.\n\n### Numeric literals\n\n_Black_ standardizes most numeric literals to use lowercase letters for the syntactic\nparts and uppercase letters for the digits themselves: `0xAB` instead of `0XAB` and\n`1e10` instead of `1E10`. Python 2 long literals are styled as `2L` instead of `2l` to\navoid confusion between `l` and `1`.\n\n### Line breaks & binary operators\n\n_Black_ will break a line before a binary operator when splitting a block of code over\nmultiple lines. This is so that _Black_ is compliant with the recent changes in the\n[PEP 8](https://www.python.org/dev/peps/pep-0008/#should-a-line-break-before-or-after-a-binary-operator)\nstyle guide, which emphasizes that this approach improves readability.\n\nThis behaviour may raise `W503 line break before binary operator` warnings in style\nguide enforcement tools like Flake8. Since `W503` is not PEP 8 compliant, you should\ntell Flake8 to ignore these warnings.\n\n### Slices\n\nPEP 8\n[recommends](https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements)\nto treat `:` in slices as a binary operator with the lowest priority, and to leave an\nequal amount of space on either side, except if a parameter is omitted (e.g.\n`ham[1 + 1 :]`). It also states that for extended slices, both `:` operators have to\nhave the same amount of spacing, except if a parameter is omitted (`ham[1 + 1 ::]`).\n_Black_ enforces these rules consistently.\n\nThis behaviour may raise `E203 whitespace before ':'` warnings in style guide\nenforcement tools like Flake8. Since `E203` is not PEP 8 compliant, you should tell\nFlake8 to ignore these warnings.\n\n### Parentheses\n\nSome parentheses are optional in the Python grammar. Any expression can be wrapped in a\npair of parentheses to form an atom. There are a few interesting cases:\n\n- `if (...):`\n- `while (...):`\n- `for (...) in (...):`\n- `assert (...), (...)`\n- `from X import (...)`\n- assignments like:\n  - `target = (...)`\n  - `target: type = (...)`\n  - `some, *un, packing = (...)`\n  - `augmented += (...)`\n\nIn those cases, parentheses are removed when the entire statement fits in one line, or\nif the inner expression doesn't have any delimiters to further split on. If there is\nonly a single delimiter and the expression starts or ends with a bracket, the\nparenthesis can also be successfully omitted since the existing bracket pair will\norganize the expression neatly anyway. Otherwise, the parentheses are added.\n\nPlease note that _Black_ does not add or remove any additional nested parentheses that\nyou might want to have for clarity or further code organization. For example those\nparentheses are not going to be removed:\n\n```py3\nreturn not (this or that)\ndecision = (maybe.this() and values > 0) or (maybe.that() and values < 0)\n```\n\n### Call chains\n\nSome popular APIs, like ORMs, use call chaining. This API style is known as a\n[fluent interface](https://en.wikipedia.org/wiki/Fluent_interface). _Black_ formats\nthose by treating dots that follow a call or an indexing operation like a very low\npriority delimiter. It's easier to show the behavior than to explain it. Look at the\nexample:\n\n```py3\ndef example(session):\n    result = (\n        session.query(models.Customer.id)\n        .filter(\n            models.Customer.account_id == account_id,\n            models.Customer.email == email_address,\n        )\n        .order_by(models.Customer.id.asc())\n        .all()\n    )\n```\n\n### Typing stub files\n\nPEP 484 describes the syntax for type hints in Python. One of the use cases for typing\nis providing type annotations for modules which cannot contain them directly (they might\nbe written in C, or they might be third-party, or their implementation may be overly\ndynamic, and so on).\n\nTo solve this,\n[stub files with the `.pyi` file extension](https://www.python.org/dev/peps/pep-0484/#stub-files)\ncan be used to describe typing information for an external module. Those stub files omit\nthe implementation of classes and functions they describe, instead they only contain the\nstructure of the file (listing globals, functions, and classes with their members). The\nrecommended code style for those files is more terse than PEP 8:\n\n- prefer `...` on the same line as the class/function signature;\n- avoid vertical whitespace between consecutive module-level functions, names, or\n  methods and fields within a single class;\n- use a single blank line between top-level class definitions, or none if the classes\n  are very small.\n\n_Black_ enforces the above rules. There are additional guidelines for formatting `.pyi`\nfile that are not enforced yet but might be in a future version of the formatter:\n\n- all function bodies should be empty (contain `...` instead of the body);\n- do not use docstrings;\n- prefer `...` over `pass`;\n- for arguments with a default, use `...` instead of the actual default;\n- avoid using string literals in type annotations, stub files support forward references\n  natively (like Python 3.7 code with `from __future__ import annotations`);\n- use variable annotations instead of type comments, even for stubs that target older\n  versions of Python;\n- for arguments that default to `None`, use `Optional[]` explicitly;\n- use `float` instead of `Union[int, float]`.\n\n## pyproject.toml\n\n_Black_ is able to read project-specific default values for its command line options\nfrom a `pyproject.toml` file. This is especially useful for specifying custom\n`--include` and `--exclude` patterns for your project.\n\n**Pro-tip**: If you're asking yourself \"Do I need to configure anything?\" the answer is\n\"No\". _Black_ is all about sensible defaults.\n\n### What on Earth is a `pyproject.toml` file?\n\n[PEP 518](https://www.python.org/dev/peps/pep-0518/) defines `pyproject.toml` as a\nconfiguration file to store build system requirements for Python projects. With the help\nof tools like [Poetry](https://poetry.eustace.io/) or\n[Flit](https://flit.readthedocs.io/en/latest/) it can fully replace the need for\n`setup.py` and `setup.cfg` files.\n\n### Where _Black_ looks for the file\n\nBy default _Black_ looks for `pyproject.toml` starting from the common base directory of\nall files and directories passed on the command line. If it's not there, it looks in\nparent directories. It stops looking when it finds the file, or a `.git` directory, or a\n`.hg` directory, or the root of the file system, whichever comes first.\n\nIf you're formatting standard input, _Black_ will look for configuration starting from\nthe current working directory.\n\nYou can also explicitly specify the path to a particular file that you want with\n`--config`. In this situation _Black_ will not look for any other file.\n\nIf you're running with `--verbose`, you will see a blue message if a file was found and\nused.\n\nPlease note `blackd` will not use `pyproject.toml` configuration.\n\n### Configuration format\n\nAs the file extension suggests, `pyproject.toml` is a\n[TOML](https://github.com/toml-lang/toml) file. It contains separate sections for\ndifferent tools. _Black_ is using the `[tool.black]` section. The option keys are the\nsame as long names of options on the command line.\n\nNote that you have to use single-quoted strings in TOML for regular expressions. It's\nthe equivalent of r-strings in Python. Multiline strings are treated as verbose regular\nexpressions by Black. Use `[ ]` to denote a significant space character.\n\n<details>\n<summary>Example `pyproject.toml`</summary>\n\n```toml\n[tool.black]\nline-length = 88\ntarget-version = ['py37']\ninclude = '\\.pyi?$'\nexclude = '''\n\n(\n  /(\n      \\.eggs         # exclude a few common directories in the\n    | \\.git          # root of the project\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n  )/\n  | foo.py           # also separately exclude a file named foo.py in\n                     # the root of the project\n)\n'''\n```\n\n</details>\n\n### Lookup hierarchy\n\nCommand-line options have defaults that you can see in `--help`. A `pyproject.toml` can\noverride those defaults. Finally, options provided by the user on the command line\noverride both.\n\n_Black_ will only ever use one `pyproject.toml` file during an entire run. It doesn't\nlook for multiple files, and doesn't compose configuration from different levels of the\nfile hierarchy.\n\n## Editor integration\n\n### Emacs\n\nUse [proofit404/blacken](https://github.com/proofit404/blacken) or\n[Elpy](https://github.com/jorgenschaefer/elpy).\n\n### PyCharm/IntelliJ IDEA\n\n1. Install `black`.\n\n```console\n$ pip install black\n```\n\n2. Locate your `black` installation folder.\n\nOn macOS / Linux / BSD:\n\n```console\n$ which black\n/usr/local/bin/black  # possible location\n```\n\nOn Windows:\n\n```console\n$ where black\n%LocalAppData%\\Programs\\Python\\Python36-32\\Scripts\\black.exe  # possible location\n```\n\n3. Open External tools in PyCharm/IntelliJ IDEA\n\nOn macOS:\n\n`PyCharm -> Preferences -> Tools -> External Tools`\n\nOn Windows / Linux / BSD:\n\n`File -> Settings -> Tools -> External Tools`\n\n4. Click the + icon to add a new external tool with the following values:\n\n   - Name: Black\n   - Description: Black is the uncompromising Python code formatter.\n   - Program: <install_location_from_step_2>\n   - Arguments: `\"$FilePath$\"`\n\n5. Format the currently opened file by selecting `Tools -> External Tools -> black`.\n\n   - Alternatively, you can set a keyboard shortcut by navigating to\n     `Preferences or Settings -> Keymap -> External Tools -> External Tools - Black`.\n\n6. Optionally, run _Black_ on every file save:\n\n   1. Make sure you have the\n      [File Watcher](https://plugins.jetbrains.com/plugin/7177-file-watchers) plugin\n      installed.\n   2. Go to `Preferences or Settings -> Tools -> File Watchers` and click `+` to add a\n      new watcher:\n      - Name: Black\n      - File type: Python\n      - Scope: Project Files\n      - Program: <install_location_from_step_2>\n      - Arguments: `$FilePath$`\n      - Output paths to refresh: `$FilePath$`\n      - Working directory: `$ProjectFileDir$`\n\n   - Uncheck \"Auto-save edited files to trigger the watcher\"\n\n### Wing IDE\n\nWing supports black via the OS Commands tool, as explained in the Wing documentation on\n[pep8 formatting](https://wingware.com/doc/edit/pep8). The detailed procedure is:\n\n1. Install `black`.\n\n```console\n$ pip install black\n```\n\n2. Make sure it runs from the command line, e.g.\n\n```console\n$ black --help\n```\n\n3. In Wing IDE, activate the **OS Commands** panel and define the command **black** to\n   execute black on the currently selected file:\n\n- Use the Tools -> OS Commands menu selection\n- click on **+** in **OS Commands** -> New: Command line..\n  - Title: black\n  - Command Line: black %s\n  - I/O Encoding: Use Default\n  - Key Binding: F1\n  - [x] Raise OS Commands when executed\n  - [x] Auto-save files before execution\n  - [x] Line mode\n\n4. Select a file in the editor and press **F1** , or whatever key binding you selected\n   in step 3, to reformat the file.\n\n### Vim\n\nCommands and shortcuts:\n\n- `:Black` to format the entire file (ranges not supported);\n- `:BlackUpgrade` to upgrade _Black_ inside the virtualenv;\n- `:BlackVersion` to get the current version of _Black_ inside the virtualenv.\n\nConfiguration:\n\n- `g:black_fast` (defaults to `0`)\n- `g:black_linelength` (defaults to `88`)\n- `g:black_skip_string_normalization` (defaults to `0`)\n- `g:black_virtualenv` (defaults to `~/.vim/black` or `~/.local/share/nvim/black`)\n\nTo install with [vim-plug](https://github.com/junegunn/vim-plug):\n\n```\nPlug 'psf/black'\n```\n\nor with [Vundle](https://github.com/VundleVim/Vundle.vim):\n\n```\nPlugin 'psf/black'\n```\n\nor you can copy the plugin from\n[plugin/black.vim](https://github.com/psf/black/tree/master/plugin/black.vim).\n\n```\nmkdir -p ~/.vim/pack/python/start/black/plugin\ncurl https://raw.githubusercontent.com/psf/black/master/plugin/black.vim -o ~/.vim/pack/python/start/black/plugin/black.vim\n```\n\nLet me know if this requires any changes to work with Vim 8's builtin `packadd`, or\nPathogen, and so on.\n\nThis plugin **requires Vim 7.0+ built with Python 3.6+ support**. It needs Python 3.6 to\nbe able to run _Black_ inside the Vim process which is much faster than calling an\nexternal command.\n\nOn first run, the plugin creates its own virtualenv using the right Python version and\nautomatically installs _Black_. You can upgrade it later by calling `:BlackUpgrade` and\nrestarting Vim.\n\nIf you need to do anything special to make your virtualenv work and install _Black_ (for\nexample you want to run a version from master), create a virtualenv manually and point\n`g:black_virtualenv` to it. The plugin will use it.\n\nTo run _Black_ on save, add the following line to `.vimrc` or `init.vim`:\n\n```\nautocmd BufWritePre *.py execute ':Black'\n```\n\nTo run _Black_ on a key press (e.g. F9 below), add this:\n\n```\nnnoremap <F9> :Black<CR>\n```\n\n**How to get Vim with Python 3.6?** On Ubuntu 17.10 Vim comes with Python 3.6 by\ndefault. On macOS with Homebrew run: `brew install vim --with-python3`. When building\nVim from source, use: `./configure --enable-python3interp=yes`. There's many guides\nonline how to do this.\n\n### Visual Studio Code\n\nUse the\n[Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n([instructions](https://code.visualstudio.com/docs/python/editing#_formatting)).\n\n### SublimeText 3\n\nUse [sublack plugin](https://github.com/jgirardet/sublack).\n\n### Jupyter Notebook Magic\n\nUse [blackcellmagic](https://github.com/csurfer/blackcellmagic).\n\n### Python Language Server\n\nIf your editor supports the [Language Server Protocol](https://langserver.org/) (Atom,\nSublime Text, Visual Studio Code and many more), you can use the\n[Python Language Server](https://github.com/palantir/python-language-server) with the\n[pyls-black](https://github.com/rupert/pyls-black) plugin.\n\n### Atom/Nuclide\n\nUse [python-black](https://atom.io/packages/python-black).\n\n### Kakoune\n\nAdd the following hook to your kakrc, then run black with `:format`.\n\n```\nhook global WinSetOption filetype=python %{\n    set-option window formatcmd 'black -q  -'\n}\n```\n\n### Thonny\n\nUse [Thonny-black-code-format](https://github.com/Franccisco/thonny-black-code-format).\n\n### Other editors\n\nOther editors will require external contributions.\n\nPatches welcome! \u2728 \ud83c\udf70 \u2728\n\nAny tool that can pipe code through _Black_ using its stdio mode (just\n[use `-` as the file name](https://www.tldp.org/LDP/abs/html/special-chars.html#DASHREF2)).\nThe formatted code will be returned on stdout (unless `--check` was passed). _Black_\nwill still emit messages on stderr but that shouldn't affect your use case.\n\nThis can be used for example with PyCharm's or IntelliJ's\n[File Watchers](https://www.jetbrains.com/help/pycharm/file-watchers.html).\n\n## blackd\n\n`blackd` is a small HTTP server that exposes _Black_'s functionality over a simple\nprotocol. The main benefit of using it is to avoid paying the cost of starting up a new\n_Black_ process every time you want to blacken a file.\n\n### Usage\n\n`blackd` is not packaged alongside _Black_ by default because it has additional\ndependencies. You will need to do `pip install black[d]` to install it.\n\nYou can start the server on the default port, binding only to the local interface by\nrunning `blackd`. You will see a single line mentioning the server's version, and the\nhost and port it's listening on. `blackd` will then print an access log similar to most\nweb servers on standard output, merged with any exception traces caused by invalid\nformatting requests.\n\n`blackd` provides even less options than _Black_. You can see them by running\n`blackd --help`:\n\n```text\nUsage: blackd [OPTIONS]\n\nOptions:\n  --bind-host TEXT                Address to bind the server to.\n  --bind-port INTEGER             Port to listen on\n  --version                       Show the version and exit.\n  -h, --help                      Show this message and exit.\n```\n\nThere is no official blackd client tool (yet!). You can test that blackd is working\nusing `curl`:\n\n```\nblackd --bind-port 9090 &  # or let blackd choose a port\ncurl -s -XPOST \"localhost:9090\" -d \"print('valid')\"\n```\n\n### Protocol\n\n`blackd` only accepts `POST` requests at the `/` path. The body of the request should\ncontain the python source code to be formatted, encoded according to the `charset` field\nin the `Content-Type` request header. If no `charset` is specified, `blackd` assumes\n`UTF-8`.\n\nThere are a few HTTP headers that control how the source is formatted. These correspond\nto command line flags for _Black_. There is one exception to this: `X-Protocol-Version`\nwhich if present, should have the value `1`, otherwise the request is rejected with\n`HTTP 501` (Not Implemented).\n\nThe headers controlling how code is formatted are:\n\n- `X-Line-Length`: corresponds to the `--line-length` command line flag.\n- `X-Skip-String-Normalization`: corresponds to the `--skip-string-normalization`\n  command line flag. If present and its value is not the empty string, no string\n  normalization will be performed.\n- `X-Fast-Or-Safe`: if set to `fast`, `blackd` will act as _Black_ does when passed the\n  `--fast` command line flag.\n- `X-Python-Variant`: if set to `pyi`, `blackd` will act as _Black_ does when passed the\n  `--pyi` command line flag. Otherwise, its value must correspond to a Python version or\n  a set of comma-separated Python versions, optionally prefixed with `py`. For example,\n  to request code that is compatible with Python 3.5 and 3.6, set the header to\n  `py3.5,py3.6`.\n- `X-Diff`: corresponds to the `--diff` command line flag. If present, a diff of the\n  formats will be output.\n\nIf any of these headers are set to invalid values, `blackd` returns a `HTTP 400` error\nresponse, mentioning the name of the problematic header in the message body.\n\nApart from the above, `blackd` can produce the following response codes:\n\n- `HTTP 204`: If the input is already well-formatted. The response body is empty.\n- `HTTP 200`: If formatting was needed on the input. The response body contains the\n  blackened Python code, and the `Content-Type` header is set accordingly.\n- `HTTP 400`: If the input contains a syntax error. Details of the error are returned in\n  the response body.\n- `HTTP 500`: If there was any kind of error while trying to format the input. The\n  response body contains a textual representation of the error.\n\nThe response headers include a `X-Black-Version` header containing the version of\n_Black_.\n\n## Version control integration\n\nUse [pre-commit](https://pre-commit.com/). Once you\n[have it installed](https://pre-commit.com/#install), add this to the\n`.pre-commit-config.yaml` in your repository:\n\n```yaml\nrepos:\n  - repo: https://github.com/psf/black\n    rev: stable\n    hooks:\n      - id: black\n        language_version: python3.6\n```\n\nThen run `pre-commit install` and you're ready to go.\n\nAvoid using `args` in the hook. Instead, store necessary configuration in\n`pyproject.toml` so that editors and command-line usage of Black all behave consistently\nfor your project. See _Black_'s own [pyproject.toml](/pyproject.toml) for an example.\n\nIf you're already using Python 3.7, switch the `language_version` accordingly. Finally,\n`stable` is a tag that is pinned to the latest release on PyPI. If you'd rather run on\nmaster, this is also an option.\n\n## Ignoring unmodified files\n\n_Black_ remembers files it has already formatted, unless the `--diff` flag is used or\ncode is passed via standard input. This information is stored per-user. The exact\nlocation of the file depends on the _Black_ version and the system on which _Black_ is\nrun. The file is non-portable. The standard location on common operating systems is:\n\n- Windows:\n  `C:\\\\Users\\<username>\\AppData\\Local\\black\\black\\Cache\\<version>\\cache.<line-length>.<file-mode>.pickle`\n- macOS:\n  `/Users/<username>/Library/Caches/black/<version>/cache.<line-length>.<file-mode>.pickle`\n- Linux:\n  `/home/<username>/.cache/black/<version>/cache.<line-length>.<file-mode>.pickle`\n\n`file-mode` is an int flag that determines whether the file was formatted as 3.6+ only,\nas .pyi, and whether string normalization was omitted.\n\nTo override the location of these files on macOS or Linux, set the environment variable\n`XDG_CACHE_HOME` to your preferred location. For example, if you want to put the cache\nin the directory you're running _Black_ from, set `XDG_CACHE_HOME=.cache`. _Black_ will\nthen write the above files to `.cache/black/<version>/`.\n\n## Used by\n\nThe following notable open-source projects trust _Black_ with enforcing a consistent\ncode style: pytest, tox, Pyramid, Django Channels, Hypothesis, attrs, SQLAlchemy,\nPoetry, PyPA applications (Warehouse, Pipenv, virtualenv), pandas, Pillow, every Datadog\nAgent Integration, Home Assistant.\n\nAre we missing anyone? Let us know.\n\n## Testimonials\n\n**Dusty Phillips**,\n[writer](https://smile.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Daps&field-keywords=dusty+phillips):\n\n> _Black_ is opinionated so you don't have to be.\n\n**Hynek Schlawack**, [creator of `attrs`](https://www.attrs.org/), core developer of\nTwisted and CPython:\n\n> An auto-formatter that doesn't suck is all I want for Xmas!\n\n**Carl Meyer**, [Django](https://www.djangoproject.com/) core developer:\n\n> At least the name is good.\n\n**Kenneth Reitz**, creator of [`requests`](http://python-requests.org/) and\n[`pipenv`](https://docs.pipenv.org/):\n\n> This vastly improves the formatting of our code. Thanks a ton!\n\n## Show your style\n\nUse the badge in your project's README.md:\n\n```markdown\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n```\n\nUsing the badge in README.rst:\n\n```\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n```\n\nLooks like this:\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## License\n\nMIT\n\n## Contributing to _Black_\n\nIn terms of inspiration, _Black_ is about as configurable as _gofmt_. This is\ndeliberate.\n\nBug reports and fixes are always welcome! However, before you suggest a new feature or\nconfiguration knob, ask yourself why you want it. If it enables better integration with\nsome workflow, fixes an inconsistency, speeds things up, and so on - go for it! On the\nother hand, if your answer is \"because I don't like a particular formatting\" then you're\nnot ready to embrace _Black_ yet. Such changes are unlikely to get accepted. You can\nstill try but prepare to be disappointed.\n\nMore details can be found in [CONTRIBUTING](CONTRIBUTING.md).\n\n## Change Log\n\n### 19.10b0\n\n- added support for PEP 572 assignment expressions (#711)\n\n- added support for PEP 570 positional-only arguments (#943)\n\n- added support for async generators (#593)\n\n- added support for pre-splitting collections by putting an explicit trailing comma\n  inside (#826)\n\n- added `black -c` as a way to format code passed from the command line (#761)\n\n- --safe now works with Python 2 code (#840)\n\n- fixed grammar selection for Python 2-specific code (#765)\n\n- fixed feature detection for trailing commas in function definitions and call sites\n  (#763)\n\n- `# fmt: off`/`# fmt: on` comment pairs placed multiple times within the same block of\n  code now behave correctly (#1005)\n\n- _Black_ no longer crashes on Windows machines with more than 61 cores (#838)\n\n- _Black_ no longer crashes on standalone comments prepended with a backslash (#767)\n\n- _Black_ no longer crashes on `from` ... `import` blocks with comments (#829)\n\n- _Black_ no longer crashes on Python 3.7 on some platform configurations (#494)\n\n- _Black_ no longer fails on comments in from-imports (#671)\n\n- _Black_ no longer fails when the file starts with a backslash (#922)\n\n- _Black_ no longer merges regular comments with type comments (#1027)\n\n- _Black_ no longer splits long lines that contain type comments (#997)\n\n- removed unnecessary parentheses around `yield` expressions (#834)\n\n- added parentheses around long tuples in unpacking assignments (#832)\n\n- added parentheses around complex powers when they are prefixed by a unary operator\n  (#646)\n\n- fixed bug that led _Black_ format some code with a line length target of 1 (#762)\n\n- _Black_ no longer introduces quotes in f-string subexpressions on string boundaries\n  (#863)\n\n- if _Black_ puts parenthesis around a single expression, it moves comments to the\n  wrapped expression instead of after the brackets (#872)\n\n- `blackd` now returns the version of _Black_ in the response headers (#1013)\n\n- `blackd` can now output the diff of formats on source code when the `X-Diff` header is\n  provided (#969)\n\n### 19.3b0\n\n- new option `--target-version` to control which Python versions _Black_-formatted code\n  should target (#618)\n\n- deprecated `--py36` (use `--target-version=py36` instead) (#724)\n\n- _Black_ no longer normalizes numeric literals to include `_` separators (#696)\n\n- long `del` statements are now split into multiple lines (#698)\n\n- type comments are no longer mangled in function signatures\n\n- improved performance of formatting deeply nested data structures (#509)\n\n- _Black_ now properly formats multiple files in parallel on Windows (#632)\n\n- _Black_ now creates cache files atomically which allows it to be used in parallel\n  pipelines (like `xargs -P8`) (#673)\n\n- _Black_ now correctly indents comments in files that were previously formatted with\n  tabs (#262)\n\n- `blackd` now supports CORS (#622)\n\n### 18.9b0\n\n- numeric literals are now formatted by _Black_ (#452, #461, #464, #469):\n\n  - numeric literals are normalized to include `_` separators on Python 3.6+ code\n\n  - added `--skip-numeric-underscore-normalization` to disable the above behavior and\n    leave numeric underscores as they were in the input\n\n  - code with `_` in numeric literals is recognized as Python 3.6+\n\n  - most letters in numeric literals are lowercased (e.g., in `1e10`, `0x01`)\n\n  - hexadecimal digits are always uppercased (e.g. `0xBADC0DE`)\n\n- added `blackd`, see [its documentation](#blackd) for more info (#349)\n\n- adjacent string literals are now correctly split into multiple lines (#463)\n\n- trailing comma is now added to single imports that don't fit on a line (#250)\n\n- cache is now populated when `--check` is successful for a file which speeds up\n  consecutive checks of properly formatted unmodified files (#448)\n\n- whitespace at the beginning of the file is now removed (#399)\n\n- fixed mangling [pweave](http://mpastell.com/pweave/) and\n  [Spyder IDE](https://pythonhosted.org/spyder/) special comments (#532)\n\n- fixed unstable formatting when unpacking big tuples (#267)\n\n- fixed parsing of `__future__` imports with renames (#389)\n\n- fixed scope of `# fmt: off` when directly preceding `yield` and other nodes (#385)\n\n- fixed formatting of lambda expressions with default arguments (#468)\n\n- fixed `async for` statements: _Black_ no longer breaks them into separate lines (#372)\n\n- note: the Vim plugin stopped registering `,=` as a default chord as it turned out to\n  be a bad idea (#415)\n\n### 18.6b4\n\n- hotfix: don't freeze when multiple comments directly precede `# fmt: off` (#371)\n\n### 18.6b3\n\n- typing stub files (`.pyi`) now have blank lines added after constants (#340)\n\n- `# fmt: off` and `# fmt: on` are now much more dependable:\n\n  - they now work also within bracket pairs (#329)\n\n  - they now correctly work across function/class boundaries (#335)\n\n  - they now work when an indentation block starts with empty lines or misaligned\n    comments (#334)\n\n- made Click not fail on invalid environments; note that Click is right but the\n  likelihood we'll need to access non-ASCII file paths when dealing with Python source\n  code is low (#277)\n\n- fixed improper formatting of f-strings with quotes inside interpolated expressions\n  (#322)\n\n- fixed unnecessary slowdown when long list literals where found in a file\n\n- fixed unnecessary slowdown on AST nodes with very many siblings\n\n- fixed cannibalizing backslashes during string normalization\n\n- fixed a crash due to symbolic links pointing outside of the project directory (#338)\n\n### 18.6b2\n\n- added `--config` (#65)\n\n- added `-h` equivalent to `--help` (#316)\n\n- fixed improper unmodified file caching when `-S` was used\n\n- fixed extra space in string unpacking (#305)\n\n- fixed formatting of empty triple quoted strings (#313)\n\n- fixed unnecessary slowdown in comment placement calculation on lines without comments\n\n### 18.6b1\n\n- hotfix: don't output human-facing information on stdout (#299)\n\n- hotfix: don't output cake emoji on non-zero return code (#300)\n\n### 18.6b0\n\n- added `--include` and `--exclude` (#270)\n\n- added `--skip-string-normalization` (#118)\n\n- added `--verbose` (#283)\n\n- the header output in `--diff` now actually conforms to the unified diff spec\n\n- fixed long trivial assignments being wrapped in unnecessary parentheses (#273)\n\n- fixed unnecessary parentheses when a line contained multiline strings (#232)\n\n- fixed stdin handling not working correctly if an old version of Click was used (#276)\n\n- _Black_ now preserves line endings when formatting a file in place (#258)\n\n### 18.5b1\n\n- added `--pyi` (#249)\n\n- added `--py36` (#249)\n\n- Python grammar pickle caches are stored with the formatting caches, making _Black_\n  work in environments where site-packages is not user-writable (#192)\n\n- _Black_ now enforces a PEP 257 empty line after a class-level docstring (and/or\n  fields) and the first method\n\n- fixed invalid code produced when standalone comments were present in a trailer that\n  was omitted from line splitting on a large expression (#237)\n\n- fixed optional parentheses being removed within `# fmt: off` sections (#224)\n\n- fixed invalid code produced when stars in very long imports were incorrectly wrapped\n  in optional parentheses (#234)\n\n- fixed unstable formatting when inline comments were moved around in a trailer that was\n  omitted from line splitting on a large expression (#238)\n\n- fixed extra empty line between a class declaration and the first method if no class\n  docstring or fields are present (#219)\n\n- fixed extra empty line between a function signature and an inner function or inner\n  class (#196)\n\n### 18.5b0\n\n- call chains are now formatted according to the\n  [fluent interfaces](https://en.wikipedia.org/wiki/Fluent_interface) style (#67)\n\n- data structure literals (tuples, lists, dictionaries, and sets) are now also always\n  exploded like imports when they don't fit in a single line (#152)\n\n- slices are now formatted according to PEP 8 (#178)\n\n- parentheses are now also managed automatically on the right-hand side of assignments\n  and return statements (#140)\n\n- math operators now use their respective priorities for delimiting multiline\n  expressions (#148)\n\n- optional parentheses are now omitted on expressions that start or end with a bracket\n  and only contain a single operator (#177)\n\n- empty parentheses in a class definition are now removed (#145, #180)\n\n- string prefixes are now standardized to lowercase and `u` is removed on Python 3.6+\n  only code and Python 2.7+ code with the `unicode_literals` future import (#188, #198,\n  #199)\n\n- typing stub files (`.pyi`) are now formatted in a style that is consistent with PEP\n  484 (#207, #210)\n\n- progress when reformatting many files is now reported incrementally\n\n- fixed trailers (content with brackets) being unnecessarily exploded into their own\n  lines after a dedented closing bracket (#119)\n\n- fixed an invalid trailing comma sometimes left in imports (#185)\n\n- fixed non-deterministic formatting when multiple pairs of removable parentheses were\n  used (#183)\n\n- fixed multiline strings being unnecessarily wrapped in optional parentheses in long\n  assignments (#215)\n\n- fixed not splitting long from-imports with only a single name\n\n- fixed Python 3.6+ file discovery by also looking at function calls with unpacking.\n  This fixed non-deterministic formatting if trailing commas where used both in function\n  signatures with stars and function calls with stars but the former would be\n  reformatted to a single line.\n\n- fixed crash on dealing with optional parentheses (#193)\n\n- fixed \"is\", \"is not\", \"in\", and \"not in\" not considered operators for splitting\n  purposes\n\n- fixed crash when dead symlinks where encountered\n\n### 18.4a4\n\n- don't populate the cache on `--check` (#175)\n\n### 18.4a3\n\n- added a \"cache\"; files already reformatted that haven't changed on disk won't be\n  reformatted again (#109)\n\n- `--check` and `--diff` are no longer mutually exclusive (#149)\n\n- generalized star expression handling, including double stars; this fixes\n  multiplication making expressions \"unsafe\" for trailing commas (#132)\n\n- _Black_ no longer enforces putting empty lines behind control flow statements (#90)\n\n- _Black_ now splits imports like \"Mode 3 + trailing comma\" of isort (#127)\n\n- fixed comment indentation when a standalone comment closes a block (#16, #32)\n\n- fixed standalone comments receiving extra empty lines if immediately preceding a\n  class, def, or decorator (#56, #154)\n\n- fixed `--diff` not showing entire path (#130)\n\n- fixed parsing of complex expressions after star and double stars in function calls\n  (#2)\n\n- fixed invalid splitting on comma in lambda arguments (#133)\n\n- fixed missing splits of ternary expressions (#141)\n\n### 18.4a2\n\n- fixed parsing of unaligned standalone comments (#99, #112)\n\n- fixed placement of dictionary unpacking inside dictionary literals (#111)\n\n- Vim plugin now works on Windows, too\n\n- fixed unstable formatting when encountering unnecessarily escaped quotes in a string\n  (#120)\n\n### 18.4a1\n\n- added `--quiet` (#78)\n\n- added automatic parentheses management (#4)\n\n- added [pre-commit](https://pre-commit.com) integration (#103, #104)\n\n- fixed reporting on `--check` with multiple files (#101, #102)\n\n- fixed removing backslash escapes from raw strings (#100, #105)\n\n### 18.4a0\n\n- added `--diff` (#87)\n\n- add line breaks before all delimiters, except in cases like commas, to better comply\n  with PEP 8 (#73)\n\n- standardize string literals to use double quotes (almost) everywhere (#75)\n\n- fixed handling of standalone comments within nested bracketed expressions; _Black_\n  will no longer produce super long lines or put all standalone comments at the end of\n  the expression (#22)\n\n- fixed 18.3a4 regression: don't crash and burn on empty lines with trailing whitespace\n  (#80)\n\n- fixed 18.3a4 regression: `# yapf: disable` usage as trailing comment would cause\n  _Black_ to not emit the rest of the file (#95)\n\n- when CTRL+C is pressed while formatting many files, _Black_ no longer freaks out with\n  a flurry of asyncio-related exceptions\n\n- only allow up to two empty lines on module level and only single empty lines within\n  functions (#74)\n\n### 18.3a4\n\n- `# fmt: off` and `# fmt: on` are implemented (#5)\n\n- automatic detection of deprecated Python 2 forms of print statements and exec\n  statements in the formatted file (#49)\n\n- use proper spaces for complex expressions in default values of typed function\n  arguments (#60)\n\n- only return exit code 1 when --check is used (#50)\n\n- don't remove single trailing commas from square bracket indexing (#59)\n\n- don't omit whitespace if the previous factor leaf wasn't a math operator (#55)\n\n- omit extra space in kwarg unpacking if it's the first argument (#46)\n\n- omit extra space in\n  [Sphinx auto-attribute comments](http://www.sphinx-doc.org/en/stable/ext/autodoc.html#directive-autoattribute)\n  (#68)\n\n### 18.3a3\n\n- don't remove single empty lines outside of bracketed expressions (#19)\n\n- added ability to pipe formatting from stdin to stdin (#25)\n\n- restored ability to format code with legacy usage of `async` as a name (#20, #42)\n\n- even better handling of numpy-style array indexing (#33, again)\n\n### 18.3a2\n\n- changed positioning of binary operators to occur at beginning of lines instead of at\n  the end, following\n  [a recent change to PEP 8](https://github.com/python/peps/commit/c59c4376ad233a62ca4b3a6060c81368bd21e85b)\n  (#21)\n\n- ignore empty bracket pairs while splitting. This avoids very weirdly looking\n  formattings (#34, #35)\n\n- remove a trailing comma if there is a single argument to a call\n\n- if top level functions were separated by a comment, don't put four empty lines after\n  the upper function\n\n- fixed unstable formatting of newlines with imports\n\n- fixed unintentional folding of post scriptum standalone comments into last statement\n  if it was a simple statement (#18, #28)\n\n- fixed missing space in numpy-style array indexing (#33)\n\n- fixed spurious space after star-based unary expressions (#31)\n\n### 18.3a1\n\n- added `--check`\n\n- only put trailing commas in function signatures and calls if it's safe to do so. If\n  the file is Python 3.6+ it's always safe, otherwise only safe if there are no `*args`\n  or `**kwargs` used in the signature or call. (#8)\n\n- fixed invalid spacing of dots in relative imports (#6, #13)\n\n- fixed invalid splitting after comma on unpacked variables in for-loops (#23)\n\n- fixed spurious space in parenthesized set expressions (#7)\n\n- fixed spurious space after opening parentheses and in default arguments (#14, #17)\n\n- fixed spurious space after unary operators when the operand was a complex expression\n  (#15)\n\n### 18.3a0\n\n- first published version, Happy \ud83c\udf70 Day 2018!\n\n- alpha quality\n\n- date-versioned (see: https://calver.org/)\n\n## Authors\n\nGlued together by [\u0141ukasz Langa](mailto:lukasz@langa.pl).\n\nMaintained with [Carol Willing](mailto:carolcode@willingconsulting.com),\n[Carl Meyer](mailto:carl@oddbird.net),\n[Jelle Zijlstra](mailto:jelle.zijlstra@gmail.com),\n[Mika Naylor](mailto:mail@autophagy.io), and\n[Zsolt Dollenstein](mailto:zsol.zsol@gmail.com).\n\nMultiple contributions by:\n\n- [Abdur-Rahmaan Janhangeer](mailto:cryptolabour@gmail.com)\n- [Adam Johnson](mailto:me@adamj.eu)\n- [Alexander Huynh](mailto:github@grande.coffee)\n- [Andrew Thorp](mailto:andrew.thorp.dev@gmail.com)\n- [Andrey](mailto:dyuuus@yandex.ru)\n- [Andy Freeland](mailto:andy@andyfreeland.net)\n- [Anthony Sottile](mailto:asottile@umich.edu)\n- [Arjaan Buijk](mailto:arjaan.buijk@gmail.com)\n- [Artem Malyshev](mailto:proofit404@gmail.com)\n- [Asger Hautop Drewsen](mailto:asgerdrewsen@gmail.com)\n- [Augie Fackler](mailto:raf@durin42.com)\n- [Aviskar KC](mailto:aviskarkc10@gmail.com)\n- [Benjamin Woodruff](mailto:github@benjam.info)\n- [Brandt Bucher](mailto:brandtbucher@gmail.com)\n- Charles Reid\n- [Christian Heimes](mailto:christian@python.org)\n- [Chuck Wooters](mailto:chuck.wooters@microsoft.com)\n- [Daniel Hahler](mailto:github@thequod.de)\n- [Daniel M. Capella](mailto:polycitizen@gmail.com)\n- Daniele Esposti\n- dylanjblack\n- [Eli Treuherz](mailto:eli@treuherz.com)\n- [Florent Thiery](mailto:fthiery@gmail.com)\n- hauntsaninja\n- Hugo van Kemenade\n- [Ivan Katani\u0107](mailto:ivan.katanic@gmail.com)\n- [Jason Fried](mailto:me@jasonfried.info)\n- [jgirardet](mailto:ijkl@netc.fr)\n- [Joe Antonakakis](mailto:jma353@cornell.edu)\n- [Jon Dufresne](mailto:jon.dufresne@gmail.com)\n- [Jonas Obrist](mailto:ojiidotch@gmail.com)\n- [Josh Bode](mailto:joshbode@fastmail.com)\n- [Juan Luis Cano Rodr\u00edguez](mailto:hello@juanlu.space)\n- [Katie McLaughlin](mailto:katie@glasnt.com)\n- Lawrence Chan\n- [Linus Groh](mailto:mail@linusgroh.de)\n- [Luka Sterbic](mailto:luka.sterbic@gmail.com)\n- Mariatta\n- [Matt VanEseltine](mailto:vaneseltine@gmail.com)\n- [Michael Flaxman](mailto:michael.flaxman@gmail.com)\n- [Michael J. Sullivan](mailto:sully@msully.net)\n- [Michael McClimon](mailto:michael@mcclimon.org)\n- [Miguel Gaiowski](mailto:miggaiowski@gmail.com)\n- [Mike](mailto:roshi@fedoraproject.org)\n- [Min ho Kim](mailto:minho42@gmail.com)\n- [Miroslav Shubernetskiy](mailto:miroslav@miki725.com)\n- [Neraste](mailto:neraste.herr10@gmail.com)\n- [Ofek Lev](mailto:ofekmeister@gmail.com)\n- [Osaetin Daniel](mailto:osaetindaniel@gmail.com)\n- [Pablo Galindo](mailto:Pablogsal@gmail.com)\n- [Peter Bengtsson](mailto:mail@peterbe.com)\n- pmacosta\n- [Rishikesh Jha](mailto:rishijha424@gmail.com)\n- [Stavros Korokithakis](mailto:hi@stavros.io)\n- [Stephen Rosen](mailto:sirosen@globus.org)\n- [Sunil Kapil](mailto:snlkapil@gmail.com)\n- [Thom Lu](mailto:thomas.c.lu@gmail.com)\n- [Tom Christie](mailto:tom@tomchristie.com)\n- [Tzu-ping Chung](mailto:uranusjr@gmail.com)\n- [Utsav Shah](mailto:ukshah2@illinois.edu)\n- vezeli\n- [Vishwas B Sharma](mailto:sharma.vishwas88@gmail.com)\n- [Yngve H\u00f8iseth](mailto:yngve@hoiseth.net)\n- [Yurii Karabas](mailto:1998uriyyo@gmail.com)\n"}, {"repo": "checkstyle/checkstyle", "language": "Java", "readme_contents": "[![][travis img]][travis]\n[![][appveyor img]][appveyor]\n[![][teamcity img]][teamcity]\n[![][circleci img]][circleci]\n[![][wercker img]][wercker]\n[![][shippable img]][shippable]\n[![][coverage img]][coverage]\n[![][snyk img]][snyk]\n\n[![][codeship img]][codeship]\n[![][buddy img]][buddy]\n\n[![][mavenbadge img]][mavenbadge]\n[![][sonar img]][sonar]\n\nMembers chat: [![][gitter_mem img]][gitter_mem]\nContributors chat: [![][gitter_con img]][gitter_con]\n\n![](https://raw.githubusercontent.com/checkstyle/resources/master/img/checkstyle-logos/checkstyle-logo-260x99.png)\n\n\nCheckstyle is a tool for checking Java source code for adherence to a Code Standard\nor set of validation rules (best practices).\n\nThe latest release version can be found at\n[GitHub releases](https://github.com/checkstyle/checkstyle/releases/)\nor at [Maven repo](http://repo1.maven.org/maven2/com/puppycrawl/tools/checkstyle/).\n\nEach-commit builds of maven artifacts can be found at\n[Maven Snapshot repository](https://oss.sonatype.org/content/repositories/snapshots/com/puppycrawl/tools/checkstyle/) .\n\nDocumentation is available in HTML format, see https://checkstyle.org/checks.html.\n\nBuild instructions and Contribution\n======================\n\n[Build instructions](https://checkstyle.org/contributing.html#Build)\n\n[Setup IDE for development](https://checkstyle.org/beginning_development.html)\n\n[Explanation on how to create your own module](https://checkstyle.org/extending.html)\n\n[Verification of code quality](https://checkstyle.org/contributing.html#Quality_matters)\n\n[Sending Pull Request](https://checkstyle.org/contributing.html#Submitting_your_contribution)\n\n[Report Issue](https://checkstyle.org/contributing.html#Report_an_issue)\n\nContinuous integration and Quality reports\n======================\nTravis (Linux & MacOS build): [![][travis img]][travis]\nAppVeyor (Windows build): [![][appveyor img]][appveyor]\n\nQuality reports: https://checkstyle.org/project-reports.html\n\nJavaScript, CSS and Java source file analysis on Codacy: [![][codacy img]][codacy]\n\nFeedback/Support\n========\n\nPlease send any feedback to https://groups.google.com/forum/?hl=en#!forum/checkstyle\n\nQuestions and Answers from community: [![][stackoverflow img]][stackoverflow]\n\nBugs and Feature requests (not the questions): https://github.com/checkstyle/checkstyle/issues\n\n\nSupport/Sponsor checkstyle\n========\n\nIf you want to speed up fixing of issue and want to encourage somebody in\ninternet to resolve any issue:\n[![][bountysource img]][bountysource]\n[![][salt.bountysource img]][salt.bountysource]\n[![][flattr img]][flattr]\n[![][liberapay img]][liberapay]\n[![][backers.opencollective img]][backers.opencollective]\n[![][sponsors.opencollective img]][sponsors.opencollective]\n\n\nLicensing\n=========\n\n[![][license img]][license]\n\nThis software is licensed under the terms in the file named \"LICENSE\" in this\ndirectory.\n\nThe software uses the ANTLR package (https://www.antlr.org/). Its license terms\nare in the file named \"RIGHTS.antlr\" in this directory.\n\nThis product includes software developed by\nThe Apache Software Foundation (http://www.apache.org/).\n\nThe software uses the Logging and Beanutils packages from the\nApache Commons project (http://commons.apache.org/). The license terms\nof these packages are in the file named \"LICENSE.apache20\" in this\ndirectory.\n\nThe software uses the Google Guava Libraries\n(https://github.com/google/guava/). The license terms of\nthese packages are in the file named \"LICENSE.apache20\" in this\ndirectory.\n\nThe software uses the Picocli Library\n(https://github.com/remkop/picocli/). Its license terms\nare in the file named \"LICENSE.apache20\" in this directory.\n\n[travis]:https://travis-ci.org/checkstyle/checkstyle/builds\n[travis img]:https://travis-ci.org/checkstyle/checkstyle.svg\n\n[appveyor]:https://ci.appveyor.com/project/checkstyle/checkstyle/history\n[appveyor img]:https://ci.appveyor.com/api/projects/status/rw6bw3dl9kph6ucc?svg=true\n\n[sonar]:https://sonarcloud.io/dashboard?id=com.puppycrawl.tools%3Acheckstyle\n[sonar img]:https://sonarcloud.io/api/project_badges/measure?project=com.puppycrawl.tools%3Acheckstyle&metric=sqale_index\n\n[codacy]:https://www.codacy.com/app/checkstyle/checkstyle\n[codacy img]:https://api.codacy.com/project/badge/3adf12d434314ba8b38277ea46d3c44b\n\n[coverage]:https://codecov.io/github/checkstyle/checkstyle?branch=master\n[coverage img]:https://codecov.io/github/checkstyle/checkstyle/coverage.svg?branch=master\n\n[license]:LICENSE\n[license img]:https://img.shields.io/badge/license-GNU%20LGPL%20v2.1-blue.svg\n\n[mavenbadge]:https://search.maven.org/search?q=g:%22com.puppycrawl.tools%22%20AND%20a:%22checkstyle%22\n[mavenbadge img]:https://img.shields.io/maven-central/v/com.puppycrawl.tools/checkstyle.svg?label=Maven%20Central\n\n[gitter_mem]:https://gitter.im/checkstyle\n[gitter_mem img]:https://img.shields.io/badge/gitter-JOIN%20CHAT-blue.svg\n\n[gitter_con]:https://gitter.im/checkstyle/checkstyle\n[gitter_con img]:https://badges.gitter.im/Join%20Chat.svg\n\n[stackoverflow]:https://stackoverflow.com/questions/tagged/checkstyle\n[stackoverflow img]:https://img.shields.io/badge/stackoverflow-CHECKSTYLE-blue.svg\n\n[teamcity]:https://teamcity.jetbrains.com/viewType.html?buildTypeId=Checkstyle_IdeaInspectionsMaster\n[teamcity img]:https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:Checkstyle_IdeaInspectionsMaster)/statusIcon\n\n[codeship]: https://codeship.com/projects/124310\n[codeship img]:https://codeship.com/projects/67b814a0-8fee-0133-9b59-02a170289b8c/status?branch=master\n\n[circleci]: https://circleci.com/gh/checkstyle/checkstyle/tree/master\n[circleci img]: https://circleci.com/gh/checkstyle/checkstyle/tree/master.svg?style=svg\n\n[wercker]: https://app.wercker.com/project/bykey/cd383127330ff96f89f1a78e8fd1a557\n[wercker img]: https://app.wercker.com/status/cd383127330ff96f89f1a78e8fd1a557/s/master\n\n[shippable]: https://app.shippable.com/projects/577032be3be4f4faa56adb38\n[shippable img]: https://img.shields.io/shippable/577032be3be4f4faa56adb38/master.svg?label=shippable\n\n[buddy]: https://app.buddy.works/ivanovjr/checkstyle/pipelines/pipeline/135806\n[buddy img]: https://app.buddy.works/ivanovjr/checkstyle/pipelines/pipeline/135806/badge.svg?token=240176b1ce495d0a03a141f3f2f77971f43fe892a98de31cbc0e392ce5341f76 \"buddy pipeline\"\n\n[snyk]: https://snyk.io/test/github/checkstyle/checkstyle?targetFile=pom.xml\n[snyk img]: https://snyk.io/test/github/checkstyle/checkstyle/badge.svg\n\n[flattr]:https://flattr.com/submit/auto?fid=g39d10&amp;url=https%3A%2F%2Fcheckstyle.org\n[flattr img]:https://button.flattr.com/flattr-badge-large.png\n\n[liberapay]:https://liberapay.com/checkstyle/\n[liberapay img]:https://liberapay.com/assets/widgets/donate.svg\n\n[bountysource]:https://www.bountysource.com/teams/checkstyle/issues\n[bountysource img]:https://api.bountysource.com/badge/team?team_id=3568&style=bounties_posted\n\n[salt.bountysource]:https://salt.bountysource.com/teams/checkstyle\n[salt.bountysource img]:https://img.shields.io/bountysource/team/checkstyle/activity.svg?label=salt.bountysource\n\n[backers.opencollective]:https://opencollective.com/checkstyle/\n[backers.opencollective img]:https://opencollective.com/checkstyle/backers/badge.svg\n\n[sponsors.opencollective]:https://opencollective.com/checkstyle/\n[sponsors.opencollective img]:https://opencollective.com/checkstyle/sponsors/badge.svg\n"}, {"repo": "rubocop-hq/rubocop", "language": "Ruby", "readme_contents": "[![Gem Version](https://badge.fury.io/rb/rubocop.svg)](https://badge.fury.io/rb/rubocop)\n[![CircleCI Status](https://circleci.com/gh/rubocop-hq/rubocop/tree/master.svg?style=svg)](https://circleci.com/gh/rubocop-hq/rubocop/tree/master)\n[![AppVeyor Status](https://ci.appveyor.com/api/projects/status/sj3ye7n5690d0nvg?svg=true)](https://ci.appveyor.com/project/bbatsov/rubocop)\n[![Coverage Status](https://api.codeclimate.com/v1/badges/ad6e76460499c8c99697/test_coverage)](https://codeclimate.com/github/bbatsov/rubocop)\n[![Code Climate](https://codeclimate.com/github/bbatsov/rubocop/badges/gpa.svg)](https://codeclimate.com/github/bbatsov/rubocop)\n[![Inline docs](https://inch-ci.org/github/bbatsov/rubocop.svg)](https://inch-ci.org/github/bbatsov/rubocop)\n[![SemVer](https://api.dependabot.com/badges/compatibility_score?dependency-name=rubocop&package-manager=bundler&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=rubocop&package-manager=bundler&version-scheme=semver)\n\n[![Patreon](https://img.shields.io/badge/patreon-donate-orange.svg)](https://www.patreon.com/bbatsov)\n[![OpenCollective](https://opencollective.com/rubocop/backers/badge.svg)](#open-collective-backers)\n[![OpenCollective](https://opencollective.com/rubocop/sponsors/badge.svg)](#open-collective-sponsors)\n[![Tidelift](https://tidelift.com/badges/package/rubygems/rubocop)](https://tidelift.com/subscription/pkg/rubygems-rubocop?utm_source=rubygems-rubocop&utm_medium=referral&utm_campaign=readme)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/rubocop-hq/rubocop/master/logo/rubo-logo-horizontal.png\" alt=\"RuboCop Logo\"/>\n</p>\n\n> Role models are important. <br/>\n> -- Officer Alex J. Murphy / RoboCop\n\n**RuboCop** is a Ruby static code analyzer and code formatter. Out of\nthe box it will enforce many of the guidelines outlined in the\ncommunity [Ruby Style\nGuide](https://rubystyle.guide).\n\nRuboCop is extremely flexible and most aspects of its behavior can be tweaked via various\n[configuration options](https://github.com/rubocop-hq/rubocop/blob/master/config/default.yml).\n\nApart from reporting problems in your code, RuboCop can also\nautomatically fix some of the problems for you.\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/bbatsov/rubocop?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n**Please consider [financially supporting its ongoing development](#funding).**\n\n## Installation\n\n**RuboCop**'s installation is pretty standard:\n\n```sh\n$ gem install rubocop\n```\n\nIf you'd rather install RuboCop using `bundler`, don't require it in your `Gemfile`:\n\n```rb\ngem 'rubocop', require: false\n```\n\nRuboCop's development is moving at a very rapid pace and there are\noften backward-incompatible changes between minor releases (since we\nhaven't reached version 1.0 yet). To prevent an unwanted RuboCop update you\nmight want to use a conservative version lock in your `Gemfile`:\n\n```rb\ngem 'rubocop', '~> 0.77.0', require: false\n```\n\n## Quickstart\n\nJust type `rubocop` in a Ruby project's folder and watch the magic happen.\n\n```\n$ cd my/cool/ruby/project\n$ rubocop\n```\n\n## Documentation\n\nYou can read a lot more about RuboCop in its [official docs](https://docs.rubocop.org).\n\n## Compatibility\n\nRuboCop supports the following Ruby implementations:\n\n* MRI 2.3+\n* JRuby 9.2+\n\n## Team\n\nHere's a list of RuboCop's core developers:\n\n* [Bozhidar Batsov](https://github.com/bbatsov) (author & head maintainer)\n* [Jonas Arvidsson](https://github.com/jonas054)\n* [Yuji Nakayama](https://github.com/yujinakayama) (retired)\n* [Evgeni Dzhelyov](https://github.com/edzhelyov) (retired)\n* [Ted Johansson](https://github.com/drenmi)\n* [Masataka Kuwabara](https://github.com/pocke)\n* [Koichi Ito](https://github.com/koic)\n* [Maxim Krizhanovski](https://github.com/darhazer)\n\n## Logo\n\nRuboCop's logo was created by [Dimiter Petrov](https://www.chadomoto.com/). You can find the logo in various\nformats [here](https://github.com/rubocop-hq/rubocop/tree/master/logo).\n\nThe logo is licensed under a\n[Creative Commons Attribution-NonCommercial 4.0 International License](https://creativecommons.org/licenses/by-nc/4.0/deed.en_GB).\n\n## Contributors\n\nHere's a [list](https://github.com/rubocop-hq/rubocop/graphs/contributors) of\nall the people who have contributed to the development of RuboCop.\n\nI'm extremely grateful to each and every one of them!\n\nIf you'd like to contribute to RuboCop, please take the time to go\nthrough our short\n[contribution guidelines](CONTRIBUTING.md).\n\nConverting more of the Ruby Style Guide into RuboCop cops is our top\npriority right now. Writing a new cop is a great way to dive into RuboCop!\n\nOf course, bug reports and suggestions for improvements are always\nwelcome. GitHub pull requests are even better! :-)\n\n## Funding\n\nWhile RuboCop is free software and will always be, the project would benefit immensely from some funding.\nRaising a monthly budget of a couple of thousand dollars would make it possible to pay people to work on\ncertain complex features, fund other development related stuff (e.g. hardware, conference trips) and so on.\nRaising a monthly budget of over $5000 would open the possibility of someone working full-time on the project\nwhich would speed up the pace of development significantly.\n\nWe welcome both individual and corporate sponsors! We also offer a\nwide array of funding channels to account for your preferences\n(although\ncurrently [Open Collective](https://opencollective.com/rubocop) is our\npreferred funding platform).\n\nIf you're working in a company that's making significant use of RuboCop we'd appreciate it if you suggest to your company\nto become a RuboCop sponsor.\n\nYou can support the development of RuboCop via\n[Salt](https://salt.bountysource.com/teams/rubocop),\n[Patreon](https://www.patreon.com/bbatsov),\n[PayPal](https://paypal.me/bbatsov)\nand [Open Collective](https://opencollective.com/rubocop).\n\n### Open Collective Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/rubocop#backer)]\n\n<a href=\"https://opencollective.com/rubocop/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/backer/29/avatar.svg\"></a>\n\n### Open Collective Sponsors\n\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [[Become a sponsor](https://opencollective.com/rubocop#sponsor)]\n\n<a href=\"https://opencollective.com/rubocop/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rubocop/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/rubocop/sponsor/29/avatar.svg\"></a>\n\n## Changelog\n\nRuboCop's changelog is available [here](CHANGELOG.md).\n\n## Copyright\n\nCopyright (c) 2012-2019 Bozhidar Batsov. See [LICENSE.txt](LICENSE.txt) for\nfurther details.\n"}, {"repo": "oclint/oclint", "language": "C++", "readme_contents": "# OCLint - http://oclint.org\n\n[![Travis CI Status](https://api.travis-ci.org/oclint/oclint.svg?branch=master)](https://travis-ci.org/oclint/oclint) [![Coverage Status](https://coveralls.io/repos/github/oclint/oclint/badge.svg?branch=master)](https://coveralls.io/github/oclint/oclint?branch=master)\n\nOCLint is a static code analysis tool for improving quality and reducing defects\nby inspecting C, C++ and Objective-C code.\n\nIt looks for potential problems that aren't visible to compilers, for example:\n\n* Possible bugs - empty if/else/try/catch/finally statements\n* Unused code - unused local variables and parameters\n* Complicated code - high cyclomatic complexity, NPath complexity and high NCSS\n* Redundant code - redundant if statement and useless parentheses\n* Code smells - long method and long parameter list\n* Bad practices - inverted logic and parameter reassignment\n* ...\n\nFor more information, visit http://oclint.org\n\n"}, {"repo": "golang/lint", "language": "Go", "readme_contents": "Golint is a linter for Go source code.\n\n[![Build Status](https://travis-ci.org/golang/lint.svg?branch=master)](https://travis-ci.org/golang/lint)\n\n## Installation\n\nGolint requires a\n[supported release of Go](https://golang.org/doc/devel/release.html#policy).\n\n    go get -u golang.org/x/lint/golint\n\nTo find out where `golint` was installed you can run `go list -f {{.Target}} golang.org/x/lint/golint`. For `golint` to be used globally add that directory to the `$PATH` environment setting.\n\n## Usage\n\nInvoke `golint` with one or more filenames, directories, or packages named\nby its import path. Golint uses the same\n[import path syntax](https://golang.org/cmd/go/#hdr-Import_path_syntax) as\nthe `go` command and therefore\nalso supports relative import paths like `./...`. Additionally the `...`\nwildcard can be used as suffix on relative and absolute file paths to recurse\ninto them.\n\nThe output of this tool is a list of suggestions in Vim quickfix format,\nwhich is accepted by lots of different editors.\n\n## Purpose\n\nGolint differs from gofmt. Gofmt reformats Go source code, whereas\ngolint prints out style mistakes.\n\nGolint differs from govet. Govet is concerned with correctness, whereas\ngolint is concerned with coding style. Golint is in use at Google, and it\nseeks to match the accepted style of the open source Go project.\n\nThe suggestions made by golint are exactly that: suggestions.\nGolint is not perfect, and has both false positives and false negatives.\nDo not treat its output as a gold standard. We will not be adding pragmas\nor other knobs to suppress specific warnings, so do not expect or require\ncode to be completely \"lint-free\".\nIn short, this tool is not, and will never be, trustworthy enough for its\nsuggestions to be enforced automatically, for example as part of a build process.\nGolint makes suggestions for many of the mechanically checkable items listed in\n[Effective Go](https://golang.org/doc/effective_go.html) and the\n[CodeReviewComments wiki page](https://golang.org/wiki/CodeReviewComments).\n\n## Scope\n\nGolint is meant to carry out the stylistic conventions put forth in\n[Effective Go](https://golang.org/doc/effective_go.html) and\n[CodeReviewComments](https://golang.org/wiki/CodeReviewComments).\nChanges that are not aligned with those documents will not be considered.\n\n## Contributions\n\nContributions to this project are welcome provided they are [in scope](#scope),\nthough please send mail before starting work on anything major.\nContributors retain their copyright, so we need you to fill out\n[a short form](https://developers.google.com/open-source/cla/individual)\nbefore we can accept your contribution.\n\n## Vim\n\nAdd this to your ~/.vimrc:\n\n    set rtp+=$GOPATH/src/golang.org/x/lint/misc/vim\n\nIf you have multiple entries in your GOPATH, replace `$GOPATH` with the right value.\n\nRunning `:Lint` will run golint on the current file and populate the quickfix list.\n\nOptionally, add this to your `~/.vimrc` to automatically run `golint` on `:w`\n\n    autocmd BufWritePost,FileWritePost *.go execute 'Lint' | cwindow\n\n\n## Emacs\n\nAdd this to your `.emacs` file:\n\n    (add-to-list 'load-path (concat (getenv \"GOPATH\")  \"/src/golang.org/x/lint/misc/emacs/\"))\n    (require 'golint)\n\nIf you have multiple entries in your GOPATH, replace `$GOPATH` with the right value.\n\nRunning M-x golint will run golint on the current file.\n\nFor more usage, see [Compilation-Mode](http://www.gnu.org/software/emacs/manual/html_node/emacs/Compilation-Mode.html).\n"}, {"repo": "ndmitchell/hlint", "language": "Haskell", "readme_contents": "# HLint [![Hackage version](https://img.shields.io/hackage/v/hlint.svg?label=Hackage)](https://hackage.haskell.org/package/hlint) [![Stackage version](https://www.stackage.org/package/hlint/badge/nightly?label=Stackage)](https://www.stackage.org/package/hlint) [![Linux build status](https://img.shields.io/travis/ndmitchell/hlint/master.svg?label=Linux%20build)](https://travis-ci.org/ndmitchell/hlint) [![Windows build status](https://img.shields.io/appveyor/ci/ndmitchell/hlint/master.svg?label=Windows%20build)](https://ci.appveyor.com/project/ndmitchell/hlint)\n\nHLint is a tool for suggesting possible improvements to Haskell code. These suggestions include ideas such as using alternative functions, simplifying code and spotting redundancies. This document is structured as follows:\n\n* [Installing and running HLint](#installing-and-running-hlint)\n* [FAQ](#faq)\n* [Customizing the hints](#customizing-the-hints)\n* [Hacking HLint](#hacking-hlint)\n\n### Bugs and limitations\n\nBugs can be reported [on the bug tracker](https://github.com/ndmitchell/hlint/issues). There are some issues that I do not intend to fix:\n\n* HLint operates on each module at a time in isolation, as a result HLint does not know about types or which names are in scope.\n* The presence of `seq` may cause some hints (i.e. eta-reduction) to change the semantics of a program.\n* Some transformed programs may require additional type signatures, particularly if the transformations trigger the monomorphism restriction or involve rank-2 types.\n* The `RebindableSyntax` extension can cause HLint to suggest incorrect changes.\n* HLint turns on many language extensions so it can parse more documents, occasionally some break otherwise legal syntax - e.g. `{-#INLINE foo#-}` doesn't work with `MagicHash`, `foo $bar` means something different with `TemplateHaskell`. These extensions can be disabled with `-XNoMagicHash` or `-XNoTemplateHaskell` etc.\n* HLint doesn't run any custom preprocessors, e.g. [markdown-unlit](https://hackage.haskell.org/package/markdown-unlit) or [record-dot-preprocessor](https://hackage.haskell.org/package/record-dot-preprocessor), so code making use of them will usually fail to parse.\n\n## Installing and running HLint\n\nInstallation follows the standard pattern of any Haskell library or program: type `cabal update` to update your local hackage database, then `cabal install hlint` to install HLint.\n\nOnce HLint is installed, run `hlint source` where `source` is either a Haskell file, or a directory containing Haskell files. A directory will be searched recursively for any files ending with `.hs` or `.lhs`. For example, running HLint over darcs would give:\n\n```console\n$ hlint darcs-2.1.2\n\ndarcs-2.1.2\\src\\CommandLine.lhs:94:1: Warning: Use concatMap\nFound:\n    concat $ map escapeC s\nPerhaps:\n    concatMap escapeC s\n\ndarcs-2.1.2\\src\\CommandLine.lhs:103:1: Suggestion: Use fewer brackets\nFound:\n    ftable ++ (map (\\ (c, x) -> (toUpper c, urlEncode x)) ftable)\nPerhaps:\n    ftable ++ map (\\ (c, x) -> (toUpper c, urlEncode x)) ftable\n\ndarcs-2.1.2\\src\\Darcs\\Patch\\Test.lhs:306:1: Warning: Use a more efficient monadic variant\nFound:\n    mapM (delete_line (fn2fp f) line) old\nPerhaps:\n    mapM_ (delete_line (fn2fp f) line) old\n\n... lots more hints ...\n```\n\nEach hint says which file/line the hint relates to, how serious an issue it is, a description of the hint, what it found, and what you might want to replace it with. In the case of the first hint, it has suggested that instead of applying `concat` and `map` separately, it would be better to use the combination function `concatMap`.\n\nThe first hint is marked as an warning, because using `concatMap` in preference to the two separate functions is always desirable. In contrast, the removal of brackets is probably a good idea, but not always. Reasons that a hint might be a suggestion include requiring an additional import, something not everyone agrees on, and functions only available in more recent versions of the base library.\n\n**Bug reports:** The suggested replacement should be equivalent - please report all incorrect suggestions not mentioned as known limitations.\n\n### Suggested usage\n\nHLint usage tends to proceed in three distinct phases:\n\n1. Initially, run `hlint . --report` to generate `report.html` containing a list of all issues HLint has found. Fix those you think are worth fixing and keep repeating.\n1. Once you are happy, run `hlint . --default > .hlint.yaml`, which will generate a settings file ignoring all the hints currently outstanding. Over time you may wish to edit the list.\n1. For larger projects, add [custom hints or rules](#customizing-the-hints).\n\nMost hints are intended to be a good idea in most circumstances, but not universally - judgement is required. When contributing to someone else's project, HLint can identify pieces of code to look at, but only make changes you consider improvements - not merely to adhere to HLint rules.\n\n### Running with Continuous Integration\n\nOn CI you might wish to run `hlint .` (or `hlint src` if you only want to check the `src` directory). To avoid the cost of compilation you may wish to fetch the [latest HLint binary release](https://github.com/ndmitchell/hlint/releases/latest).\n\nFor the CI systems [Travis](https://travis-ci.org/), [Appveyor](https://www.appveyor.com/) and [Azure Pipelines](https://azure.microsoft.com/en-gb/services/devops/pipelines/) add the line:\n\n```sh\ncurl -sSL https://raw.github.com/ndmitchell/hlint/master/misc/run.sh | sh -s .\n```\n\nThe arguments after `-s` are passed to `hlint`, so modify the final `.` if you want other arguments. This command works on Windows, Mac and Linux.\n\n### Integrations\n\nHLint is integrated into lots of places:\n\n* Lots of editors have HLint plugins (quite a few have more than one HLint plugin).\n* HLint is part of the multiple editor plugins [ghc-mod](https://hackage.haskell.org/package/ghc-mod) and [Intero](https://github.com/commercialhaskell/intero).\n* [HLint Source Plugin](https://github.com/ocharles/hlint-source-plugin) makes HLint available as a GHC plugin.\n* [Code Climate](https://docs.codeclimate.com/v1.0/docs/hlint) is a CI for analysis which integrates HLint.\n* [Danger](http://allocinit.io/haskell/danger-and-hlint/) can be used to automatically comment on pull requests with HLint suggestions.\n* [Restyled](https://restyled.io) includes an HLint Restyler to automatically run `hlint --refactor` on files changed in GitHub Pull Requests.\n* [lpaste](http://lpaste.net/) integrates with HLint - suggestions are shown at the bottom.\n* [hlint-test](https://hackage.haskell.org/package/hlint-test) helps you write a small test runner with HLint.\n\n### Automatically Applying Hints\n\nBy supplying the `--refactor` flag hlint can automatically apply most\nsuggestions. Instead of a list of hints, hlint will instead output the\nrefactored file on stdout. In order to do this, it is necessary to have the\n`refactor` executable on you path. `refactor` is provided by the\n[`apply-refact`](https://github.com/mpickering/apply-refact) package,\nit uses the GHC API in order to transform source files given a list of\nrefactorings to apply. Hlint directly calls the executable to apply the\nsuggestions.\n\nAdditional configuration can be passed to `refactor` with the\n`--refactor-options` flag. Some useful flags include `-i` which replaces the\noriginal file and `-s` which asks for confirmation before performing a hint.\n\nAn alternative location for `refactor` can be specified with the\n`--with-refactor` flag.\n\nSimple bindings for [vim](https://github.com/mpickering/hlint-refactor-vim),\n[emacs](https://github.com/mpickering/hlint-refactor-mode) and [atom](https://github.com/mpickering/hlint-refactor-atom) are provided.\n\nThere are no plans to support the duplication nor the renaming hints.\n\n### Reports\n\nHLint can generate a lot of information, making it difficult to search for particular types of errors. The `--report` flag will cause HLint to generate a report file in HTML, which can be viewed interactively. Reports are recommended when there are more than a handful of hints.\n\n### Language Extensions\n\nHLint enables most Haskell extensions, disabling only those which steal too much syntax (e.g. Arrows, TransformListComp and TypeApplications). Individual extensions can be enabled or disabled with, for instance, `-XArrows`, or `-XNoMagicHash`. The flag `-XHaskell2010` selects Haskell 2010 compatibility. You can also pass them via `.hlint.yaml` file. For example: `- arguments: [-XArrows]`.\n\n### Emacs Integration\n\nEmacs integration has been provided by [Alex Ott](http://xtalk.msk.su/~ott/). The integration is similar to compilation-mode, allowing navigation between errors. The script is at [hs-lint.el](https://raw.githubusercontent.com/ndmitchell/hlint/master/data/hs-lint.el), and a copy is installed locally in the data directory. To use, add the following code to the Emacs init file:\n\n```guile\n(require 'hs-lint)\n(defun my-haskell-mode-hook ()\n    (local-set-key \"\\C-cl\" 'hs-lint))\n(add-hook 'haskell-mode-hook 'my-haskell-mode-hook)\n```\n\n### GHCi Integration\n\nGHCi integration has been provided by Gwern Branwen. The integration allows running `:hlint` from the GHCi prompt. The script is at [hlint.ghci](https://raw.githubusercontent.com/ndmitchell/hlint/master/data/hlint.ghci), and a copy is installed locally in the data directory. To use, add the contents to your [GHCi startup file](https://www.haskell.org/ghc/docs/latest/html/users_guide/ghci.html#the-ghci-and-haskeline-files).\n\n### Parallel Operation\n\nTo run HLint on 4 processors append the flags `-j4`. HLint will usually perform fastest if n is equal to the number of physical processors, which can be done with `-j` alone.\n\nIf your version of GHC does not support the GHC threaded runtime then install with the command: `cabal install --flags=\"-threaded\"`\n\n### C preprocessor support\n\nHLint runs the [cpphs C preprocessor](http://hackage.haskell.org/package/cpphs) over all input files, by default using the current directory as the include path with no defined macros. These settings can be modified using the flags `--cpp-include` and `--cpp-define`. To disable the C preprocessor use the flag `-XNoCPP`. There are a number of limitations to the C preprocessor support:\n\n* HLint will only check one branch of an `#if`, based on which macros have been defined.\n* Any missing `#include` files will produce a warning on the console, but no information in the reports.\n\n## FAQ\n\n### Why are hints not applied recursively?\n\nConsider:\n\n```haskell\nfoo xs = concat (map op xs)\n```\n\nThis will suggest eta reduction to `concat . map op`, and then after making that change and running HLint again, will suggest use of `concatMap`. Many people wonder why HLint doesn't directly suggest `concatMap op`. There are a number of reasons:\n\n* HLint aims to both improve code, and to teach the author better style. Doing modifications individually helps this process.\n* Sometimes the steps are reasonably complex, by automatically composing them the user may become confused.\n* Sometimes HLint gets transformations wrong. If suggestions are applied recursively, one error will cascade.\n* Some people only make use of some of the suggestions. In the above example using concatMap is a good idea, but sometimes eta reduction isn't. By suggesting them separately, people can pick and choose.\n* Sometimes a transformed expression will be large, and a further hint will apply to some small part of the result, which appears confusing.\n* Consider `f $ (a b)`. There are two valid hints, either remove the $ or remove the brackets, but only one can be applied.\n\n### Why doesn't the compiler automatically apply the optimisations?\n\nHLint doesn't suggest optimisations, it suggests code improvements - the intention is to make the code simpler, rather than making the code perform faster. The [GHC compiler](http://haskell.org/ghc/) automatically applies many of the rules suggested by HLint, so HLint suggestions will rarely improve performance.\n\n### Why doesn't HLint know the fixity for my custom !@%$ operator?\n\nHLint knows the fixities for all the operators in the base library, but no others. HLint works on a single file at a time, and does not resolve imports, so cannot see fixity declarations from imported modules. You can tell HLint about fixities by putting them in a hint file, or passing them on the command line. For example, pass `--with=infixr 5 !@%$`, or put all the fixity declarations in a `.hlint.yaml` file as `- fixity: \"infixr 5 !@%$\"`. You can also use [--find](https://rawgithub.com/ndmitchell/hlint/master/hlint.htm#find) to automatically produce a list of fixity declarations in a file.\n\n### Which hints are used?\n\nHLint uses the `hlint.yaml` file it ships with by default (containing things like the `concatMap` hint above), along with the first `.hlint.yaml` file it finds in the current directory or any parent thereof. To include other hints, pass `--hint=filename.yaml`. If you pass any `--with` hint you will need to explicitly add any `--hint` flags required.\n\n### Why do I sometimes get a \"Note\" with my hint?\n\nMost hints are perfect substitutions, and these are displayed without any notes. However, some hints change the semantics of your program - typically in irrelevant ways - but HLint shows a warning note. HLint does not warn when assuming typeclass laws (such as `==` being symmetric). Some notes you may see include:\n\n* __Increases laziness__ - for example `foldl (&&) True` suggests `and` including this note. The new code will work on infinite lists, while the old code would not. Increasing laziness is usually a good idea.\n* __Decreases laziness__ - for example `(fst a, snd a)` suggests `a` including this note. On evaluation the new code will raise an error if a is an error, while the old code would produce a pair containing two error values. Only a small number of hints decrease laziness, and anyone relying on the laziness of the original code would be advised to include a comment.\n* __Removes error__ - for example `foldr1 (&&)` suggests `and` including the note `Removes error on []`. The new code will produce `True` on the empty list, while the old code would raise an error. Unless you are relying on the exception thrown by the empty list, this hint is safe - and if you do rely on the exception, you would be advised to add a comment.\n\n### What is the difference between error/warning/suggestion?\n\nEvery hint has a severity level:\n\n* __Error__ - by default only used for parse errors.\n* __Warning__ - for example `concat (map f x)` suggests `concatMap f x` as a \"warning\" severity hint. From a style point of view, you should always replace a combination of `concat` and `map` with `concatMap`.\n* __Suggestion__ - for example `x !! 0` suggests `head x` as a \"suggestion\" severity hint. Typically `head` is a simpler way of expressing the first element of a list, especially if you are treating the list inductively. However, in the expression `f (x !! 4) (x !! 0) (x !! 7)`, replacing the middle argument with `head` makes it harder to follow the pattern, and is probably a bad idea. Suggestion hints are often worthwhile, but should not be applied blindly.\n\nThe difference between warning and suggestion is one of personal taste, typically my personal taste. If you already have a well developed sense of Haskell style, you should ignore the difference. If you are a beginner Haskell programmer you may wish to focus on warning hints before suggestion hints.\n\n### Is it possible to use pragma annotations in code that is read by `ghci` (conflicts with `OverloadedStrings`)?\n\nShort answer: yes, it is!\n\nIf the language extension `OverloadedStrings` is enabled, `ghci` may however report error messages such as:\n\n```console\nAmbiguous type variable \u2018t0\u2019 arising from an annotation\nprevents the constraint \u2018(Data.Data.Data t0)\u2019 from being solved.\n```\n\nIn this case, a solution is to add the `:: String` type annotation.  For example:\n\n```haskell\n{-# ANN someFunc (\"HLint: ignore Use fmap\" :: String) #-}\n```\n\nSee discussion in [issue #372](https://github.com/ndmitchell/hlint/issues/372).\n\n### Why do I get a parse error?\n\nHLint enables/disables a set of extensions designed to allow as many files to parse as possible, but sometimes you'll need to enable an additional extension (e.g. Arrows), or disable some (e.g. MagicHash) to enable your code to parse. In addition, sometimes the underlying parser library ([haskell-src-exts](https://github.com/haskell-suite/haskell-src-exts)) has a bug which causes a parse error.\n\n## Customizing the hints\n\nTo customize the hints given by HLint, create a file `.hlint.yaml` in the root of your project. For a suitable default run:\n\n```console\nhlint --default > .hlint.yaml\n```\n\nThis default configuration contains lots of examples, including:\n\n* Adding command line arguments to all runs, e.g. `--color` or `-XNoMagicHash`.\n* Ignoring certain hints, perhaps within certain modules/functions.\n* Restricting use of GHC flags/extensions/functions, e.g. banning `Arrows` and `unsafePerformIO`.\n* Adding additional project-specific hints.\n\nYou can see the output of `--default` [here](https://github.com/ndmitchell/hlint/blob/master/data/default.yaml).\n\nIf you wish to use the [Dhall configuration language](https://github.com/dhall-lang/dhall-lang) to customize HLint, there [is an example](https://kowainik.github.io/posts/2018-09-09-dhall-to-hlint) and [type definition](https://github.com/kowainik/relude/blob/master/hlint/Rule.dhall).\n\n### Ignoring hints\n\nSome of the hints are subjective, and some users believe they should be ignored. Some hints are applicable usually, but occasionally don't always make sense. The ignoring mechanism provides features for suppressing certain hints. Ignore directives can either be written as pragmas in the file being analysed, or in the hint files. Examples of pragmas are:\n\n* `{-# ANN module \"HLint: ignore\" #-}` or `{-# HLINT ignore #-}` or `{- HLINT ignore -}` - ignore all hints in this module (use `module` literally, not the name of the module).\n* `{-# ANN module \"HLint: ignore Eta reduce\" #-}` or `{-# HLINT ignore \"Eta reduce\" #-}` or `{- HLINT ignore \"Eta reduce\" -}` - ignore all eta reduction suggestions in this module.\n* `{-# ANN myFunction \"HLint: ignore\" #-}` or `{-# HLINT ignore myFunction #-}` or `{- HLINT ignore myFunction -}` - don't give any hints in the function `myFunction`.\n* `{-# ANN myFunction \"HLint: error\" #-}` or `{-# HLINT error myFunction #-}` or `{- HLINT error myFunction -}` - any hint in the function `myFunction` is an error.\n* `{-# ANN module \"HLint: error Use concatMap\" #-}` or `{-# HLINT error \"Use concatMap\" #-}` or `{- HLINT error \"Use concatMap\" -}` - the hint to use `concatMap` is an error (you may also use `warn` or `suggest` in place of `error` for other severity levels).\n\nFor `ANN` pragmas it is important to put them _after_ any `import` statements. If you have the `OverloadedStrings` extension enabled you will need to give an explicit type to the annotation, e.g. `{-# ANN myFunction (\"HLint: ignore\" :: String) #-}`. The `ANN` pragmas can also increase compile times or cause more recompilation than otherwise required, since they are evaluated by `TemplateHaskell`.\n\nFor `{-# HLINT #-}` pragmas GHC may give a warning about an unrecognised pragma, which can be suppressed with `-Wno-unrecognised-pragmas`.\n\nFor `{- HLINT -}` comments they are likely to be treated as comments in syntax highlighting, which can lead to them being overlooked.\n\nIgnore directives can also be written in the hint files:\n\n* `- ignore: {name: Eta reduce}` - suppress all eta reduction suggestions.\n* `- ignore: {name: Eta reduce, within: [MyModule1, MyModule2]}` - suppress eta reduction hints in the `MyModule1` and `MyModule2` modules.\n* `- ignore: {within: MyModule.myFunction}` - don't give any hints in the function `MyModule.myFunction`.\n* `- error: {within: MyModule.myFunction}` - any hint in the function `MyModule.myFunction` is an error.\n* `- error: {name: Use concatMap}` - the hint to use `concatMap` is an error (you may also use `warn` or `suggest` in place of `error` for other severity levels).\n\nThese directives are applied in the order they are given, with later hints overriding earlier ones.\n\nYou can choose to ignore all hints with `- ignore: {}` then selectively enable the ones you want (e.g. `- warn: {name: Use const}`), but it isn't a totally smooth experience (see [#747](https://github.com/ndmitchell/hlint/issues/747) and [#748](https://github.com/ndmitchell/hlint/issues/748)).\n\nFinally, `hlint` defines the `__HLINT__` preprocessor definition (with value `1`), so problematic definitions (including those that don't parse) can be hidden with:\n\n```haskell\n#ifndef __HLINT__\nfoo = ( -- HLint would fail to parse this\n#endif\n```\n\n### Adding hints\n\nThe hint suggesting `concatMap` can be defined as:\n\n```yaml\n- warn: {lhs: concat (map f x), rhs: concatMap f x}\n```\n\nThis line can be read as replace `concat (map f x)` with `concatMap f x`. All single-letter variables are treated as substitution parameters. For examples of more complex hints see the supplied `hlint.yaml` file in the data directory. This hint will automatically match `concat . map f` and `concat $ map f x`, so there is no need to give eta-reduced variants of the hints. Hints may tagged with `error`, `warn` or `suggest` to denote how severe they are by default. In addition, `hint` is a synonym for `suggest`. If you come up with interesting hints, please submit them for inclusion.\n\nYou can search for possible hints to add from a source file with the `--find` flag, for example:\n\n```console\n$ hlint --find=src/Utils.hs\n-- hints found in src/Util.hs\n- warn: {lhs: \"null (intersect a b)\", rhs: \"disjoint a b\"}\n- warn: {lhs: \"dropWhile isSpace\", rhs: \"trimStart\"}\n- fixity: \"infixr 5 !:\"\n```\n\nThese hints are suitable for inclusion in a custom hint file. You can also include Haskell fixity declarations in a hint file, and these will also be extracted. If you pass only `--find` flags then the hints will be written out, if you also pass files/folders to check, then the found hints will be automatically used when checking.\n\nHints can specify more advanced aspects, with names and side conditions. To see examples and descriptions of these features look at [the default hint file](https://github.com/ndmitchell/hlint/blob/master/data/hlint.yaml) and [the hint interpretation module comments](https://github.com/ndmitchell/hlint/blob/master/src/Hint/Match.hs).\n\n### Restricting items\n\nHLint can restrict what Haskell code is allowed, which is particularly useful for larger projects which wish to enforce coding standards - there is a short example in the [HLint repo itself](https://github.com/ndmitchell/hlint/blob/master/.hlint.yaml#L10-L32). As an example of restricting extensions:\n\n```yaml\n- extensions:\n  - default: false\n  - name: [DeriveDataTypeable, GeneralizedNewtypeDeriving]\n  - {name: CPP, within: CompatLayer}\n```\n\nThe above block declares that GHC extensions are not allowed by default, apart from `DeriveDataTypeable` and `GeneralizedNewtypeDeriving` which are available everywhere. The `CPP` extension is only allowed in the module `CompatLayer`. Much like `extensions`, you can use `flags` to limit the `GHC_OPTIONS` flags that are allowed to occur. You can also ban certain functions:\n\n```yaml\n- functions:\n  - {name: nub, within: []}\n  - {name: unsafePerformIO, within: CompatLayer}\n```\n\nThis declares that the `nub` function can't be used in any modules, and thus is banned from the code. That's probably a good idea, as most people should use an alternative that isn't _O(n^2)_ (e.g. [`nubOrd`](https://hackage.haskell.org/package/extra/docs/Data-List-Extra.html#v:nubOrd)). We also whitelist where `unsafePerformIO` can occur, ensuring that there can be a centrally reviewed location to declare all such instances. Finally, we can restrict the use of modules with:\n\n```yaml\n- modules:\n  - {name: [Data.Set, Data.HashSet], as: Set}\n  - {name: Control.Arrow, within: []}\n```\n\nThis fragment requires that all imports of `Set` must be `qualified Data.Set as Set`, enforcing consistency. It also ensures the module `Control.Arrow` can't be used anywhere.\n\nYou can customize the `Note:` for restricted modules, functions and extensions, by providing a `message` field (default: `may break the code`).\n\n## Hacking HLint\n\nContributions to HLint are most welcome, following [my standard contribution guidelines](https://github.com/ndmitchell/neil/blob/master/README.md#contributions). You can run the tests either from within a `ghci` session by typing `:test` or by running the standalone binary's tests via `cabal run hlint test` or `stack init && stack run hlint test`.\n\nNew tests for individual hints can be added directly to source and hint files by adding annotations bracketed in `<TEST></TEST>` code comment blocks. As some examples:\n\n```haskell\n{-\n    Tests to check the zipFrom hint works\n\n<TEST>\nzip [1..length x] x -- zipFrom 1 x\nzip [1..length y] x\nzip [1..length x] x -- ??? @Warning\n</TEST>\n-}\n```\n\nThe general syntax is `lhs -- rhs` with `lhs` being the expression you expect to be rewritten as `rhs`. The absence of `rhs` means you expect no hints to fire. In addition `???` lets you assert a warning without a particular suggestion, while `@` tags require a specific severity -- both these features are used less commonly.\n\n### Acknowledgements\n\nThis program has only been made possible by the presence of the [haskell-src-exts](https://github.com/haskell-suite/haskell-src-exts) package, and many improvements have been made by [Niklas Broberg](http://www.nbroberg.se) in response to feature requests. Additionally, many people have provided help and patches, including Lennart Augustsson, Malcolm Wallace, Henk-Jan van Tuyl, Gwern Branwen, Alex Ott, Andy Stewart, Roman Leshchinskiy, Johannes Lippmann, Iustin Pop, Steve Purcell, Mitchell Rosen and others.\n"}, {"repo": "coala/coala", "language": "Python", "readme_contents": ".. image:: https://cloud.githubusercontent.com/assets/5716520/24838296/a9cf5f04-1d45-11e7-855c-47b816ce1e09.png\n    :target: https://coala.io/\n\n=====\n\n:emphasis:`\"Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.\"` \u2015 `John F. Woods <http://ruby.zigzo.com/2014/08/01/who-said-that-one-violent-psychopath-quote/>`_\n\n=====\n\n|Linux Build Status| |Windows Build status| |macOS Build Status|\n|codecov.io| |Documentation Status| |AGPL| |OpenHub|\n\n=====\n\n`coala <https://coala.io>`_ provides a unified interface for linting and fixing code with a single configuration file, regardless of the programming languages used. You can use coala from within your favorite editor, integrate it with your CI, get the results as JSON, or customize it to your needs with its flexible configuration syntax.\n\ncoala supports popular programming languages including **Python**, **C/C++**, **Java**, **JavaScript**, **CSS**, and `several others <http://coala.io/#!/languages>`_ out of the box.\n\n\n`Install coala <http://coala.io/#!/home#installation>`_ | `Get Involved <http://coala.io/#/getinvolved>`_ | `Chat <https://coala.io/chat>`_ | `Roadmap <https://projects.coala.io>`_ | `Blog <http://blog.coala.io>`_ | `Twitter <https://www.twitter.com/coala_io>`_\n\n\n.. |Linux Build Status| image:: https://img.shields.io/circleci/project/coala/coala/master.svg?label=linux%20build\n   :target: https://circleci.com/gh/coala/coala\n.. |Windows Build status| image:: https://img.shields.io/appveyor/ci/coala/coala/master.svg?label=windows%20build\n   :target: https://ci.appveyor.com/project/coala/coala/branch/master\n.. |macOS Build Status| image:: https://img.shields.io/travis/coala/coala/master.svg?label=macOS%20build\n   :target: https://travis-ci.org/coala/coala\n.. |codecov.io| image:: https://img.shields.io/codecov/c/github/coala/coala/master.svg?label=branch%20coverage\n   :target: https://codecov.io/github/coala/coala?branch=master\n.. |Documentation Status| image:: https://readthedocs.org/projects/coala/badge/?version=latest\n   :target: http://docs.coala.io/\n.. |AGPL| image:: https://img.shields.io/pypi/l/coala.svg\n   :target: https://www.gnu.org/licenses/agpl-3.0.html\n.. |OpenHub| image:: http://www.openhub.net/p/coala/widgets/project_thin_badge.gif\n   :target: https://www.openhub.net/p/coala\n\n.. image:: https://graphs.waffle.io/coala/coala/throughput.svg\n :target: https://waffle.io/coala/coala/metrics/throughput\n :alt: 'Throughput Graph'\n"}, {"repo": "pre-commit/pre-commit", "language": "Python", "readme_contents": "[![Build Status](https://dev.azure.com/asottile/asottile/_apis/build/status/pre-commit.pre-commit?branchName=master)](https://dev.azure.com/asottile/asottile/_build/latest?definitionId=21&branchName=master)\n[![Azure DevOps coverage](https://img.shields.io/azure-devops/coverage/asottile/asottile/21/master.svg)](https://dev.azure.com/asottile/asottile/_build/latest?definitionId=21&branchName=master)\n\n## pre-commit\n\nA framework for managing and maintaining multi-language pre-commit hooks.\n\nFor more information see: https://pre-commit.com/\n"}, {"repo": "innogames/igcommit", "language": "Python", "readme_contents": "Git Pre-Receive Hook to Validate Commits\n========================================\n\nIt is exhausting to edit files again and again to have a consistent style.\nThis project provides a Git pre-receive hook to validate pushed commits on\nthe Git server side.  The hook avoids all issues by rejecting any commit\nnot matching the rules to get in to the repository in the first place.\n\nThe pre-receive hook runs some checks on commits on its own, and searches\nfor programming language specific syntax checkers on the PATH of the server\nto check changed files with them.  The process is pretty fast, because only\nthe added and modified files on the pushed commits are passed to the syntax\ncheckers, also in parallel.  It wouldn't slow you down unless your commits\nare touching hundreds of files.\n\n\nInstallation\n------------\n\nIt is possible to install the tool with `pip`::\n\n    pip install igcommit\n\nLink the `script <igcommit-receive>`_ to ``hooks/pre-receive`` on you Git\nrepositories on your Git server::\n\n    ln -s igcommit-receive /home/git/repositories/myproject.git/hooks/pre-receive\n\n\nFeatures\n--------\n\n* Validate received commits one by one not just the last one\n* Only validate added or modified files on the commits\n* Report all problems before failing\n* Check for duplicate commit summaries\n* Check for misleading merge commits\n* Validate committer and author timestamps\n* Validate committer and author names and email addresses\n* Check commit message best practices (80 lines, first line summary...)\n* Check commit summary formatting\n* Validate commit tags against a list ``[BUGFIX]``, ``[FEATURE]``, ``[WIP]``...\n* Check for changed file paths\n* Accept commits tagged as ``[HOTFIX]``, ``[MESS]``, ``[TEMP]``, or ``[WIP]``\n  with issues\n* Check executable bits and shebangs\n* Check symlinks\n* Check CSS files with ``csslint``\n* Check Go files with ``golint``\n* Check HTML files with ``htmlhint``\n* Check Puppet files with ``puppet parser validate`` and ``puppet-lint``\n* Check Python files with ``flake8`` or ``pycodestyle`` and ``pyflakes``\n* Check Ruby files with ``rubocop``\n* Check shell scripts with ``shellcheck``\n* Check JavaScript files with ``eslint``, ``jshint``, ``jscs``, or ``standard``\n* Check CoffeeScript files with ``coffeelint``\n* Check PHP files with ``phpcs``\n* Run the external check commands in parallel\n* Validate JSON, XML, YAML file formats\n\nHere is an example problem output::\n\n    === CheckDuplicateCommitSummaries on CommitList ===\n    ERROR: summary \"Add nagios check for early expiration of licenses\" duplicated 2 times\n\n    === CheckCommitSummary on 31d0f6b ===\n    WARNING: summary longer than 72 characters\n\n    === CheckCommitSummary on 6bded65 ===\n    WARNING: past tense used on summary\n\n    === CheckCommand \"flake8\" on src/check_multiple.py at 6bded65 ===\n    INFO: line 10 col 5: E225 missing whitespace around operator\n    INFO: line 17 col 80: E501 line too long (122 > 79 characters)\n    INFO: line 17 col 85: E203 whitespace before ','\n\n    === CheckCommitMessage on 6fdbc00 ===\n    WARNING: line 7 is longer than 80\n    WARNING: line 9 is longer than 80\n\n\nConfiguration\n-------------\n\nThe script itself is currently configuration free.  Though, some of the syntax\ncheckers called by the script uses or requires configurations.  Those\nconfiguration files has to be on the top level of the Git repository.\n\n==============  ==========================================  ========\nSyntax Checker   Configuration File\n==============  ==========================================  ========\ncsslint         .csslintrc                                  optional\nhtmlhint        .htmlhintrc                                 optional\npuppet-lint     .puppet-lint.rc                             optional\nflake8          .flake8, setup.cfg, or tox.ini              optional\npycodestyle     setup.cfg, or tox.ini                       optional\neslint          eslint.(js|yaml|yml|json), or package.json  required\njshint          .jshintrc, or package.json                  optional\njscs            .jscsrc, .jscs.json, or package.json        required\ncoffeelint      coffeelint.json, or package.json            optional\nphpcs           phpcs.xml, or phpcs.xml.dist                optional\n==============  ==========================================  ========\n\n\nPros and Cons of Pre-receive Hook\n---------------------------------\n\nContinuous Integration Server\n    A continuous integration server can run such checks with the many other\n    things it is doing.  Moving this job from it has many benefits:\n\n    * Synchronous feedback\n    * More efficient\n    * Disallow any commit violating the rules\n\nPre-commit Hook\n    Even though, pre-receive hook gives later feedback than pre-commit hook,\n    it has many advantages over it:\n\n    * No client side configuration\n    * Plugins has to be installed only once to the Git server\n    * Everybody gets the same checks\n    * Enforcement, nobody can skip the checks\n    * Commit checking (pre-commit hook only gets what is changed in the commit)\n\nIDE Integration\n    The same advantages compared to pre-commit hooks applies to IDE\n    integration.  Though, IDE integration gives much sooner and nicer feedback,\n    so it is still a good idea, even with the pre-receive hook.\n\n\nDependencies\n------------\n\nThe script has no dependencies on Python 3.4 or above.  It runs on Python 2\nas well with the backport of enum library `enum34`.  The script executes\nthe validation commands using the shell.  The necessary ones for checked\nrepositories need to be installed separately.  See the complete list of\ncommands on the `config.py <igcommit/config.py>`_.  The commands which are not\navailable on the ``PATH`` is not going to be used.\n\n\nTesting\n-------\n\nI found it useful to check what the script would have complained if it had\nbeen active on different Git repositories.  You can run a command like this\nto test this inside a Git repository against last 50 commits::\n\n    git log --reverse --oneline HEAD~50..HEAD |\n        sed 's:\\([^ ]*\\) .*:\\1 \\1 refs/heads/master:' |\n        python ../igcommit/igcommit-receive\n\n\nChanges\n-------\n\nVersion 2.0\n    * Fix line numbers on syntax errors for executables being 1 off\n    * Recognize and validate symlinks\n    * Validate committer and author timestamps\n    * Validate contributor names and email addresses\n    * Reduce commit message line length limits\n    * Complain about file extensions on executables\n\nVersion 2.1\n    * Add [TEMP] to recognized commit tags\n    * Fix getting the changes of the initial commit (Zheng Wei)\n    * Fix various file descriptor leaks\n    * Check commit summaries more strictly\n    * Check shebangs of non-executable files too\n    * Don't check on empty file contents\n    * Improve unicode support on Python 2\n    * Fix checking symlink targets\n\nVersion 2.2\n    * Fix ``eslint`` configuration (Jerevia)\n    * Accepts commits with ``[TEMP]`` with issues\n    * Stop skipping empty files\n    * Make sure not to get unknown file contents\n    * Move file extensions to config\n    * Increase timestamp comparison tolerance for 1 more minute\n    * Handle spaces on shebangs\n\nVersion 2.3\n    * Handle check command failing immediately\n    * Support pushed tags\n    * Fix failing on file check with bogus return code\n    * Include list of commit tags on warning\n    * Fix recognising commit tags ``[REVIEW]`` and ``[SECURITY]``\n\nVersion 2.4\n    * Fix recognising removed configuration files\n    * Support `coffeelint`\n\nVersion 2.5\n    * Fix unicode issue on Python 2 for XML, YAML, and JSON (jcoetsie)\n\n\nLicense\n-------\n\nThe script is released under the MIT License.  The MIT License is registered\nwith and approved by the Open Source Initiative [1]_.\n\n.. [1] https://opensource.org/licenses/MIT\n"}, {"repo": "fivethirtyeight/data", "language": "Jupyter Notebook", "readme_contents": "See https://data.fivethirtyeight.com/ for a list of the data and code we've published.\n\nUnless otherwise noted, our data sets are available under the [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/), and the code is available under the [MIT License](https://opensource.org/licenses/MIT). If you find this information useful, please [let us know](mailto:data@fivethirtyeight.com).\n"}, {"repo": "datadesk/notebooks", "language": "Python", "readme_contents": "# datadesk/notebooks\n\nAll 34 of our computational notebooks. Also available as [a CSV file](notebooks.csv). Elsewhere you can find our open-source [software packages](https://github.com/datadesk/packages) and [tutorials](https://github.com/datadesk/tutorials).\n\n| date | slug | description |\n|:--|:--|:--|\n|  2019-11-07 | [wine-country-fires](https://github.com/datadesk/wine-country-fires/) | Every fire in California's wine country since 1950 |\n|  2019-11-01 | [deadspin-scraper](https://github.com/datadesk/deadspin-scraper) | Scrape posts from Deadspin |\n|  2019-10-08 | [ripa-analysis](https://github.com/datadesk/ripa-analysis) | Racial disparities in LAPD search rates |\n|  2019-09-19 | [women-homicides-analysis](https://github.com/datadesk/women-homicides-analysis) | The rising number of women being killed |\n|  2019-09-09 | [homeless-sleeping-restrictions](https://github.com/datadesk/homeless-sleeping-restrictions) | Mapping a proposed ban on street sleeping |\n|  2019-06-13 | [native-american-census-analysis](https://github.com/datadesk/native-american-census-analysis) | Native American census analysis |\n|  2019-05-29 | [la-weedmaps-analysis](https://github.com/datadesk/la-weedmaps-analysis) | Mapping LA's unauthorized pot dispensaries |\n|  2019-04-29 | [census-hard-to-map-analysis](https://github.com/datadesk/census-hard-to-map-analysis) | Mapping hard-to-count Census tracts |\n|  2019-04-26 | [hsr-document-analysis](https://github.com/datadesk/hsr-document-analysis) | How many pages can one agency publish? |\n|  2019-04-16 | [lawlers-law](https://github.com/ryanvmenezes/lawlers-law) | Does the first team to score 100 points usually win? |\n|  2019-03-29 | [swana-census-analysis](https://github.com/datadesk/swana-census-analysis) | Are Arabs and Iranians white? |\n|  2019-03-22 | [fire-aircraft-delay](https://github.com/kyleykim/R_Scripts/tree/master/la-me-ln-california-fire-aircraft-delay) | When wildfires in California have started |\n|  2019-03-12 | [hhh-unequal](https://github.com/kyleykim/R_Scripts/tree/master/la-me-ln-hhh-unequal) | Some neighborhoods are behind on homeless housing |\n|  2019-02-27 | [highschool-homicide-analysis](https://github.com/datadesk/highschool-homicide-analysis) | Homicides near high schools |\n|  2019-02-11 | [deleon-district-election-results-analysis](https://github.com/datadesk/deleon-district-election-results-analysis) | How former state Sen. Kevin de Le\u00f3n fared |\n|  2018-12-27 | [nyrb-covers-analysis](https://github.com/datadesk/nyrb-covers-analysis) | Color and content of NYRB Classics book covers |\n|  2018-12-18 | [california-fire-zone-analysis](https://github.com/datadesk/california-fire-zone-analysis) | California buildings in fire hazard zones |\n|  2018-11-18 | [helicopter-accident-analysis](https://github.com/datadesk/helicopter-accident-analysis) | Helicopter accident rates |\n|  2018-10-20 | [hollister-ranch-analysis](https://github.com/datadesk/hollister-ranch-analysis) | Agricultural property tax breaks in Hollister Ranch |\n|  2018-06-27 | [la-settlements-analysis](https://github.com/datadesk/la-settlements-analysis) | Legal payouts made by L.A. city |\n|  2018-04-28 | [california-k12-notebooks](https://github.com/datadesk/california-k12-notebooks) | Download and process California K12 data |\n|  2018-03-16 | [street-racing-analysis](https://github.com/datadesk/street-racing-analysis) | Street racing fatalities in L.A. County |\n|  2018-02-04 | [homeless-arrests-analysis](https://github.com/datadesk/homeless-arrests-analysis) | Arrests of the homeless by the LAPD |\n|  2017-12-14 | [ferc-enforcement-analysis](https://github.com/datadesk/ferc-enforcement-analysis) | Civil penalties issued by FERC |\n|  2017-11-08 | [houston-flood-zone-analysis](https://github.com/datadesk/houston-flood-zone-analysis) | Houston homes after Hurricane Harvey |\n|  2017-08-13 | [california-kindergarten-vaccination-analysis](https://github.com/datadesk/california-kindergarten-vaccination-analysis) | California kindergartens with the lowest vaccination rates |\n|  2017-05-25 | [california-h2a-visas-analysis](https://github.com/datadesk/california-h2a-visas-analysis) | Temporary visas granted to foreign agricultural workers |\n|  2017-04-20 | [construction-jobs-analysis](https://github.com/datadesk/construction-jobs-analysis) | The demographics and pay of construction workers |\n|  2017-03-17 | [california-crop-production-wages-analysis](https://github.com/datadesk/california-crop-production-wages-analysis) | Crop worker pay in California |\n|  2017-02-05 | [california-electricity-capacity-analysis](https://github.com/datadesk/california-electricity-capacity-analysis) | California's costly power glut |\n|  2016-10-31 | [california-ccscore-analysis](https://github.com/datadesk/california-ccscore-analysis) | Water usage after the state eased drought restrictions |\n|  2016-06-15 | [la-vacant-building-complaints-analysis](https://github.com/datadesk/la-vacant-building-complaints-analysis) | Vacant building complaints filed with L.A. city |\n|  2016-04-14 | [kobe-every-shot-ever](https://github.com/datadesk/kobe-every-shot-ever) | Every shot in Kobe Bryant's NBA career |\n|  2015-10-15 | [lapd-crime-classification-analysis](https://github.com/datadesk/lapd-crime-classification-analysis) | Serious assaults misclassified by LAPD |"}, {"repo": "nytimes/objective-c-style-guide", "language": null, "readme_contents": "# NYTimes - Guide de Style Objective-C\n\nCe guide d\u00e9crit les conventions de codage des \u00e9quipes iOS du New York Times. Nous vous remercions pour vos commentaires dans les [tickets](https://github.com/NYTimes/objetive-c-style-guide/issues), [pull requests](https://github.com/NYTimes/objetive-c-style-guide/pulls) et [tweets](https://twitter.com/nytimesmobile). Aussi, [nous recrutons](http://jobs.nytco.com/job/New-York-iOS-Developer-Job-NY-10001/73366300/).\n\nMerci \u00e0 tous [nos contributeurs et contributrices](https://github.com/NYTimes/objective-c-style-guide/contributors).\n\n## Introduction\n\nVoici quelques-uns des documents d'Apple qui nous ont servi \u00e0 \u00e9crire ce guide. Si quelque chose n'est pas mentionn\u00e9 ici, il est probablement couvert en d\u00e9tail dans&#8239;:\n\n* [Le langage de Programmation Objective-C](https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html)\n* [Les Bases Fondamentales de Cocoa](https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html)\n* [Conseils G\u00e9n\u00e9raux de Codage pour Cocoa](https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html)\n* [Guide de Programmation pour App iOS](http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html)\n\n## Table des mati\u00e8res\n\n* [Notation point\u00e9e](#notation-point\u00e9e)\n* [Espacement](#espacement)\n* [Conditions](#conditions)\n  * [Op\u00e9rateur ternaire](#op\u00e9rateur-ternaire)\n* [Gestion des erreurs](#gestion-des-erreurs)\n* [M\u00e9thodes](#m\u00e9thodes)\n* [Variables](#variables)\n* [Nommage](#nommage)\n* [Commentaires](#commentaires)\n* [Init & Dealloc](#init-et-dealloc)\n* [Libell\u00e9s](#libell\u00e9s)\n* [Fonctions CGRect](#fonctions-cgrect)\n* [Constantes](#constantes)\n* [Types \u00e9num\u00e9r\u00e9s](#types-\u00e9num\u00e9r\u00e9s)\n* [Masques de bits](#masques-de-bits)\n* [Propri\u00e9t\u00e9s priv\u00e9es](#propri\u00e9t\u00e9s-priv\u00e9es)\n* [Nommage d'image](#nommage-dimage)\n* [Bool\u00e9ens](#bool\u00e9ens)\n* [Singletons](#singletons)\n* [Imports](#imports)\n* [Projet Xcode](#projet-xcode)\n\n## Notation point\u00e9e\n\nLa notation point\u00e9e doit **toujours** \u00eatre utilis\u00e9e pour lire ou modifier les propri\u00e9t\u00e9s. La notation croch\u00e9e est pr\u00e9f\u00e9rable dans tous les autres cas.\n\n**Par exemple:**\n```objc\nview.backgroundColor = UIColor.orangeColor;\nUIApplication.sharedApplication.delegate;\n```\n\n**Non pas:**\n```objc\n[view setBackgroundColor:[UIColor orangeColor]];\n[UIApplication sharedApplication].delegate;\n```\n\n## Espacement\n\n* L'indentation est de 4 espaces. N'indentez jamais avec des tabulations. Assurez-vous de r\u00e9gler cette pr\u00e9f\u00e9rence dans Xcode.\n* L'accolade ouvrante des m\u00e9thodes et structures de contr\u00f4le (`if`/`else`/`switch`/`while` etc.) est toujours sur la m\u00eame ligne que la d\u00e9claration et l'accolade fermante sur sa propre ligne. \n\n**Par exemple:**\n```objc\nif (utilisateur.estHeureux) {\n    //Faire quelque chose\n}\nelse {\n    //Faire quelque chose d'autre\n}\n```\n* Les m\u00e9thodes devraient \u00eatre s\u00e9par\u00e9es par une ligne blanche pour am\u00e9liorer la lisibilit\u00e9 et l'organisation. \u00c0 l'int\u00e9rieur des m\u00e9thodes, des sauts de lignes devraient s\u00e9parer les sections logiques, mais souvent ces derni\u00e8res devraient \u00eatre plac\u00e9es dans de nouvelles m\u00e9thodes.\n* `@synthesize` et `@dynamic` devraient chacun \u00eatre d\u00e9clar\u00e9s sur de nouvelles lignes dans l'impl\u00e9mentation.\n\n## Conditions\n\nLes instructions de condition doivent toujours utiliser des accolades m\u00eame quand la condition pourrait \u00eatre \u00e9crite sans (par ex. sur une seule ligne) pour \u00e9viter des [erreurs](https://github.com/NYTimes/objective-c-style-guide/issues/26#issuecomment-22074256). Une de ces erreurs serait d'ajouter une deuxi\u00e8me ligne et de penser qu'elle fait partie de la condition. Une autre, [plus dangereuse](http://programmers.stackexchange.com/a/16530) peut arriver quand la ligne \u00ab&#8239;int\u00e9rieure&#8239;\u00bb de la condition est comment\u00e9e, et la prochaine ligne devient involontairement une partie de la condition. De plus, ce style est plus coh\u00e9rent avec d'autres conditions et donc plus facile \u00e0 d\u00e9tecter.\n\n**Par exemple:**\n```objc\nif (!error) {\nreturn success;\n}\n```\n\n**Non pas:**\n```objc\nif (!error)\nreturn success;\n```\n\nou\n\n```objc\nif (!error) return success;\n```\n\n### Op\u00e9rateur ternaire\n\nL'op\u00e9rateur ternaire, `?` , doit seulement \u00eatre utilis\u00e9 s'il rend le code plus lisible ou propre. Il doit seulement \u00e9valuer une condition simple. \u00c9valuer plusieurs conditions est g\u00e9n\u00e9ralement plus facile \u00e0 comprendre avec une condition de type if, ou refactoris\u00e9 avec des variables nomm\u00e9es.\n\n**Par exemple:**\n```objc\nresult = a > b ? x : y;\n```\n\n**Non pas:**\n```objc\nresult = a > b ? x = c > d ? c : d : y;\n```\n\n## Gestion des erreurs\n\nQuand une m\u00e9thode renvoie un param\u00e8tre d'erreur par r\u00e9f\u00e9rence, continuez l'ex\u00e9cution du programme sur la valeur return\u00e9e, et non sur la variable erreur.\n\n**Par exemple:**\n```objc\nNSError *error;\nif (![self FaireQuelqueChoseAvecErreur:&error]) {\n// G\u00e9rer l'erreur\n}\n```\n\n**Non pas:**\n```objc\nNSError *error;\n[self FaireQuelqueChoseAvecErreur:&error];\nif (error) {\n// G\u00e9rer l'erreur\n}\n```\n\nCertaines APIs d'Apple renvoient des valeurs de donn\u00e9es poubeille pour un param\u00e8tre erreur (si non-NULL), donc continuer l'ex\u00e9cution du programme sur l'erreur peut cr\u00e9er des faux n\u00e9gatifs (et par la suite un plantage).\n\n## M\u00e9thodes\n\nPour la signature d'une m\u00e9thode, il doit y avoir un espace apr\u00e8s le scope (symbole `-` ou `+`). Et il doit y avoir un espace entre les diff\u00e9rents segments (param\u00e8tres) de la m\u00e9thode.\n\n**Par exemple**:\n```objc\n- (void)setTextePourExemple:(NSString *)texte image:(UIImage *)image;\n```\n## Variables\n\nLes variables doivent \u00eatre nomm\u00e9es de la fa\u00e7on la plus descriptive possible. Une variable d'une seule lettre doit \u00eatre \u00e9vit\u00e9e sauf pour une boucle `for`.\n\nLes ast\u00e9risques qui indiquent le pointeur sont pla\u00e7\u00e9s avant le nom de la variable, par ex., `NSString *text` et non `NSString* text` ou `NSString * text`, sauf dans le cas de constantes (`NSString * const NYTConstantString`).\n\nLa d\u00e9finition des propri\u00e9t\u00e9s doivent \u00eatre utilis\u00e9es \u00e0 la place des variables d'instance quand c'est possible. L'acc\u00e8s direct aux variables d'instance doit \u00eatre \u00e9vit\u00e9 sauf pour les m\u00e9thodes d'initialisation (`init`, `initWithCoder:`, etc\u2026), la m\u00e9thode `dealloc` et les accesseurs et mutateurs. Pour plus d'information sur l'utilisation de m\u00e9thodes d'acc\u00e8s, les m\u00e9thodes d'initialisation et dealloc, consultez [cet article](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmPractical.html#//apple_ref/doc/uid/TP40004447-SW6).\n\n**Par exemple:**\n\n```objc\n@interface NYTSection : NSObject\n\n@property (nonatomic) NSString *headline;\n\n@end\n```\n\n**Non pas:**\n\n```objc\n@interface NYTSection : NSObject {\nNSString *headline;s\n}\n```\n\n#### Qualification des variables\n\nEn ce qui concerne les qualificateurs de variables [introduits avec ARC](https://developer.apple.com/library/ios/releasenotes/objectivec/rn-transitioningtoarc/Introduction/Introduction.html#//apple_ref/doc/uid/TP40011226-CH1-SW4), le qualificateur (`__strong`, `__weak`, `__unsafe_unretained`, `__autoreleasing`) doit \u00eatre plac\u00e9 entre l'ast\u00e9risque et le nom de la variable, par ex., `NSString * __weak text`.\n\n## Nommage\n\nLa convention de nommage Apple devrait \u00eatre suivie quand possible, surtout en ce qui concerne les [r\u00e8gles de management de m\u00e9moire](https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html) ([NARC](http://stackoverflow.com/a/2865194/340508)).\n\nIl est mieux d'utiliser des noms descriptifs, et longs si n\u00e9cessaire, pour les m\u00e9thodes et variables.\n\n**Par exemple:**\n\n```objc\nUIButton *settingsButton;\n```\n\n**Non pas**\n\n```objc\nUIButton *setBut;\n```\n\nUn pr\u00e9fixe de trois lettres (par ex. `NYT`) doit toujours \u00eatre utilis\u00e9 pour le nom des classes et constantes, mais peut \u00eatre omis pour le nom des entit\u00e9s dans Core Data. Les constantes doivent adopter la convention camelCase avec tous les mots qui commencent avec une lettre capitale, pr\u00e9c\u00e9d\u00e9es du nom de la classe dans laquelle ils sont d\u00e9clar\u00e9s pour la clart\u00e9.\n\n**Par exemple:**\n\n```objc\nstatic const NSTimeInterval NYTArticleViewControllerNavigationFadeAnimationDuration = 0.3;\n```\n\n**Non pas:**\n\n```objc\nstatic const NSTimeInterval fadetime = 1.7;\n```\n\nLes properties et variables locales doivent adopter la convention camelCase avec le premier mot en minuscules.\n\nLes variables d'instance doivent adopter la convention camelCase avec le premier mot en miniscules, pr\u00e9c\u00e9d\u00e9 par le pr\u00e9fixe  \u00ab&#8239;_&#8239;\u00bb. Ceci est coh\u00e9rent avec les variables d'instance synthetis\u00e9es automatiquement par LLVM. **Si LLVM peut synthetiser la variable automatiquement, laissez-le faire.**\n\n**Par exemple:**\n\n```objc\n@synthesize nomDeVariableDescriptif = _nomDeVariableDescriptif;\n```\n\n**Non pas:**\n\n```objc\nid nmvar;\n```\n\n## Commentaires\n\nSi n\u00e9cessaire, les commentaires peuvent \u00eatre utilis\u00e9s pour expliquer **pourquoi** un bloc de code fait quelque chose. Les commentaires doivent \u00eatre \u00e0 jour ou \u00e9limin\u00e9s.\n\nLes paragraphes de commentaires devraient g\u00e9n\u00e9ralement \u00eatre \u00e9vit\u00e9s, le code devrait \u00eatre suffisament descriptif, avec seulement un besoin intermittent de commentaire et juste quelques lignes d'explications. Ceci ne s'applique pas aux commentaires utilis\u00e9s pour la documentation.\n\n## init et dealloc\n\nLa m\u00e9thode `dealloc` doit \u00eatre plac\u00e9e au d\u00e9but de l'impl\u00e9mentation, directement apr\u00e8s les expressions `@synthesize` et `@dynamic`. La m\u00e9thode `init` doit \u00eatre plac\u00e9e directement apr\u00e8s la m\u00e9thode `dealloc`.\n\nLa m\u00e9thode `init` doit \u00eatre structur\u00e9e comme ceci:\n\n```objc\n- (instancetype)init {\nself = [super init]; // ou appeler l'initialisateur d\u00e9sign\u00e9\nif (self) {\n// Initialisation particuli\u00e8re \u00e0 cet object\n}\nreturn self;\n}\n```\n\n## Libell\u00e9s\n\n`NSString`, `NSDictionary`, `NSArray`, et `NSNumber` literals doivent \u00eatre utilis\u00e9s quand des instances immutables sont cr\u00e9\u00e9es pour ces objets. Faites bien attention que la valeur `nil` ne soit pas pass\u00e9e aux literals `NSArray` et `NSDictionary`, parce que \u00e7a causerait un plantage.\n\n**Par exemple:**\n\n```objc\nNSArray *names = @[@\"Brian\", @\"Craig\", @\"V\u00e9ronique\"];\nNSDictionary *productManagers = @{@\"iOS\": @\"Andrew\", @\"Android\": @\"Kate\"};\nNSNumber *shouldUseLiterals = @YES;\nNSNumber *buildingZIPCode = @10018;\n```\n\n**Non pas:**\n\n```objc\nNSArray *names = [NSArray arrayWithObjects:@\"Brian\", @\"Craig\", @\"V\u00e9ronique\", nil];\nNSDictionary *productManagers = [NSDictionary dictionaryWithObjectsAndKeys: @\"Andrew\", @\"iOS\", @\"Kate\", @\"Android\", nil];\nNSNumber *shouldUseLiterals = [NSNumber numberWithBool:YES];\nNSNumber *buildingZIPCode = [NSNumber numberWithInteger:10018];\n```\n\n## Fonctions `CGRect`\n\nEn acc\u00e9dant \u00e0 `x`, `y`, `width`, ou `height` d'un `CGRect`, utilisez toujours les [fonctions `CGGeometry`](https://developer.apple.com/documentation/coregraphics/cggeometry) au lieu de l'acc\u00e8s direct au membre struct. Extrait de la r\u00e9f\u00e9rence Apple pour `CGGeometry`:\n\n> Toutes les fonctions d\u00e9crites dans cette r\u00e9f\u00e9rence qui prendre les structures de data CGRect comme donn\u00e9e standardise implicitement ces rectangles avant de calculer leurs r\u00e9sultats. Pour cette raison, votre application devrait \u00e9viter de lire et \u00e9crire directement la donn\u00e9e sauvegard\u00e9e dans la structure de donn\u00e9es CGRect. \u00c0 la place, utilisez les fonctions d\u00e9crites ici pour manipuler les rectangles et pour recup\u00e9rer leurs caract\u00e9riques.\n\n**Par exemple:**\n\n```objc\nCGRect frame = self.view.frame;\n\nCGFloat x = CGRectGetMinX(frame);\nCGFloat y = CGRectGetMinY(frame);\nCGFloat width = CGRectGetWidth(frame);\nCGFloat height = CGRectGetHeight(frame);\n```\n\n**Non pas:**\n\n```objc\nCGRect frame = self.view.frame;\n\nCGFloat x = frame.origin.x;\nCGFloat y = frame.origin.y;\nCGFloat width = frame.size.width;\nCGFloat height = frame.size.height;\n```\n\n## Constantes\n\nLes constantes sont pr\u00e9f\u00e9rables aux literals in-line ou aux nombres, parce qu'elles peuvent \u00eatre facilement reproduites de variables utilis\u00e9s souvent et parce qu'elles peuvent \u00eatre chang\u00e9es facilement sans avoir besoin de faire une recherche. Constantes devraient \u00eatre d\u00e9clar\u00e9es avec `static` et non pas `#define`s \u00e0 moins qu'elle soient utilis\u00e9es explicitement comme macro.\n\n**Par exemple:**\n\n```objc\nstatic NSString * const NYTAboutViewControllerCompanyName = @\"The New York Times Company\";\n\nstatic const CGFloat NYTImageThumbnailHeight = 50.0;\n```\n\n**Non pas:**\n\n```objc\n#define CompanyName @\"The New York Times Company\"\n\n#define thumbnailHeight 2\n```\n\n## Types \u00e9num\u00e9r\u00e9s\n\nPour l'utilisation d' `enum`, il est recommend\u00e9 de choisir le type fixe sp\u00e9cifi\u00e9 avec un \u00ab&#8239;_&#8239;\u00bb parce qu'il est de type fort et pour b\u00e9n\u00e9ficier de la compl\u00e9tion de code. Le SDK inclus maintenant un macro pour faciliter et encourager l'utilisation de type fixe et soulign\u00e9 \u2014 `NS_ENUM()`\n\n**Exemple:**\n\n```objc\ntypedef NS_ENUM(NSInteger, NYTAdRequestState) {\nNYTAdRequestStateInactive,\nNYTAdRequestStateLoading\n};\n```\n\n## Masques de bits\n\nQuand vous travaillez avec des masques de bits, utilisez le macro `NS_OPTIONS`.\n\n**Exemple:**\n\n```objc\ntypedef NS_OPTIONS(NSUInteger, NYTAdCategory) {\nNYTAdCategoryAutos      = 1 << 0,\nNYTAdCategoryJobs       = 1 << 1,\nNYTAdCategoryRealState  = 1 << 2,\nNYTAdCategoryTechnology = 1 << 3\n};\n```\n\n## Propri\u00e9t\u00e9s priv\u00e9es\n\nLes propri\u00e9t\u00e9s priv\u00e9es doivent \u00eatre d\u00e9clar\u00e9es dans l'extension de la classe dans le fichier d'impl\u00e9mentation.\n\n**Par exemple:**\n\n```objc\n@interface NYTAdvertisement ()\n\n@property (nonatomic) GADBannerView *googleAdView;\n@property (nonatomic) ADBannerView *iAdView;\n@property (nonatomic) UIWebView *adXWebView;\n\n@end\n```\n\n## Nommage d'image\n\nLes noms des images doit \u00eatre coh\u00e9rents pour pr\u00e9server une bonne organisation. Elles doivent \u00eatre nomm\u00e9es en utilisant la convention camelCase avec la description de leur utilisation, suivi du suffixe de la classe ou propri\u00e9t\u00e9 qu'elles customisent (si elle existe), suivie de la description de la couleur et/ou emplacement, et finalement leur \u00e9tat.\n**Par exemple:**\n\n* `RefreshBarButtonItem` / `RefreshBarButtonItem@2x` and `RefreshBarButtonItemSelected` / `RefreshBarButtonItemSelected@2x`\n* `ArticleNavigationBarBlanc` / `ArticleNavigationBarBlanc@2x` and `ArticleNavigationBarNoirSelected` / `ArticleNavigationBarNoirSelected@2x`.\n\nLes images qui sont utilis\u00e9es \u00e0 des fins similaires doivent \u00eatre regroup\u00e9es dans leurs groupes respectifs \u00e0 l'int\u00e9rieur d'un dossier Images ou d'un \u00ab&#8239;Asset Catalog&#8239;\u00bb.\n\n\n## Bool\u00e9ens\n\nPuisque `nil` est retourn\u00e9 comme `NO` il n'est pas n\u00e9cessaire de le comparer dans une condition. Ne comparez jamais quelque chose avec `YES`, parce que `YES` est d\u00e9fini comme 1 et un `BOOL` peut aller jusqu'\u00e0 8 bits.\n\nCe style permet une plus grande coh\u00e9rence entre les diff\u00e9rents fichiers et une meilleure clart\u00e9 visuelle.\n\n**Par exemple:**\n\n```objc\nif (!unObject) {\n}\n```\n\n**Non pas:**\n\n```objc\nif (unObject == nil) {\n}\n```\n\n-----\n\n**Pour un `BOOL`, voici deux exemples:**\n\n```objc\nif (estSuper)\nif (!unObject.boolValue)\n```\n\n**Non pas:**\n\n```objc\nif (estSuper == YES) // Ne faites pas \u00e7a\nif (unObject.boolValue == NO)\n```\n\n-----\n\nSi le nom d'une propri\u00e9t\u00e9 `BOOL` est exprim\u00e9e comme un adjectif, la propri\u00e9t\u00e9 peut omettre le prefixe \u00ab&#8239;is&#8239;\u00bb mais doit specifier un nom conventionel pour l'accesseur get, par exemple:\n\n```objc\n@property (assign, getter=isEditable) BOOL editable;\n```\nVoyez le document et exemple pris de [Conseils G\u00e9n\u00e9raux de Nommage Cocoa](https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/Articles/NamingIvarsAndTypes.html#//apple_ref/doc/uid/20001284-BAJGIIJE).\n\n## Singletons\n\nLes singletons doivent utiliser un patron thread-safe (\u00e9tat de processus coh\u00e9rent sans engendrer de probl\u00e8mes de concurrence) pour cr\u00e9er leur instance unique et partag\u00e9.\n\n```objc\n+ (instancetype)sharedInstance {\nstatic id sharedInstance = nil;\n\nstatic dispatch_once_t onceToken;\ndispatch_once(&onceToken, ^{\nsharedInstance = [[[self class] alloc] init];\n});\n\nreturn sharedInstance;\n}\n```\nCelui permet d'\u00e9viter des [plantages possibles, et parfois fr\u00e9quents](http://cocoasamurai.blogspot.com/2011/04/singletons-your-doing-them-wrong.html).\n\n## Imports\n\nS'il y a plusieurs directives d'importation, divisez-les en [groupes](http://ashfurrow.com/blog/structuring-modern-objective-c).\nCommenter chaque groupe est facultatif.\n\nNote&#8239;: pour les modules utilisez la syntaxe [@import](http://clang.llvm.org/docs/Modules.html#using-modules).\n\n```objc\n// Frameworks\n@import QuartzCore;\n\n// Models\n#import \"NYTUser.h\"\n\n// Views\n#import \"NYTButton.h\"\n#import \"NYTUserView.h\"\n```\n\n## Projet Xcode\n\nLes fichiers physiques doivent \u00eatre maintenus en accordance avec le projet Xcode pour \u00e9viter d'avoir des fichiers \u00e9parpill\u00e9s. Les groupes cr\u00e9es dans Xcode doivent avoir un dossier \u00e9quivalent dans le syst\u00e8me de fichiers. Le code doit \u00eatre group\u00e9 non seulement par type, mais aussi par caract\u00e9ristique pour une plus grande clart\u00e9.\n\nSi possible, choisissez toujours \u00ab&#8239;Treat Warnings as Errors&#8239;\u00bb dans le Build Settings du target et exposer autant d'[avertissements suppl\u00e9mentaires](http://boredzo.org/blog/archives/2009-11-07/warnings) que possible. Si vous avez besoin d'ignorer un avertissement specifique, utiliser [Clang's pragma feature](http://clang.llvm.org/docs/UsersManual.html#controlling-diagnostics-via-pragmas).\n\n# Autres guides de style Objective-C\n\nSi le n\u00f4tre n'est pas \u00e0 votre go\u00fbt, consultez ces autres guides:\n\n* [Google](https://google.github.io/styleguide/objcguide.xml)\n* [GitHub](https://github.com/github/objective-c-conventions)\n* [Adium](https://trac.adium.im/wiki/CodingStyle)\n* [Sam Soffes](https://gist.github.com/soffes/812796)\n* [CocoaDevCentral](http://cocoadevcentral.com/articles/000082.php)\n* [Luke Redpath](http://lukeredpath.co.uk/blog/2011/06/28/my-objective-c-style-guide/)\n* [Marcus Zarra](http://www.cimgf.com/zds-code-style-guide/)\n"}, {"repo": "newsapps/beeswithmachineguns", "language": "Python", "readme_contents": "h4. Bees with Machine Guns!\n\nA utility for arming (creating) many bees (micro EC2 instances) to attack (load test) targets (web applications).\n\nAlso, retribution for \"this shameful act\":http://kottke.org/10/10/tiny-catapult-for-throwing-pies-at-bees against a proud hive.\n\nh2. Dependencies\n\n* Python 2.6 - 3.6\n* boto\n* paramiko\n\nh2. Installation for users\n\n<pre>\npip install https://github.com/newsapps/beeswithmachineguns/archive/master.zip\n</pre>\n\nh2. Installation for developers (w/ virtualenv + virtualenvwrapper)\n\n<pre>\ngit clone git://github.com/newsapps/beeswithmachineguns.git\ncd beeswithmachineguns\nmkvirtualenv --no-site-packages beesenv\neasy_install pip\npip install -r requirements.txt\n</pre>\n\nh2. Configuring AWS credentials\n\nBees uses boto to communicate with EC2 and thus supports all the same methods of storing credentials that it does.  These include declaring environment variables, machine-global configuration files, and per-user configuration files. You can read more about these options on \"boto's configuration page\":http://code.google.com/p/boto/wiki/BotoConfig.\n\nAt minimum, create a .boto file in your home directory with the following contents:\n\n<pre>\n[Credentials]\naws_access_key_id = <your access key>\naws_secret_access_key = <your secret key>\n</pre>\n\nThe credentials used must have sufficient access to EC2.\n\nMake sure the .boto file is only accessible by the current account:\n\n<pre>\nchmod 600 .boto\n</pre>\n\nh2. Usage\n\nA typical bees session looks something like this:\n\n<pre>\nbees up -s 4 -g public -k frakkingtoasters\nbees attack -n 10000 -c 250 -u http://www.ournewwebbyhotness.com/\nbees down\n</pre>\n\nA bees session where this is being called from a python file, while specifying content type and a payload file.\nThis is a working example, all of these objects exist in the us-east-1 region.\n\n<pre>\nimport bees\nimport json\n\nsOptions = '{\"post_file\":\"data.json\",\"contenttype\":\"application/json\"}'\noptions = json.loads(sOptions)\n\nbees.up(1,'bees-sg','us-east-1b','ami-5d155d37','m3.medium','ubuntu','commerce-bees','subnet-b12880e8')\nbees.attack('<URL TO TEST>',2,2,**options)\nbees.down()\n</pre>\n\nIn this case the data.json is a simple json file, mind the path.\n\nThis spins up 4 servers in security group 'public' using the EC2 keypair 'frakkingtoasters', whose private key is expected to reside at ~/.ssh/frakkingtoasters.pem.\n\n*Note*: the default EC2 security group is called 'default' and by default it locks out SSH access. I recommend creating a 'public' security group for use with the bees and explicitly opening port 22 on that group.\n\nIt then uses those 4 servers to send 10,000 requests, 250 at a time, to attack OurNewWebbyHotness.com.\n\nLastly, it spins down the 4 servers.  *Please remember to do this*--we aren't responsible for your EC2 bills.\n\nIf you wanted 3 agents requesting url A and one requesting url B, your attack would look as follows (empty url -> use previous):\n\n<pre>\nbees attack -n 10000 -c 250 -u 'http://url.a,,,http://url.b'\n</pre>\n\nFor complete options type:\n\n<pre>\nbees -h\n</pre>\n\nh2. Introduction to additions:\n\nh4. Additions contributed Hurl integration and multi regional testing.\n\n\n  *hurl* is an http server load tester similar to ab/siege/weighttp/wrk with support for multithreading, parallelism, ssl, url ranges, and an api-server for querying the running performance statistics.  *hurl* is primarily useful for benchmarking http server applications.\nFor more information about *hurl* please visit https://github.com/VerizonDigital/hlx\n\n  Multi regional testing was added so user can call up multiple bees from different regions simultaneously. Users have the ability to \u201cup\u201d, \u201cattack\u201d, and  \u201cdown\u201d instances from single command. \u201cregions.json\u201d file is supplied which contains public ami images with hurl pre installed for all regions.\n\n\n*What kind of changes were made that's different from the old?*\n  Instead of writing bees information into a single ~/.bees file, each zone recognized in arguments creates a new unique bees file. Bees.py was modified to read these files. Up, attack, and down functions are run with threads.\n\nexample .bees files in user home directory\n\n<pre>\n$ ls ~/.bees* | xargs -0 basename\n.bees.ap-southeast-1b\n.bees.eu-west-1b\n.bees.us-west-2b\n</pre>\n\n\nh4. Motivation\n\nHaving the ability to generate a lot of HTTPS requests from many different regions around the world allows us to better test our platforms and services. This is also real helpful when there are tools that need to be tested for such things as location of requests.\n\n\nh4. Hurl Usage\n\n\nh4. bees up\n\n  Command line arguments are still the same however to add multiple zones with multiple amis, the values must be comma delimited. The ami and zones must also be in same order for it to work. So for example \u201c-i ami-zone1,ami-zone2,ami-zone3 -z zone1,zone2,zone3\u201d.\n\n\n<pre>\n  ./bees up -s 2 -k bees -g bees2 -l ubuntu -i ami-9342c0e0,ami-fd489d\n9e,ami-e8c93e88 -z eu-west-1b,ap-southeast-1b,us-west-2b\n</pre>\n\nh4. bees attack\n\n  In order to use the hurl platform, --hurl or -j must be supplied. Attacks will run concurrently and return a summarized output. The output is summarized per region. More information can be seen if user supplies the -o, --long_output options.\n\n<pre>\n./bees attack --hurl -u $testurl -S20 -M1000 -H \"Accept : text/html\"\n</pre>\n\nh4. bees down\n\n  Bringing down bees is the same and will bring down all bees for all regions\n\n<pre>\n./bees down\n</pre>\n\n\n*regions used*: eu-west-1b,ap-southeast-1b,us-west-2b\n\nSome options were added to work with hurl\n\nh4. Examples\n\n<pre>\n$ ./bees --help\nUsage: \nbees COMMAND [options]\n\nBees with Machine Guns\n\nA utility for arming (creating) many bees (small EC2 instances) to attack\n(load test) targets (web applications).\n\ncommands:\n  up      Start a batch of load testing servers.\n  attack  Begin the attack on a specific url.\n  down    Shutdown and deactivate the load testing servers.\n  report  Report the status of the load testing servers.\n    \n\nOptions:\n  -h, --help            show this help message and exit\n\n  up:\n    In order to spin up new servers you will need to specify at least the\n    -k command, which is the name of the EC2 keypair to use for creating\n    and connecting to the new servers. The bees will expect to find a .pem\n    file with this name in ~/.ssh/. Alternatively, bees can use SSH Agent\n    for the key.\n\n    -k KEY, --key=KEY   The ssh key pair name to use to connect to the new\n                        servers.\n    -s SERVERS, --servers=SERVERS\n                        The number of servers to start (default: 5).\n    -g GROUP, --group=GROUP\n                        The security group(s) to run the instances under\n                        (default: default).\n    -z ZONE, --zone=ZONE\n                        The availability zone to start the instances in\n                        (default: us-east-1d).\n    -i INSTANCE, --instance=INSTANCE\n                        The instance-id to use for each server from (default:\n                        ami-ff17fb96).\n    -t TYPE, --type=TYPE\n                        The instance-type to use for each server (default:\n                        t1.micro).\n    -l LOGIN, --login=LOGIN\n                        The ssh username name to use to connect to the new\n                        servers (default: newsapps).\n    -v SUBNET, --subnet=SUBNET\n                        The vpc subnet id in which the instances should be\n                        launched. (default: None).\n    -b BID, --bid=BID   The maximum bid price per spot instance (default:\n                        None).\n\n  attack:\n    Beginning an attack requires only that you specify the -u option with\n    the URL you wish to target.\n\n    -u URL, --url=URL   URL of the target to attack.\n    -K KEEP_ALIVE, --keepalive=KEEP_ALIVE\n                        Keep-Alive connection.\n    -p POST_FILE, --post-file=POST_FILE\n                        The POST file to deliver with the bee's payload.\n    -m MIME_TYPE, --mime-type=MIME_TYPE\n                        The MIME type to send with the request.\n    -n NUMBER, --number=NUMBER\n                        The number of total connections to make to the target\n                        (default: 1000).\n    -C COOKIES, --cookies=COOKIES\n                        Cookies to send during http requests. The cookies\n                        should be passed using standard cookie formatting,\n                        separated by semi-colons and assigned with equals\n                        signs.\n    -Z CIPHERS, --ciphers=CIPHERS\n                        Openssl SSL/TLS cipher name(s) to use for negotiation.  Passed\n                        directly to ab's -Z option.  ab-only.\n    -c CONCURRENT, --concurrent=CONCURRENT\n                        The number of concurrent connections to make to the\n                        target (default: 100).\n    -H HEADERS, --headers=HEADERS\n                        HTTP headers to send to the target to attack. Multiple\n                        headers should be separated by semi-colons, e.g\n                        header1:value1;header2:value2\n    -e FILENAME, --csv=FILENAME\n                        Store the distribution of results in a csv file for\n                        all completed bees (default: '').\n    -P CONTENTTYPE, --contenttype=CONTENTTYPE\n                        ContentType header to send to the target of the\n                        attack.\n    -S SECONDS, --seconds=SECONDS\n                        hurl only: The number of total seconds to attack the\n                        target (default: 60).\n    -X VERB, --verb=VERB\n                        hurl only: Request command -HTTP verb to use\n                        -GET/PUT/etc. Default GET\n    -M RATE, --rate=RATE\n                        hurl only: Max Request Rate.\n    -a THREADS, --threads=THREADS\n                        hurl only: Number of parallel threads. Default: 1\n    -f FETCHES, --fetches=FETCHES\n                        hurl only: Num fetches per instance.\n    -d TIMEOUT, --timeout=TIMEOUT\n                        hurl only: Timeout (seconds).\n    -E SEND_BUFFER, --send_buffer=SEND_BUFFER\n                        hurl only: Socket send buffer size.\n    -F RECV_BUFFER, --recv_buffer=RECV_BUFFER\n                        hurl only: Socket receive buffer size.\n    -T TPR, --tpr=TPR   The upper bounds for time per request. If this option\n                        is passed and the target is below the value a 1 will\n                        be returned with the report details (default: None).\n    -R RPS, --rps=RPS   The lower bounds for request per second. If this\n                        option is passed and the target is above the value a 1\n                        will be returned with the report details (default:\n                        None).\n    -A basic_auth, --basic_auth=basic_auth\n                        BASIC authentication credentials, format auth-\n                        username:password (default: None).\n    -j, --hurl          use hurl\n    -o, --long_output   display hurl output\n    -L, --responses_per\n                        hurl only: Display http(s) response codes per interval\n                        instead of request statistics\n</pre>\n\nA bringing up bees example\n\n<pre>\n$ ./bees up -s 2 -k bees -g bees2 -l ubuntu -i ami-9342c0e0,ami-fd489d\n9e,ami-e8c93e88 -z eu-west-1b,ap-southeast-1b,us-west-2b\nConnecting to the hive.\nGroupId found: bees2\nPlacement: eu-west-1b\nAttempting to call up 2 bees.\nConnecting to the hive.\nGroupId found: bees2\nPlacement: ap-southeast-1b\nAttempting to call up 2 bees.\nConnecting to the hive.\nGroupId found: bees2\nPlacement: us-west-2b\nAttempting to call up 2 bees.\nWaiting for bees to load their machine guns...\nWaiting for bees to load their machine guns...\n.\nWaiting for bees to load their machine guns...\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\nBee i-5568c1d9 is ready for the attack.\nBee i-5668c1da is ready for the attack.\nBee i-2cf8aba2 is ready for the attack.\nThe swarm has assembled 2 bees.\nBee i-2bf8aba5 is ready for the attack.\nThe swarm has assembled 2 bees.\nBee i-d05a6c08 is ready for the attack.\nBee i-d15a6c09 is ready for the attack.\nThe swarm has assembled 2 bees.\n\n$ ./bees report\nRead 2 bees from the roster: eu-west-1b\nBee i-5568c1d9: running @ 54.194.192.20\nBee i-5668c1da: running @ 54.194.197.233\nRead 2 bees from the roster: ap-southeast-1b\nBee i-2cf8aba2: running @ 52.77.228.132\nBee i-2bf8aba5: running @ 52.221.250.224\nRead 2 bees from the roster: us-west-2b\nBee i-d05a6c08: running @ 54.187.100.142\nBee i-d15a6c09: running @ 54.201.177.125\n</pre>\n\n\nA bees attack example\n\n<pre>\n$ ./bees attack --hurl -u $testurl -S20 -M1000 -H \"Accept : text/html\"\neu-west-1b\nRead 2 bees from the roster: eu-west-1b\nConnecting to the hive.\nAssembling bees.\nap-southeast-1b\nRead 2 bees from the roster: ap-southeast-1b\nConnecting to the hive.\nAssembling bees.\nus-west-2b\nRead 2 bees from the roster: us-west-2b\nConnecting to the hive.\nAssembling bees.\nEach of 2 bees will fire 500 rounds, 50 at a time.\nStinging URL so it will be cached for the attack.\nOrganizing the swarm.\nBee 0 is joining the swarm.\nBee 1 is joining the swarm.\nEach of 2 bees will fire 500 rounds, 50 at a time.\nStinging URL so it will be cached for the attack.\nOrganizing the swarm.\nBee 0 is joining the swarm.\nBee 1 is joining the swarm.\nBee 1 is firing her machine gun. Bang bang!\nBee 0 is firing her machine gun. Bang bang!\nEach of 2 bees will fire 500 rounds, 50 at a time.\nStinging URL so it will be cached for the attack.\nOrganizing the swarm.\nBee 0 is joining the swarm.\nBee 1 is joining the swarm.\nBee 1 is firing her machine gun. Bang bang!\nBee 0 is firing her machine gun. Bang bang!\nBee 0 is firing her machine gun. Bang bang!\nBee 1 is firing her machine gun. Bang bang!\nOffensive complete.\n\nSummarized Results\n     Total bytes:               32806393\n     Seconds:                   20\n     Connect-ms-max:            8.751000\n     1st-resp-ms-max:           288.797000\n     1st-resp-ms-mean:          41.120797\n     Fetches/sec mean:          881.607553\n     connect-ms-min:            0.000000\n     Total fetches:             35274\n     bytes/sec mean:            819934.329261\n     end2end-ms-min mean:       7.538500\n     mean-bytes-per-conn:       930.044494\n     connect-ms-mean:           0.022659\n\nResponse Codes:\n     2xx:                       372\n     3xx:                       0\n     4xx:                       34802\n     5xx:                       0\n\nMission Assessment: Target crushed bee offensive.\nThe swarm is awaiting new orders.\nOffensive complete.\n\nSummarized Results\n     Total bytes:               7820249\n     Seconds:                   20\n     Connect-ms-max:            198.442000\n     1st-resp-ms-max:           799.969000\n     1st-resp-ms-mean:          183.104679\n     Fetches/sec mean:          265.758560\n     connect-ms-min:            0.000000\n     Total fetches:             10633\n     bytes/sec mean:            195457.360660\n     end2end-ms-min mean:       167.372500\n     mean-bytes-per-conn:       735.470800\n     connect-ms-mean:           1.685486\n\nResponse Codes:\n     2xx:                       423\n     3xx:                       0\n     4xx:                       10110\n     5xx:                       0\n\nMission Assessment: Target crushed bee offensive.\nThe swarm is awaiting new orders.\nOffensive complete.\n\nSummarized Results\n     Total bytes:               26038521\n     Seconds:                   20\n     Connect-ms-max:            15.233000\n     1st-resp-ms-max:           401.819000\n     1st-resp-ms-mean:          42.217669\n     Fetches/sec mean:          873.584785\n     connect-ms-min:            0.000000\n     Total fetches:             34953\n     bytes/sec mean:            650784.075365\n     end2end-ms-min mean:       11.345000\n     mean-bytes-per-conn:       744.958106\n     connect-ms-mean:           0.037327\n\nResponse Codes:\n     2xx:                       411\n     3xx:                       0\n     4xx:                       34442\n     5xx:                       0\n\nMission Assessment: Target crushed bee offensive.\nThe swarm is awaiting new orders.\n</pre>\n\nA bees attack example with --long_output\n\n<pre>\n$ ./bees attack --hurl -u $testurl -S20 -M1000 -H \"Accept : text/html\" --long_output\neu-west-1b\nRead 2 bees from the roster: eu-west-1b\nConnecting to the hive.\nAssembling bees.\nap-southeast-1b\nRead 2 bees from the roster: ap-southeast-1b\nConnecting to the hive.\nAssembling bees.\nus-west-2b\nRead 2 bees from the roster: us-west-2b\nConnecting to the hive.\nAssembling bees.\nEach of 2 bees will fire 500 rounds, 50 at a time.\nStinging URL so it will be cached for the attack.\nOrganizing the swarm.\nBee 0 is joining the swarm.\nBee 1 is joining the swarm.\nEach of 2 bees will fire 500 rounds, 50 at a time.\nStinging URL so it will be cached for the attack.\nOrganizing the swarm.\nBee 0 is joining the swarm.\nBee 1 is joining the swarm.\nEach of 2 bees will fire 500 rounds, 50 at a time.\nStinging URL so it will be cached for the attack.\nOrganizing the swarm.\nBee 0 is joining the swarm.\nBee 1 is joining the swarm.\nBee 0 is firing her machine gun. Bang bang!\nBee 1 is firing her machine gun. Bang bang!\nBee 1 is firing her machine gun. Bang bang!\nBee 0 is firing her machine gun. Bang bang!\nBee 0 is firing her machine gun. Bang bang!\nBee 1 is firing her machine gun. Bang bang!\nhurl http://can.192bf.transactcdn.com/00192BF/test.html/config.workflow:ContinueWarranty -p 50  -H \"Accept : text/html\" -H \"Content-Type : text/plain\" -o /tmp/tmp.aAojMFs3ob -l 20 -A 1000 -j\n\ni-fb457323\nec2-54-186-204-52.us-west-2.compute.amazonaws.com\nRunning 1 threads 50 parallel connections per thread with 1 reqests per connection\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|    Cmpltd /     Total |    IdlKil |    Errors | kBytes Recvd |   Elapsed |       Req/s |      MB/s |\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|         0 /         0 |         0 |         0 |         0.00 |     0.50s |       0.00s |     0.00s |\n|       505 /       505 |         0 |         0 |       313.02 |     1.00s |    1007.98s |     0.61s |\n|       970 /       970 |         0 |         0 |       633.81 |     1.50s |     930.00s |     0.63s |\n|      1442 /      1442 |         0 |         0 |       961.08 |     2.00s |     944.00s |     0.64s |\n|      1900 /      1900 |         0 |         0 |      1276.81 |     2.50s |     916.00s |     0.62s |\n|      2376 /      2376 |         0 |         0 |      1606.85 |     3.00s |     952.00s |     0.64s |\n|      2835 /      2835 |         0 |         0 |      1922.85 |     3.50s |     918.00s |     0.62s |\n|      3310 /      3310 |         0 |         0 |      2252.20 |     4.00s |     950.00s |     0.64s |\n|      3769 /      3769 |         0 |         0 |      2568.62 |     4.50s |     918.00s |     0.62s |\n|      4243 /      4243 |         0 |         0 |      2897.27 |     5.00s |     946.11s |     0.64s |\n|      4706 /      4706 |         0 |         0 |      3215.84 |     5.50s |     926.00s |     0.62s |\n|      5178 /      5178 |         0 |         0 |      3543.10 |     6.00s |     944.00s |     0.64s |\n|      5641 /      5641 |         0 |         0 |      3862.09 |     6.50s |     926.00s |     0.62s |\n|      6114 /      6114 |         0 |         0 |      4190.05 |     7.00s |     946.00s |     0.64s |\n|      6581 /      6581 |         0 |         0 |      4511.81 |     7.50s |     934.00s |     0.63s |\n|      7053 /      7053 |         0 |         0 |      4839.07 |     8.00s |     944.00s |     0.64s |\n|      7514 /      7514 |         0 |         0 |      5156.25 |     8.50s |     922.00s |     0.62s |\n|      7975 /      7975 |         0 |         0 |      5475.88 |     9.00s |     920.16s |     0.62s |\n|      8450 /      8450 |         0 |         0 |      5803.62 |     9.50s |     950.00s |     0.64s |\n|      8910 /      8910 |         0 |         0 |      6122.53 |    10.00s |     920.00s |     0.62s |\n|      9382 /      9382 |         0 |         0 |      6447.58 |    10.50s |     944.00s |     0.63s |\n|      9844 /      9844 |         0 |         0 |      6766.37 |    11.00s |     924.00s |     0.62s |\n|     10316 /     10316 |         0 |         0 |      7093.14 |    11.50s |     944.00s |     0.64s |\n|     10778 /     10778 |         0 |         0 |      7411.51 |    12.00s |     924.00s |     0.62s |\n|     11250 /     11250 |         0 |         0 |      7738.70 |    12.50s |     944.00s |     0.64s |\n|     11710 /     11710 |         0 |         0 |      8056.08 |    13.00s |     920.00s |     0.62s |\n|     12184 /     12184 |         0 |         0 |      8384.46 |    13.50s |     946.11s |     0.64s |\n|     12644 /     12644 |         0 |         0 |      8701.20 |    14.00s |     920.00s |     0.62s |\n|     13119 /     13119 |         0 |         0 |      9030.51 |    14.50s |     950.00s |     0.64s |\n|     13582 /     13582 |         0 |         0 |      9349.72 |    15.00s |     926.00s |     0.62s |\n|     14053 /     14053 |         0 |         0 |      9676.28 |    15.50s |     942.00s |     0.64s |\n|     14516 /     14516 |         0 |         0 |      9994.85 |    16.00s |     926.00s |     0.62s |\n|     14987 /     14987 |         0 |         0 |     10321.41 |    16.50s |     942.00s |     0.64s |\n|     15450 /     15450 |         0 |         0 |     10640.41 |    17.00s |     926.00s |     0.62s |\n|     15922 /     15922 |         0 |         0 |     10967.66 |    17.50s |     944.00s |     0.64s |\n|     16386 /     16386 |         0 |         0 |     11287.13 |    18.00s |     926.15s |     0.62s |\n|     16386 /     16386 |         0 |         0 |     11287.13 |    18.50s |       0.00s |     0.00s |\n|     16855 /     16855 |         0 |         0 |     11612.32 |    19.00s |     938.00s |     0.64s |\n|     17320 /     17320 |         0 |         0 |     11932.69 |    19.50s |     930.00s |     0.63s |\n|     17794 /     17794 |         0 |         0 |     12261.34 |    20.00s |     948.00s |     0.64s |\n\nBee: i-fb457323\nmax-parallel:           50\n1st-resp-ms-min:        10.036\nresponse-codes\n        200:            184\n        403:            17560\nseconds:                20.006\nconnect-ms-max:         8.729\n1st-resp-ms-max:        130.893\nbytes:                  16541472.0\n1st-resp-ms-mean:       40.5336982642\nend2end-ms-mean:        40.5487644838\nfetches-per-sec:        889.433170049\nconnect-ms-min:         0.0\nfetches:                17794\nbytes-per-sec:          826825.552334\nend2end-ms-min:         10.053\nend2end-ms-max:         130.907\nmean-bytes-per-conn:    929.609531303\nconnect-ms-mean:        0.0224927299369\n\n\nhurl http://can.192bf.transactcdn.com/00192BF/test.html/config.workflow:ContinueWarranty -p 50  -H \"Accept : text/html\" -H \"Content-Type : text/plain\" -o /tmp/tmp.PkGEethemi -l 20 -A 1000 -j\n\ni-fa457322\nec2-54-186-127-166.us-west-2.compute.amazonaws.com\nRunning 1 threads 50 parallel connections per thread with 1 reqests per connection\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|    Cmpltd /     Total |    IdlKil |    Errors | kBytes Recvd |   Elapsed |       Req/s |      MB/s |\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|         0 /         0 |         0 |         0 |         0.00 |     0.50s |       0.00s |     0.00s |\n|       499 /       499 |         0 |         0 |       309.51 |     1.00s |     998.00s |     0.60s |\n|       965 /       965 |         0 |         0 |       631.24 |     1.50s |     930.14s |     0.63s |\n|      1435 /      1435 |         0 |         0 |       957.58 |     2.00s |     940.00s |     0.64s |\n|      1900 /      1900 |         0 |         0 |      1279.25 |     2.50s |     930.00s |     0.63s |\n|      2373 /      2373 |         0 |         0 |      1607.67 |     3.00s |     946.00s |     0.64s |\n|      2834 /      2834 |         0 |         0 |      1925.72 |     3.50s |     922.00s |     0.62s |\n|      3306 /      3306 |         0 |         0 |      2253.45 |     4.00s |     944.00s |     0.64s |\n|      3781 /      3781 |         0 |         0 |      2581.00 |     4.50s |     950.00s |     0.64s |\n|      4246 /      4246 |         0 |         0 |      2903.87 |     5.00s |     928.14s |     0.63s |\n|      4701 /      4701 |         0 |         0 |      3217.97 |     5.50s |     910.00s |     0.61s |\n|      5181 /      5181 |         0 |         0 |      3551.25 |     6.00s |     960.00s |     0.65s |\n|      5666 /      5666 |         0 |         0 |      3885.54 |     6.50s |     970.00s |     0.65s |\n|      6135 /      6135 |         0 |         0 |      4210.28 |     7.00s |     938.00s |     0.63s |\n|      6605 /      6605 |         0 |         0 |      4535.90 |     7.50s |     940.00s |     0.64s |\n|      7072 /      7072 |         0 |         0 |      4857.96 |     8.00s |     934.00s |     0.63s |\n|      7553 /      7553 |         0 |         0 |      5191.88 |     8.50s |     962.00s |     0.65s |\n|      8020 /      8020 |         0 |         0 |      5514.13 |     9.00s |     932.14s |     0.63s |\n|      8497 /      8497 |         0 |         0 |      5845.30 |     9.50s |     954.00s |     0.65s |\n|      8966 /      8966 |         0 |         0 |      6168.91 |    10.00s |     938.00s |     0.63s |\n|      9437 /      9437 |         0 |         0 |      6495.93 |    10.50s |     942.00s |     0.64s |\n|      9921 /      9921 |         0 |         0 |      6829.96 |    11.00s |     968.00s |     0.65s |\n|     10389 /     10389 |         0 |         0 |      7154.90 |    11.50s |     936.00s |     0.63s |\n|     10389 /     10389 |         0 |         0 |      7154.90 |    12.00s |       0.00s |     0.00s |\n|     10857 /     10857 |         0 |         0 |      7477.18 |    12.50s |     936.00s |     0.63s |\n|     11323 /     11323 |         0 |         0 |      7800.74 |    13.00s |     932.00s |     0.63s |\n|     11790 /     11790 |         0 |         0 |      8124.22 |    13.50s |     932.14s |     0.63s |\n|     12257 /     12257 |         0 |         0 |      8448.48 |    14.00s |     934.00s |     0.63s |\n|     12718 /     12718 |         0 |         0 |      8765.89 |    14.50s |     922.00s |     0.62s |\n|     13191 /     13191 |         0 |         0 |      9094.32 |    15.00s |     946.00s |     0.64s |\n|     13670 /     13670 |         0 |         0 |      9424.86 |    15.50s |     958.00s |     0.65s |\n|     14133 /     14133 |         0 |         0 |      9746.34 |    16.00s |     926.00s |     0.63s |\n|     14603 /     14603 |         0 |         0 |     10070.01 |    16.50s |     940.00s |     0.63s |\n|     15067 /     15067 |         0 |         0 |     10392.18 |    17.00s |     928.00s |     0.63s |\n|     15532 /     15532 |         0 |         0 |     10712.58 |    17.50s |     928.14s |     0.62s |\n|     16012 /     16012 |         0 |         0 |     11045.87 |    18.00s |     960.00s |     0.65s |\n|     16487 /     16487 |         0 |         0 |     11372.79 |    18.50s |     950.00s |     0.64s |\n|     16963 /     16963 |         0 |         0 |     11703.30 |    19.00s |     952.00s |     0.65s |\n|     17451 /     17451 |         0 |         0 |     12040.73 |    19.50s |     976.00s |     0.66s |\n|     17919 /     17919 |         0 |         0 |     12365.67 |    20.00s |     936.00s |     0.63s |\n\nBee: i-fa457322\nmax-parallel:           50\n1st-resp-ms-min:        7.623\nresponse-codes\n        200:            183\n        403:            17686\nseconds:                20.006\nconnect-ms-max:         8.547\n1st-resp-ms-max:        140.328\nbytes:                  16676307.0\n1st-resp-ms-mean:       39.7687282444\nend2end-ms-mean:        39.7864872125\nfetches-per-sec:        895.681295611\nconnect-ms-min:         0.0\nfetches:                17919\nbytes-per-sec:          833565.280416\nend2end-ms-min:         7.636\nend2end-ms-max:         140.342\nmean-bytes-per-conn:    930.649422401\nconnect-ms-mean:        0.0225320387263\n\n\nOffensive complete.\n\nSummarized Results\n     Total bytes:               33217779\n     Seconds:                   20\n     Connect-ms-max:            8.729000\n     1st-resp-ms-max:           140.328000\n     1st-resp-ms-mean:          40.151213\n     Fetches/sec mean:          892.557233\n     connect-ms-min:            0.000000\n     Total fetches:             35713\n     bytes/sec mean:            830195.416375\n     end2end-ms-min mean:       8.844500\n     mean-bytes-per-conn:       930.129477\n     connect-ms-mean:           0.022512\n\nResponse Codes:\n     2xx:                       367\n     3xx:                       0\n     4xx:                       35246\n     5xx:                       0\n\nMission Assessment: Target crushed bee offensive.\nThe swarm is awaiting new orders.\nhurl http://can.192bf.transactcdn.com/00192BF/test.html/config.workflow:ContinueWarranty -p 50  -H \"Accept : text/html\" -H \"Content-Type : text/plain\" -o /tmp/tmp.L7eQsLiKs9 -l 20 -A 1000 -j\n\ni-9e6fc612\nec2-54-194-180-232.eu-west-1.compute.amazonaws.com\nRunning 1 threads 50 parallel connections per thread with 1 reqests per connection\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|    Cmpltd /     Total |    IdlKil |    Errors | kBytes Recvd |   Elapsed |       Req/s |      MB/s |\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|         0 /         0 |         0 |         0 |         0.00 |     0.50s |       0.00s |     0.00s |\n|       484 /       484 |         0 |         0 |       220.82 |     1.00s |     968.00s |     0.43s |\n|       957 /       957 |         0 |         0 |       463.33 |     1.50s |     944.11s |     0.47s |\n|      1409 /      1409 |         0 |         0 |       692.96 |     2.00s |     904.00s |     0.45s |\n|      1872 /      1872 |         0 |         0 |       930.33 |     2.50s |     926.00s |     0.46s |\n|      2345 /      2345 |         0 |         0 |      1170.94 |     3.00s |     946.00s |     0.47s |\n|      2803 /      2803 |         0 |         0 |      1405.75 |     3.50s |     916.00s |     0.46s |\n|      3259 /      3259 |         0 |         0 |      1637.65 |     4.00s |     912.00s |     0.45s |\n|      3729 /      3729 |         0 |         0 |      1878.61 |     4.50s |     940.00s |     0.47s |\n|      4190 /      4190 |         0 |         0 |      2112.86 |     5.00s |     922.00s |     0.46s |\n|      4645 /      4645 |         0 |         0 |      2346.13 |     5.50s |     908.18s |     0.45s |\n|      5108 /      5108 |         0 |         0 |      2581.82 |     6.00s |     926.00s |     0.46s |\n|      5566 /      5566 |         0 |         0 |      2816.64 |     6.50s |     916.00s |     0.46s |\n|      6035 /      6035 |         0 |         0 |      3055.19 |     7.00s |     938.00s |     0.47s |\n|      6501 /      6501 |         0 |         0 |      3294.11 |     7.50s |     932.00s |     0.47s |\n|      6928 /      6928 |         0 |         0 |      3510.92 |     8.00s |     854.00s |     0.42s |\n|      7381 /      7381 |         0 |         0 |      3743.17 |     8.50s |     906.00s |     0.45s |\n|      7851 /      7851 |         0 |         0 |      3981.82 |     9.00s |     940.00s |     0.47s |\n|      8308 /      8308 |         0 |         0 |      4216.12 |     9.50s |     912.18s |     0.46s |\n|      8757 /      8757 |         0 |         0 |      4444.00 |    10.00s |     898.00s |     0.45s |\n|      9218 /      9218 |         0 |         0 |      4680.35 |    10.50s |     922.00s |     0.46s |\n|      9690 /      9690 |         0 |         0 |      4920.66 |    11.00s |     944.00s |     0.47s |\n|     10158 /     10158 |         0 |         0 |      5159.12 |    11.50s |     936.00s |     0.47s |\n|     10627 /     10627 |         0 |         0 |      5398.73 |    12.00s |     938.00s |     0.47s |\n|     11104 /     11104 |         0 |         0 |      5641.39 |    12.50s |     954.00s |     0.47s |\n|     11576 /     11576 |         0 |         0 |      5883.38 |    13.00s |     944.00s |     0.47s |\n|     12056 /     12056 |         0 |         0 |      6126.94 |    13.50s |     960.00s |     0.48s |\n|     12528 /     12528 |         0 |         0 |      6368.94 |    14.00s |     942.12s |     0.47s |\n|     12997 /     12997 |         0 |         0 |      6606.86 |    14.50s |     938.00s |     0.46s |\n|     13447 /     13447 |         0 |         0 |      6837.57 |    15.00s |     900.00s |     0.45s |\n|     13899 /     13899 |         0 |         0 |      7067.20 |    15.50s |     904.00s |     0.45s |\n|     14378 /     14378 |         0 |         0 |      7312.78 |    16.00s |     958.00s |     0.48s |\n|     14815 /     14815 |         0 |         0 |      7534.72 |    16.50s |     874.00s |     0.43s |\n|     14815 /     14815 |         0 |         0 |      7534.72 |    17.00s |       0.00s |     0.00s |\n|     15290 /     15290 |         0 |         0 |      7778.25 |    17.50s |     950.00s |     0.48s |\n|     15743 /     15743 |         0 |         0 |      8008.39 |    18.00s |     904.19s |     0.45s |\n|     16218 /     16218 |         0 |         0 |      8251.92 |    18.50s |     950.00s |     0.48s |\n|     16676 /     16676 |         0 |         0 |      8484.63 |    19.00s |     916.00s |     0.45s |\n|     17138 /     17138 |         0 |         0 |      8721.49 |    19.50s |     924.00s |     0.46s |\n|     17597 /     17597 |         0 |         0 |      8954.50 |    20.00s |     918.00s |     0.46s |\n\nBee: i-9e6fc612\nmax-parallel:           50\n1st-resp-ms-min:        11.354\nresponse-codes\n        200:            198\n        403:            17349\nseconds:                20.006\nconnect-ms-max:         15.13\n1st-resp-ms-max:        376.028\nbytes:                  13111135.0\n1st-resp-ms-mean:       41.7301567789\nend2end-ms-mean:        41.7460330541\nfetches-per-sec:        879.586124163\nconnect-ms-min:         0.0\nfetches:                17597\nbytes-per-sec:          655360.141957\nend2end-ms-min:         11.37\nend2end-ms-max:         376.044\nmean-bytes-per-conn:    745.07785418\nconnect-ms-mean:        0.0346185102867\n\n\nhurl http://can.192bf.transactcdn.com/00192BF/test.html/config.workflow:ContinueWarranty -p 50  -H \"Accept : text/html\" -H \"Content-Type : text/plain\" -o /tmp/tmp.cDsfCaHBDo -l 20 -A 1000 -j\n\ni-9d6fc611\nec2-54-194-207-186.eu-west-1.compute.amazonaws.com\nRunning 1 threads 50 parallel connections per thread with 1 reqests per connection\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|    Cmpltd /     Total |    IdlKil |    Errors | kBytes Recvd |   Elapsed |       Req/s |      MB/s |\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|         0 /         0 |         0 |         0 |         0.00 |     0.50s |       0.00s |     0.00s |\n|       490 /       490 |         0 |         0 |       222.63 |     1.00s |     980.00s |     0.43s |\n|       958 /       958 |         0 |         0 |       461.10 |     1.50s |     936.00s |     0.47s |\n|      1437 /      1437 |         0 |         0 |       704.57 |     2.00s |     958.00s |     0.48s |\n|      1913 /      1913 |         0 |         0 |       948.61 |     2.50s |     952.00s |     0.48s |\n|      2394 /      2394 |         0 |         0 |      1192.90 |     3.00s |     962.00s |     0.48s |\n|      2868 /      2868 |         0 |         0 |      1435.92 |     3.50s |     948.00s |     0.47s |\n|      3327 /      3327 |         0 |         0 |      1669.34 |     4.00s |     918.00s |     0.46s |\n|      3802 /      3802 |         0 |         0 |      1912.88 |     4.50s |     948.10s |     0.47s |\n|      4265 /      4265 |         0 |         0 |      2147.93 |     5.00s |     926.00s |     0.46s |\n|      4737 /      4737 |         0 |         0 |      2389.92 |     5.50s |     944.00s |     0.47s |\n|      5192 /      5192 |         0 |         0 |      2620.67 |     6.00s |     910.00s |     0.45s |\n|      5663 /      5663 |         0 |         0 |      2862.15 |     6.50s |     942.00s |     0.47s |\n|      6100 /      6100 |         0 |         0 |      3084.09 |     7.00s |     874.00s |     0.43s |\n|      6568 /      6568 |         0 |         0 |      3324.03 |     7.50s |     936.00s |     0.47s |\n|      7030 /      7030 |         0 |         0 |      3558.57 |     8.00s |     924.00s |     0.46s |\n|      7502 /      7502 |         0 |         0 |      3800.57 |     8.50s |     942.12s |     0.47s |\n|      7960 /      7960 |         0 |         0 |      4033.27 |     9.00s |     916.00s |     0.45s |\n|      8410 /      8410 |         0 |         0 |      4263.98 |     9.50s |     900.00s |     0.45s |\n|      8886 /      8886 |         0 |         0 |      4505.92 |    10.00s |     952.00s |     0.47s |\n|      9359 /      9359 |         0 |         0 |      4748.42 |    10.50s |     946.00s |     0.47s |\n|      9809 /      9809 |         0 |         0 |      4977.03 |    11.00s |     900.00s |     0.45s |\n|     10269 /     10269 |         0 |         0 |      5212.87 |    11.50s |     920.00s |     0.46s |\n|     10737 /     10737 |         0 |         0 |      5450.49 |    12.03s |     894.84s |     0.44s |\n|     11184 /     11184 |         0 |         0 |      5679.66 |    12.53s |     894.00s |     0.45s |\n|     11643 /     11643 |         0 |         0 |      5913.09 |    13.03s |     918.00s |     0.46s |\n|     12109 /     12109 |         0 |         0 |      6152.01 |    13.53s |     932.00s |     0.47s |\n|     12575 /     12575 |         0 |         0 |      6388.81 |    14.03s |     932.00s |     0.46s |\n|     13041 /     13041 |         0 |         0 |      6627.73 |    14.53s |     932.00s |     0.47s |\n|     13497 /     13497 |         0 |         0 |      6859.83 |    15.03s |     912.00s |     0.45s |\n|     13946 /     13946 |         0 |         0 |      7090.03 |    15.53s |     898.00s |     0.45s |\n|     14412 /     14412 |         0 |         0 |      7326.42 |    16.03s |     930.14s |     0.46s |\n|     14861 /     14861 |         0 |         0 |      7556.62 |    16.53s |     898.00s |     0.45s |\n|     15319 /     15319 |         0 |         0 |      7789.74 |    17.03s |     916.00s |     0.46s |\n|     15779 /     15779 |         0 |         0 |      8025.58 |    17.53s |     920.00s |     0.46s |\n|     15779 /     15779 |         0 |         0 |      8025.58 |    18.03s |       0.00s |     0.00s |\n|     16239 /     16239 |         0 |         0 |      8259.31 |    18.53s |     920.00s |     0.46s |\n|     16704 /     16704 |         0 |         0 |      8497.29 |    19.03s |     928.14s |     0.46s |\n|     17175 /     17175 |         0 |         0 |      8737.09 |    19.53s |     942.00s |     0.47s |\n|     17628 /     17628 |         0 |         0 |      8968.28 |    20.03s |     906.00s |     0.45s |\n\nBee: i-9d6fc611\nmax-parallel:           50\n1st-resp-ms-min:        11.29\nresponse-codes\n        200:            208\n        403:            17370\nseconds:                20.027\nconnect-ms-max:         15.115\n1st-resp-ms-max:        390.853\nbytes:                  13132194.0\n1st-resp-ms-mean:       41.6057616907\nend2end-ms-mean:        41.6218236432\nfetches-per-sec:        880.211714186\nconnect-ms-min:         0.0\nfetches:                17628\nbytes-per-sec:          655724.471963\nend2end-ms-min:         11.303\nend2end-ms-max:         390.866\nmean-bytes-per-conn:    744.962219197\nconnect-ms-mean:        0.0350904539766\n\n\nOffensive complete.\n\nSummarized Results\n     Total bytes:               26243329\n     Seconds:                   20\n     Connect-ms-max:            15.130000\n     1st-resp-ms-max:           390.853000\n     1st-resp-ms-mean:          41.667959\n     Fetches/sec mean:          879.898919\n     connect-ms-min:            0.000000\n     Total fetches:             35225\n     bytes/sec mean:            655542.306960\n     end2end-ms-min mean:       11.336500\n     mean-bytes-per-conn:       745.020037\n     connect-ms-mean:           0.034854\n\nResponse Codes:\n     2xx:                       406\n     3xx:                       0\n     4xx:                       34719\n     5xx:                       0\n\nMission Assessment: Target crushed bee offensive.\nThe swarm is awaiting new orders.\nhurl http://can.192bf.transactcdn.com/00192BF/test.html/config.workflow:ContinueWarranty -p 50  -H \"Accept : text/html\" -H \"Content-Type : text/plain\" -o /tmp/tmp.jfVcPxIqE5 -l 20 -A 1000 -j\n\ni-02fead8c\nec2-52-77-216-107.ap-southeast-1.compute.amazonaws.com\nRunning 1 threads 50 parallel connections per thread with 1 reqests per connection\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|    Cmpltd /     Total |    IdlKil |    Errors | kBytes Recvd |   Elapsed |       Req/s |      MB/s |\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|         0 /         0 |         0 |         0 |         0.00 |     0.50s |       0.00s |     0.00s |\n|       100 /       100 |         0 |         0 |        23.95 |     1.00s |     200.00s |     0.05s |\n|       250 /       250 |         0 |         0 |        98.11 |     1.50s |     300.00s |     0.14s |\n|       388 /       388 |         0 |         0 |       167.60 |     2.00s |     276.00s |     0.14s |\n|       529 /       529 |         0 |         0 |       239.25 |     2.50s |     282.00s |     0.14s |\n|       673 /       673 |         0 |         0 |       311.39 |     3.00s |     287.43s |     0.14s |\n|       816 /       816 |         0 |         0 |       384.29 |     3.50s |     286.00s |     0.14s |\n|       953 /       953 |         0 |         0 |       452.42 |     4.00s |     274.00s |     0.13s |\n|      1091 /      1091 |         0 |         0 |       522.96 |     4.50s |     276.00s |     0.14s |\n|      1226 /      1226 |         0 |         0 |       591.12 |     5.00s |     270.00s |     0.13s |\n|      1372 /      1372 |         0 |         0 |       664.71 |     5.50s |     292.00s |     0.14s |\n|      1516 /      1516 |         0 |         0 |       736.85 |     6.00s |     288.00s |     0.14s |\n|      1656 /      1656 |         0 |         0 |       808.20 |     6.50s |     280.00s |     0.14s |\n|      1795 /      1795 |         0 |         0 |       877.78 |     7.00s |     278.00s |     0.14s |\n|      1937 /      1937 |         0 |         0 |       950.16 |     7.50s |     283.43s |     0.14s |\n|      2073 /      2073 |         0 |         0 |      1018.41 |     8.00s |     272.00s |     0.13s |\n|      2213 /      2213 |         0 |         0 |      1089.34 |     8.50s |     280.00s |     0.14s |\n|      2356 /      2356 |         0 |         0 |      1161.60 |     9.00s |     286.00s |     0.14s |\n|      2495 /      2495 |         0 |         0 |      1232.02 |     9.50s |     278.00s |     0.14s |\n|      2637 /      2637 |         0 |         0 |      1303.14 |    10.00s |     284.00s |     0.14s |\n|      2779 /      2779 |         0 |         0 |      1375.31 |    10.50s |     284.00s |     0.14s |\n|      2916 /      2916 |         0 |         0 |      1443.86 |    11.00s |     274.00s |     0.13s |\n|      3052 /      3052 |         0 |         0 |      1513.17 |    11.50s |     272.00s |     0.14s |\n|      3194 /      3194 |         0 |         0 |      1584.70 |    12.00s |     283.43s |     0.14s |\n|      3334 /      3334 |         0 |         0 |      1656.06 |    12.50s |     280.00s |     0.14s |\n|      3471 /      3471 |         0 |         0 |      1724.40 |    13.00s |     274.00s |     0.13s |\n|      3605 /      3605 |         0 |         0 |      1793.10 |    13.50s |     268.00s |     0.13s |\n|      3747 /      3747 |         0 |         0 |      1864.22 |    14.00s |     284.00s |     0.14s |\n|      3882 /      3882 |         0 |         0 |      1932.80 |    14.50s |     270.00s |     0.13s |\n|      4026 /      4026 |         0 |         0 |      2004.73 |    15.00s |     288.00s |     0.14s |\n|      4166 /      4166 |         0 |         0 |      2075.87 |    15.50s |     280.00s |     0.14s |\n|      4306 /      4306 |         0 |         0 |      2146.38 |    16.00s |     280.00s |     0.14s |\n|      4451 /      4451 |         0 |         0 |      2220.09 |    16.50s |     289.42s |     0.14s |\n|      4597 /      4597 |         0 |         0 |      2293.05 |    17.00s |     292.00s |     0.14s |\n|      4728 /      4728 |         0 |         0 |      2360.21 |    17.50s |     262.00s |     0.13s |\n|      4865 /      4865 |         0 |         0 |      2428.76 |    18.00s |     274.00s |     0.13s |\n|      5008 /      5008 |         0 |         0 |      2501.44 |    18.50s |     286.00s |     0.14s |\n|      5153 /      5153 |         0 |         0 |      2574.10 |    19.00s |     289.42s |     0.14s |\n|      5292 /      5292 |         0 |         0 |      2645.15 |    19.50s |     278.00s |     0.14s |\n|      5429 /      5429 |         0 |         0 |      2713.91 |    20.00s |     274.00s |     0.13s |\n\nBee: i-02fead8c\nmax-parallel:           50\n1st-resp-ms-min:        167.119\nresponse-codes\n        200:            208\n        403:            5171\nseconds:                20.005\nconnect-ms-max:         194.213\n1st-resp-ms-max:        402.352\nbytes:                  3995143.0\n1st-resp-ms-mean:       179.083958914\nend2end-ms-mean:        179.106678751\nfetches-per-sec:        271.382154461\nconnect-ms-min:         0.0\nfetches:                5429\nbytes-per-sec:          199707.223194\nend2end-ms-min:         167.165\nend2end-ms-max:         402.373\nmean-bytes-per-conn:    735.889298213\nconnect-ms-mean:        1.63028611266\n\n\nhurl http://can.192bf.transactcdn.com/00192BF/test.html/config.workflow:ContinueWarranty -p 50  -H \"Accept : text/html\" -H \"Content-Type : text/plain\" -o /tmp/tmp.Ze2gnkVVd2 -l 20 -A 1000 -j\n\ni-03fead8d\nec2-54-254-220-121.ap-southeast-1.compute.amazonaws.com\nRunning 1 threads 50 parallel connections per thread with 1 reqests per connection\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|    Cmpltd /     Total |    IdlKil |    Errors | kBytes Recvd |   Elapsed |       Req/s |      MB/s |\n+-----------/-----------+-----------+-----------+--------------+-----------+-------------+-----------+\n|         0 /         0 |         0 |         0 |         0.00 |     0.50s |       0.00s |     0.00s |\n|       100 /       100 |         0 |         0 |        23.10 |     1.00s |     199.60s |     0.05s |\n|       250 /       250 |         0 |         0 |        98.11 |     1.50s |     300.00s |     0.15s |\n|       388 /       388 |         0 |         0 |       167.38 |     2.00s |     276.00s |     0.14s |\n|       526 /       526 |         0 |         0 |       237.71 |     2.50s |     276.00s |     0.14s |\n|       669 /       669 |         0 |         0 |       308.92 |     3.00s |     286.00s |     0.14s |\n|       810 /       810 |         0 |         0 |       380.79 |     3.50s |     282.00s |     0.14s |\n|       948 /       948 |         0 |         0 |       449.85 |     4.00s |     276.00s |     0.13s |\n|      1083 /      1083 |         0 |         0 |       518.65 |     4.50s |     270.00s |     0.13s |\n|      1224 /      1224 |         0 |         0 |       589.04 |     5.00s |     281.44s |     0.14s |\n|      1363 /      1363 |         0 |         0 |       659.88 |     5.50s |     278.00s |     0.14s |\n|      1503 /      1503 |         0 |         0 |       729.76 |     6.00s |     280.00s |     0.14s |\n|      1642 /      1642 |         0 |         0 |       800.81 |     6.50s |     278.00s |     0.14s |\n|      1775 /      1775 |         0 |         0 |       867.31 |     7.00s |     266.00s |     0.13s |\n|      1917 /      1917 |         0 |         0 |       939.69 |     7.50s |     284.00s |     0.14s |\n|      2060 /      2060 |         0 |         0 |      1011.53 |     8.00s |     286.00s |     0.14s |\n|      2197 /      2197 |         0 |         0 |      1081.14 |     8.50s |     274.00s |     0.14s |\n|      2331 /      2331 |         0 |         0 |      1147.94 |     9.00s |     268.00s |     0.13s |\n|      2474 /      2474 |         0 |         0 |      1221.26 |     9.50s |     285.43s |     0.14s |\n|      2618 /      2618 |         0 |         0 |      1292.98 |    10.00s |     288.00s |     0.14s |\n|      2756 /      2756 |         0 |         0 |      1363.52 |    10.50s |     276.00s |     0.14s |\n|      2893 /      2893 |         0 |         0 |      1432.07 |    11.00s |     274.00s |     0.13s |\n|      3035 /      3035 |         0 |         0 |      1504.45 |    11.50s |     284.00s |     0.14s |\n|      3170 /      3170 |         0 |         0 |      1572.19 |    12.00s |     270.00s |     0.13s |\n|      3301 /      3301 |         0 |         0 |      1639.35 |    12.50s |     262.00s |     0.13s |\n|      3439 /      3439 |         0 |         0 |      1707.99 |    13.00s |     276.00s |     0.13s |\n|      3574 /      3574 |         0 |         0 |      1777.21 |    13.50s |     269.46s |     0.13s |\n|      3712 /      3712 |         0 |         0 |      1845.64 |    14.00s |     276.00s |     0.13s |\n|      3851 /      3851 |         0 |         0 |      1916.90 |    14.50s |     278.00s |     0.14s |\n|      3987 /      3987 |         0 |         0 |      1984.94 |    15.00s |     272.00s |     0.13s |\n|      4124 /      4124 |         0 |         0 |      2054.97 |    15.50s |     274.00s |     0.14s |\n|      4266 /      4266 |         0 |         0 |      2125.88 |    16.00s |     284.00s |     0.14s |\n|      4408 /      4408 |         0 |         0 |      2198.26 |    16.50s |     284.00s |     0.14s |\n|      4539 /      4539 |         0 |         0 |      2263.73 |    17.00s |     262.00s |     0.13s |\n|      4679 /      4679 |         0 |         0 |      2334.88 |    17.50s |     280.00s |     0.14s |\n|      4822 /      4822 |         0 |         0 |      2406.50 |    18.00s |     285.43s |     0.14s |\n|      4962 /      4962 |         0 |         0 |      2478.07 |    18.50s |     280.00s |     0.14s |\n|      5101 /      5101 |         0 |         0 |      2548.07 |    19.00s |     278.00s |     0.14s |\n|      5240 /      5240 |         0 |         0 |      2618.91 |    19.50s |     278.00s |     0.14s |\n|      5382 /      5382 |         0 |         0 |      2689.82 |    20.00s |     284.00s |     0.14s |\n\nBee: i-03fead8d\nmax-parallel:           50\n1st-resp-ms-min:        167.37\nresponse-codes\n        200:            208\n        403:            5124\nseconds:                20.005\nconnect-ms-max:         197.678\n1st-resp-ms-max:        396.03\nbytes:                  3959940.0\n1st-resp-ms-mean:       180.888643473\nend2end-ms-mean:        180.91185859\nfetches-per-sec:        269.032741815\nconnect-ms-min:         0.0\nfetches:                5382\nbytes-per-sec:          197947.513122\nend2end-ms-min:         167.395\nend2end-ms-max:         396.049\nmean-bytes-per-conn:    735.774804905\nconnect-ms-mean:        1.66231845461\n\n\nOffensive complete.\n\nSummarized Results\n     Total bytes:               7955083\n     Seconds:                   20\n     Connect-ms-max:            197.678000\n     1st-resp-ms-max:           402.352000\n     1st-resp-ms-mean:          179.986301\n     Fetches/sec mean:          270.207448\n     connect-ms-min:            0.000000\n     Total fetches:             10811\n     bytes/sec mean:            198827.368158\n     end2end-ms-min mean:       167.280000\n     mean-bytes-per-conn:       735.832052\n     connect-ms-mean:           1.646302\n\nResponse Codes:\n     2xx:                       416\n     3xx:                       0\n     4xx:                       10295\n     5xx:                       0\n\nMission Assessment: Target crushed bee offensive.\nThe swarm is awaiting new orders.\n(trusty)rawm@localhost:~/beeswithmachineguns$\n</pre>\n\n\nAn example bees down\n\n<pre>\n$ ./bees down\nRead 2 bees from the roster: eu-west-1b\nConnecting to the hive.\nCalling off the swarm for eu-west-1b.\nStood down 2 bees.\nRead 2 bees from the roster: ap-southeast-1b\nConnecting to the hive.\nCalling off the swarm for ap-southeast-1b.\nStood down 2 bees.\nRead 2 bees from the roster: us-west-2b\nConnecting to the hive.\nCalling off the swarm for us-west-2b.\nStood down 2 bees.\n</pre>\n\nh2. The caveat! (PLEASE READ)\n\n(The following was cribbed from our \"original blog post about the bees\":http://blog.apps.chicagotribune.com/2010/07/08/bees-with-machine-guns/.)\n\nIf you decide to use the Bees, please keep in mind the following important caveat: they are, more-or-less a distributed denial-of-service attack in a fancy package and, therefore, if you point them at any server you don\u2019t own you will behaving *unethically*, have your Amazon Web Services account *locked-out*, and be *liable* in a court of law for any downtime you cause.\n\nYou have been warned.\n\nh2. Troubleshooting\n\nh3. EC2 Instances Out Of Sync\n\nIf you find yourself in a situation where 'bees report' seems to be out of sync with EC2 instances you know are (or are not) running:\n* You can reset the BWMG state by deleting ~/.bees.<region>.  Note that this will prevent BWMG from identifying EC2 instances that may now be orphaned by the tool\n* You can manually edit ~/.bees.<region> to add or remove instance IDs and force synchronization with the reality from your EC2 dashboard\n\nThis is helpful in cases where BWMG crashes, EC2 instances are terminated outside of the control of BWMG, or other situations where BWMG is out of sync with reality.\n\n\nh2. Bugs\n\nPlease log your bugs on the \"Github issues tracker\":http://github.com/newsapps/beeswithmachineguns/issues.\n\nh2. Credits\n\nThe bees are a creation of the News Applications team at the Chicago Tribune--visit \"our blog\":http://apps.chicagotribune.com/ and read \"our original post about the project\":http://blog.apps.chicagotribune.com/2010/07/%2008/bees-with-machine-guns/.\n\nInitial refactoring code and inspiration from \"Jeff Larson\":http://github.com/thejefflarson.\n\nMultiple url support from \"timsu\":https://github.com/timsu/beeswithmachineguns.\n\nThanks to everyone who reported bugs against the alpha release.\n\nh2. License\n\nMIT.\n"}, {"repo": "voxmedia/meme", "language": "JavaScript", "readme_contents": "# Meme v.2\n\nContributors: Yuri Victor, Joshua Benton, Matt Montgomery, Ivar Vong, Steve Peters, Flip Stewart, Greg MacWilliam.\n\nMeme is a generator that Vox Media uses to create social sharing images. See working version at [http://www.sbnation.com/a/meme](http://www.sbnation.com/a/meme).\n\n![screenshot](readme.png)\n\n## What's new in version 2.0?\n\n* Refactored into a formal MV* app.\n* Fixed bugs with rendering state and repeat drag-n-drop images.\n* Improved initial rendering with loaded web fonts.\n* Improved cross-origin options: both for base64 images and CORS.\n* Highly (and easily!) customizable editor and theme options.\n* Watermark selector.\n\n## Install\n\n* `git clone https://github.com/voxmedia/meme.git`\n* `bundle install`\n* `bundle exec middleman`\n\nThis will start a local web server running at: `http://localhost:4567/`\n\n## Customization\n\n### Configuration\n\nSettings and controls are configured through `source/javascripts/settings.js.erb`. The [settings file](https://github.com/voxmedia/meme/blob/master/source/javascripts/settings.js.erb) has ample comments to document configuration.\n\n### Fonts\n\nInclude your own fonts in `stylesheets/_fonts.scss`, then add your font options into the [settings file](https://github.com/voxmedia/meme/blob/master/source/javascripts/settings.js.erb#L12).\n\n### Editor theme\n\nSet the [theme-color variable](https://github.com/voxmedia/meme/blob/master/source/stylesheets/_vars.scss#L3) in `source/stylesheets/_vars.scss`. That one color will be tinted across all editor controls.\n\n## Cross-Origin Resources (CORS)\n\nThis is an HTML5 Canvas-based application, and thus comes with some security restrictions when loading graphics across domains (ex: a canvas element on *http://tatooine.com* cannot export with an image hosted on *http://dagobah.com*).\n\nIf you're hosting this application on the same domain that serves your images, then congratulations! You have no problems. However, if you're going through a CDN, then you'll probably encounter some cross-domain security issues; at which time you have two options:\n\n1. Follow this [excellent MDN article](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image) about configuring \"Access-Control-Allow-Origin\" headers. You'll need to enable these headers on your CDN, at which time the Meme app should be able to request images from it.\n\n2. Embed all of your watermark images as base64 data URIs within the `settings.js.erb` file. The asset pipeline's `asset_data_uri` helper method makes this very easy, and effectively embeds all image data within your JavaScript. The downside here is that your JavaScript will become a very large payload as you include more images. In the long term, getting CORS headers configured will be a better option.\n\n## Examples\n\n* http://www.sbnation.com/a/meme\n* https://twitter.com/voxdotcom/status/481671889094340608\n* https://twitter.com/voxdotcom/status/479228288221470721\n* https://twitter.com/voxdotcom/status/481619042545844225\n\n## Contributing\n\n1. Fork it ( https://github.com/voxmedia/meme/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request"}, {"repo": "propublica/guides", "language": null, "readme_contents": "# ProPublica's Nerd Guides\n\n## Table of Contents\n\n1. [Intro: The Design and Structure of a News Application](design-structure.md)\n2. [Data Style Guide](news-apps.md)\n3. [Data Bulletproofing Guide](data-bulletproofing.md)\n\n## License\n\nThese guides are copyright 2018 Pro Publica, Inc. and are licensed under a [Creative Commons BY-NC 3.0](http://creativecommons.org/licenses/by-nc/3.0/) license. You are free to share and to remix them, though not to use them commercially without permission.\n\n## Discuss\n\nYou can submit issues using [Github Issues](https://github.com/propublica/guides/issues).\n\n## Contributing\n\n1. Fork it\n2. Create your branch (`git checkout -b my-guide`)\n3. Commit your changes (`git commit -am \"Proposed Change\"`)\n4. Push your branch (`git push origin my-guide`)\n5. Send a pull request\n"}, {"repo": "censusreporter/censusreporter", "language": "HTML", "readme_contents": "About Census Reporter\n=====================\n\nThe United States Census Bureau provides a massive amount of data about the American people, covering topics from demographics to poverty rates to educational attainment, and at geographical levels ranging from the entire country down to city blocks. As a product of the federal government, the <a href=\"http://factfinder2.census.gov/faces/nav/jsf/pages/index.xhtml\">data is free to use</a>. But for working journalists&mdash;especially those who don't have experience with the particulars of Census data&mdash;navigating these datasets on deadline can be a challenge.\n\nCensus Reporter's goal is to make it easier for journalists to write stories using Census data. Our focus is on the American Community Survey; we want to help people understand what the survey covers and help them quickly find data from places they care about. Census Reporter received <a href=\"http://www.niemanlab.org/2012/10/knight-funding-expands-ires-journalist-friendly-census-site/\">funding from the Knight News Challenge</a>, and primary development took place from March 2013 through June 2014.\n\nThe <a href=\"https://censusreporter.org/\">Census Reporter website</a> includes three primary types of pages: <a href=\"https://censusreporter.org/profiles/16000US5367000-spokane-wa/\">geographical profiles</a>, which provide an overview of data indicators from a particular place; <a href=\"https://censusreporter.org/data/table/?table=B15002&geo_ids=050|04000US17&primary_geo_id=04000US17\">data comparisons</a>, which use tabular, map and distribution formats to show information from a table across a group of geographies; and <a href=\"https://censusreporter.org/topics/income/\">topical overviews</a>, which document the concepts and tables the ACS uses to cover specific subject areas.\n\nIn This Guide\n=============\n\n* [Setting up for local development](#setting-up-for-local-development)\n* [Getting data from our API (the basics)](#getting-data-from-our-api-the-basics)\n    * [Show data](#show-data)\n    * [Get geography metadata](#get-geography-metadata)\n    * [Get geography parents](#get-geography-parents)\n    * [Geography search](#geography-search)\n    * [Table search](#table-search)\n* [Profile pages](#profile-pages)\n    * [The profile page back end](#the-profile-page-back-end)\n    * [The profile page front end](#the-profile-page-front-end)\n        * [Profile map](#profile-map)\n        * [Profile charts](#profile-charts)\n        * [Responsive design](#responsive-design)\n\nSetting up for local development\n================================\n\nCensus Reporter is an open-source project, so not only is the data free to use, so is the code. Developers in South Africa forked this repository to build <a href=\"http://wazimap.co.za/\">Wazi</a>, for example, a site exploring South African data. We'd love it if you'd fork this repository, too, and maybe you even have features you'd like to contribute back!\n\nHere's what you need to know to get a local version of Census Reporter up and running. These instructions assume you're using <a href=\"http://virtualenv.readthedocs.org/en/latest/\">virtualenv</a> and <a href=\"http://virtualenvwrapper.readthedocs.org/en/latest/\">virtualenvwrapper</a> to manage your development environments.\n\nFirst, clone this repository to your machine and move into your new project directory:\n\n    >> git clone git@github.com:censusreporter/censusreporter.git\n    >> cd <your cloned repo dir>\n\nCreate the virtual environment for your local project, activate it and install the required libraries:\n\n    >> mkvirtualenv census --no-site-packages\n    >> workon census\n    >> pip install -r requirements.txt\n\nWith your development environment still active, make sure it has the path settings it will need:\n\n    >> add2virtualenv ./censusreporter\n    >> add2virtualenv ./censusreporter/apps\n\nAnd make sure your development environment knows the proper DJANGO_SETTINGS_MODULE by creating a `postactivate` script ...\n\n    >> cdvirtualenv bin\n    >> touch postactivate\n\n... and then using your favorite editor to add these two lines to your new `postactivate` script:\n\n    export DJANGO_SETTINGS_MODULE='config.dev.settings'\n    echo \"DJANGO_SETTINGS_MODULE set to $DJANGO_SETTINGS_MODULE\"\n\nSave and close the file. Reactivate your development environment so `postactivate` gets triggered, then fire up your local Census Reporter:\n\n    >> deactivate\n    >> workon census\n    >> cd <your cloned repo dir>\n    >> python manage.py runserver\n\nHurray! Your local copy of Census Reporter will be hitting our production data sources, so you should be able to search and browse just like you would on the live website. If you'd like to go a step further, you can <a href=\"https://github.com/censusreporter/census-api\">run the API locally</a>, and even <a href=\"http://censusreporter.tumblr.com/post/73727555158/easier-access-to-acs-data\">load the entire Postgres database locally</a>, as well. But if you're primarily interested in adding features to the Census Reporter website or just seeing how it works, the instructions above should get you going.\n\n**Note** for people who wish to develop for Census Reporter\n\nIf you are running the django server from within the vagrant box, provide the localhost explicitly \n\n    >> python manage.py runserver 0.0.0.0:8000\n\nThe application can now be accessed via localhost:8000 on your browser\n\nGetting data from our API (the basics)\n======================================\n\nAs part of the Census Reporter project, we've loaded ACS data into a Postgres database to make queries significantly easier. The Census Reporter website gets information from this database using the API at api.censusreporter.org. For more extensive API documentation, <a href=\"https://github.com/censusreporter/census-api/blob/master/README.md\">see the census-api repository and README</a>. Here is a basic introduction to the endpoints you're likely to use:\n\n### Show data\nThis endpoint does the heavy lifting for Census Reporter's profile and comparison pages. Given a release code, a table code, and a geography, it will return American Community Survey data. A common call to this endpoint might look like:\n\n    https://api.censusreporter.org/1.0/data/show/latest?table_ids=B01001&geo_ids=16000US5367000\n\nThis will return data for Spokane, WA, from the \"Sex By Age\" table, using the \"latest\" ACS release available. In this case, \"latest\" determines not only the year of release, but also the estimate used. The ACS provides <a href=\"http://www.census.gov/acs/www/guidance_for_data_users/estimates/\">three datasets per year</a>: the 1-year, which uses 12 months of data to arrive at estimates for areas with at least 65,000 residents; the 3-year, which uses 36 months of data and covers areas with at least 20,000 people; and the 5-year, which uses 60 months of data and covers areas of all sizes.\n\nFor this API endpoint, \"latest\" is a shortcut that asks for the most current estimate from the most recent release year, favoring 1-year over 3-year over 5-year data. Because Spokane, WA, has more than 65,000 residents, the API call above would return data from the ACS 2012 1-year release.\n\nYou can ask for a specific release and estimate by exchanging \"latest\" for a release code that looks like `acs{year}_{estimate}yr`. So a call to:\n\n    https://api.censusreporter.org/1.0/data/show/acs2012_5yr?table_ids=B01001&geo_ids=16000US5367000\n\n... would return data for Spokane, WA, from the \"Sex By Age\" table, using the ACS 2012 5-year release.\n\nYou can ask for multiple tables at a time by passing a comma-separated `table_ids` list:\n\n    https://api.censusreporter.org/1.0/data/show/latest?table_ids=B01001,B01002&geo_ids=16000US5367000\n\nAnd you can ask for multiple geographies by passing a comma-separated `geo_ids` list:\n\n    https://api.censusreporter.org/1.0/data/show/latest?table_ids=B01001,B01002&geo_ids=16000US5367000,16000US1714000\n\nOne particularly common use case is to request data for all geographies of a particular class within a particular parent geography, e.g. \"compare all counties in Washington state.\" Identifying each county's geoID individually would be unwieldy, so we added a shortcut for this type of request. Your comma-separated list of `geo_ids` can contain one or more items that use the pipe character to describe a comparison set like this: `{child_summary_level}|{parent_geoid}`.\n\nThe Census uses summary levels to identify classes of geographies (like counties or school districts or census tracts), and each one <a href=\"https://censusreporter.org/topics/geography/\">is represented by a three-digit code</a>. For this API endpoint, \"all counties in Washington state\" can be represented as `050|04000US53`, so a request to:\n\n    https://api.censusreporter.org/1.0/data/show/latest?table_ids=B01001&geo_ids=050|04000US53\n\n... would return \"Sex By Age\" data for all 39 counties in Washington. Great? Great! But hold on, let's talk about this for a second.\n\nSpecifying \"latest\" as the release parameter means we're asking for the most current estimate from the most recent release. Although some of the counties in Washington state are large enough to be in the 1-year release, many are not. Several counties fall into the 3-year release, and several more are small enough to only exist in the 5-year release. Data from different estimates should never be compared, so the API will return data from the lowest common denominator: in this case, the 2012 5-year release.\n\nYou won't have to guess which release you're getting data from, though; the API response from this endpoint will include four objects:\n\n* `release`: metadata about the ACS release that provided the data in this response\n* `tables`: metadata, including title and column information, about the tables requested\n* `data`: the actual data for the geographies requested, including estimates and margins of error, nested according to geoID > table code > estimate|error > column code\n* `geography`: metadata, including geoID and name, about the geographies requested\n\nThe entire response for the \"all counties in Washington\" example above <a href=\"https://gist.github.com/ryanpitts/71517ac65333c72ccb8e\">looks like this</a>; below is an excerpt so you can see what to expect.\n\n    {\n        \"release\": {\n            \"id\": \"acs2012_5yr\",\n            \"name\": \"ACS 2012 5-year\",\n            \"years\": \"2008-2012\"\n        },\n        \"tables\": {\n            \"B01001\": {\n                \"title\": \"Sex by Age\",\n                \"universe\": \"Total Population\",\n                \"denominator_column_id\": \"B01001001\",\n                \"columns\": {\n                    \"B01001001\": {\n                        \"name\": \"Total:\",\n                        \"indent\": 0\n                    },\n                    \"B01001002\": {\n                        \"name\": \"Male:\",\n                        \"indent\": 1\n                    },\n                    ...\n                    \"B01001049\": {\n                        \"name\": \"85 years and over\",\n                        \"indent\": 2\n                    }\n                }\n            }\n        },\n        \"data\": {\n            \"05000US53001\": {\n                \"B01001\": {\n                    \"estimate\": {\n                        \"B01001001\": 18575,\n                        \"B01001002\": 9453,\n                        ...\n                        \"B01001049\": 214\n                    },\n                    \"error\": {\n                        \"B01001001\": 0,\n                        \"B01001002\": 24,\n                        ...\n                        \"B01001049\": 53\n                    }\n                }\n            }\n        },\n        \"geography\": {\n            \"04000US53\": {\n                \"name\": \"Washington\"\n            },\n            \"05000US53047\": {\n                \"name\": \"Okanogan County, WA\"\n            },\n            ...\n            \"05000US53035\": {\n                \"name\": \"Kitsap County, WA\"\n            }\n        }\n    }\n\nNote that Washington state's data is also included in this API response. When you ask for a set of geographies&mdash;in this case, 050|04000US53&mdash;the API will automatically include the parent geography's data so you can perform comparisons.\n\n### Get geography metadata\n\nThis endpoint provides basic information about a specific geography, including name, summary level, land area, and population. A common call to this endpoint might look like:\n\n    https://api.censusreporter.org/1.0/geo/tiger2013/16000US5367000\n\nThis request uses the geoID for Spokane, WA, and returns this JSON:\n\n    {\n        \"geometry\": null,\n        \"type\": \"Feature\",\n        \"properties\": {\n            \"awater\": 1991595,\n            \"display_name\": \"Spokane, WA\",\n            \"simple_name\": \"Spokane\",\n            \"sumlevel\": \"160\",\n            \"population\": 208040,\n            \"full_geoid\": \"16000US5367000\",\n            \"aland\": 178021482\n        }\n    }\n\nIf you append a querystring paramater `geom=true` to your request, the API response's `geometry` <a href=\"https://gist.github.com/ryanpitts/750aacecc167233c5547\">will include geographical coordinates</a> suitable for mapping.\n\nThis endpoint returns Tiger 2012 data for all but one class of geography: congressional districts. Redistricting after the 2010 Decennial Census changed these boundaries, and some states gained or lost entire districts. If you request metadata for a congressional district, the API will return Tiger 2013 data <a href=\"http://www.census.gov/geo/maps-data/data/pdfs/tiger/How_do_I_choose_TIGER_vintage.pdf\">in order to accurately represent redistricting</a>.\n\n### Get geography parents\n\nThis endpoint takes a specific geography and provides metadata for it, along with a list of parent geographies that contain it. A common call to this endpoint might look like:\n\n    https://api.censusreporter.org/1.0/geo/tiger2013/16000US5367000/parents\n\n... which returns results that include name, geoID, summary level, geography class, and percentage of coverage:\n\n    {\n        \"parents\": [\n            {\n                \"sumlevel\": \"160\",\n                \"relation\": \"this\",\n                \"coverage\": 100,\n                \"display_name\": \"Spokane, WA\",\n                \"geoid\": \"16000US5367000\"\n            },\n            {\n                \"sumlevel\": \"050\",\n                \"relation\": \"county\",\n                \"coverage\": 100,\n                \"display_name\": \"Spokane County, WA\",\n                \"geoid\": \"05000US53063\"\n            },\n            {\n                \"sumlevel\": \"310\",\n                \"relation\": \"CBSA\",\n                \"coverage\": 100,\n                \"display_name\": \"Spokane, WA Metro Area\",\n                \"geoid\": \"31000US44060\"\n            },\n            {\n                \"sumlevel\": \"040\",\n                \"relation\": \"state\",\n                \"coverage\": 100,\n                \"display_name\": \"Washington\",\n                \"geoid\": \"04000US53\"\n            },\n            {\n                \"sumlevel\": \"010\",\n                \"relation\": \"nation\",\n                \"coverage\": 100,\n                \"display_name\": \"United States\",\n                \"geoid\": \"01000US\"\n            }\n        ]\n    }\n\n### Geography search\n\nThis endpoint returns metadata for geographies with names that match a text string. A common call to this endpoint might look like:\n\n    https://api.censusreporter.org/1.0/geo/search?q=spo\n\n... which returns results that include each matching geography's summary level, geoID and name:\n\n    {\n      \"results\": [\n        {\n          \"sumlevel\": \"160\",\n          \"full_geoid\": \"16000US5367000\",\n          \"full_name\": \"Spokane, WA\"\n        },\n        {\n          \"sumlevel\": \"160\",\n          \"full_geoid\": \"16000US5367167\",\n          \"full_name\": \"Spokane Valley, WA\"\n        },\n        {\n          \"sumlevel\": \"160\",\n          \"full_geoid\": \"16000US3469810\",\n          \"full_name\": \"Spotswood, NJ\"\n        },\n        ...\n        {\n          \"sumlevel\": \"795\",\n          \"full_geoid\": \"79500US5310504\",\n          \"full_name\": \"Spokane County (Outer)--Cheney City PUMA, WA\"\n        }\n      ]\n    }\n\nYou can limit the search to a particular set of summary levels by passing an optional, comma-separated list in a `sumlevs` argument. The Census Reporter website does this in most cases:\n\n    https://api.censusreporter.org/1.0/geo/search?q=spo&sumlevs=010,020,030,040,050,060,160,250,310,500,610,620,860,950,960,970\n\n### Table search\n\nThis endpoint returns metadata for tables with titles or column names that match a text string. A common call to this endpoint might look like:\n\n    https://api.censusreporter.org/1.0/table/search?q=heat\n\n... which would return metadata for matches that includes table name, table code, table universe and table topics. Column metadata is also included where they matched type is a column:\n\n    [\n        {\n            \"unique_key\": \"B25040\",\n            \"universe\": \"Occupied Housing Units\",\n            \"simple_table_name\": \"House Heating Fuel\",\n            \"id\": \"B25040\",\n            \"table_id\": \"B25040\",\n            \"table_name\": \"House Heating Fuel\",\n            \"type\": \"table\",\n            \"topics\": [\n                \"housing\",\n                \"physical characteristics\"\n            ]\n        },\n        {\n            \"unique_key\": \"B25117\",\n            \"universe\": \"Occupied Housing Units\",\n            \"simple_table_name\": \"Tenure by House Heating Fuel\",\n            \"id\": \"B25117\",\n            \"table_id\": \"B25117\",\n            \"table_name\": \"Tenure by House Heating Fuel\",\n            \"type\": \"table\",\n            \"topics\": [\n                \"housing\",\n                \"physical characteristics\",\n                \"tenure\"\n            ]\n        },\n        ...\n        {\n            \"unique_key\": \"B24126|B24126441\",\n            \"universe\": \"Full-time, Year-round Civilian Employed Female Population 16 Years and Over\",\n            \"simple_table_name\": \"Detailed Occupation for the Full-time, Year-round Civilian Employed Female Population\",\n            \"column_id\": \"B24126441\",\n            \"table_id\": \"B24126\",\n            \"id\": \"B24126441\",\n            \"table_name\": \"Detailed Occupation for the Full-time, Year-round Civilian Employed Female Population 16 Years and Over\",\n            \"type\": \"column\",\n            \"topics\": [\n                \"employment\"\n            ],\n            \"column_name\": \"Heat treating equipment setters, operators, and tenders, metal and plastic\"\n        }\n    ]\n\nMatches against table names will appear first in the response, followed by matches against column names within tables. The `unique_key` value is a combination of table code and column code (if necessary), and is useful as a key for autocomplete libraries like <a href=\"http://twitter.github.io/typeahead.js/\">Typeahead</a>.\n\nProfile pages\n=============\n\nGeographical profile pages provide an overview of important Census data indicators for a particular place. We've divided these data points into five categories: Demographics, Economics, Families, Housing and Social. Each category includes a mix of figures and charts that help you understand what life is like in a community. Profiles also include comparative data, so you can consider statistics from a city, for example, in the context of the metro area and state they're in.\n\nThe Census Reporter website generates profile pages for geographies at the <a href=\"https://censusreporter.org/profiles/01000US-united-states/\">national</a> and <a href=\"https://censusreporter.org/profiles/04000US17-illinois/\">state</a> levels all the way down to <a href=\"https://censusreporter.org/profiles/14000US17031808702-census-tract-808702-cook-il/\">census tracts</a>. If your browser supports geolocation, you can <a href=\"https://censusreporter.org/locate/\">use your current location</a> to easily profile any of the geographies that you're currently in.\n\n### The profile page back end\n\nEach profile page requires queries against a few dozen Census tables. To lighten the database load, profile data has been pre-computed and stored as JSON in an Amazon S3 bucket, so most of these pages should never touch the API. When the Census Reporter app sees a profile request, the <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/views.py\">`GeographyDetail`</a> view <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/views.py#L285\">checks for flat JSON data</a> first, and falls back to <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/profile.py\">a profile generator</a> if necessary.\n\nThe profile generator at `profile.py` does a number of things:\n\n* establishes a connection to the Census Reporter API\n* takes the geoID from the URL and uses the [\"geography parents\" API endpoint](#get-geography-parents) to determine which geographies should be shown as comparative data\n* uses the [\"geography metadata\" endpoint](#get-geography-metadata) to get basic information about each parent as well as the requested geography\n* uses the [\"show data\" endpoint](#show-data) to query each table necessary for the charts and figures on the page\n    * When requesting the profiled geography's total population, a default ACS release is also stored. This lets us flag any data point that comes from a different release; there are cases where a place has a high enough population for the 1-year release, for example, but specific tables have smaller universes that force us to dip into 3-year or 5-year releases to find data.\n    * In many cases, columns are added together for display purposes. For example, creating the \"10-19\" category in the profile page's age distribution chart requires adding together six columns from Table B01001: the male and female versions of \"10 to 14 years,\" \"15 to 17 years,\" and \"18 and 19 years.\"\n    * In many cases, a denominator column is used for division so we can display a percentage.\n    * In some cases, data from more than one table is required. For example, determining a place's \"Mean travel time to work\" requires the total number of workers, found in Table B08006, as well as the aggregate minutes spent commuting, found in Table B08013.\n\nIf the profile generator is invoked, it returns a Python dictionary with this processed data from the API. The `GeographyDetail` view passes this into an `enhance_api_data` method to do a couple more things:\n\n* removes extraneous comparisons, limiting data to the profile geography plus at most two parent geographies\n* calculates index values, which are figures from the profile geography expressed as percentages of a parent geography's value. (These are ultimately used Madlib-style, for phrases like \"a little less than the figure in Washington\")\n* calculates margin of error ratios to determine which data points should be flagged as requiring extra care\n\nOnce this is done, `GeographyDetail` writes everything as flat JSON to an S3 bucket so this process never has to be repeated. Regardless of whether the data came straight from JSON or had to be generated, the `GeographyDetail` view's final job is to use `SafeString()` to hand everything to the template in a format suitable for use as Javascript variables.\n\nThis pattern&mdash;using a generator script to collect and shape data from multiple tables, then storing the results as flat JSON&mdash;is something that could be repeated for new Census Reporter features. We'd like to add deeper category profiles for each of the Demographics, Economics, Families, Housing and Social sections, for example, which could be done by copying and modifying the <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/profile.py#L173\">`geo_profile` method</a> in `profile.py`.\n\n### The profile page front end\n\nThe skeleton of the profile page you see on the Census Reporter website is created by <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/templates/profile/profile.html\">a Django template</a>. The map is filled in by one Javascript library: <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/static/js/tilelayer.js\">`tilelayer.js`</a>, and the charts filled in by another: <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/static/js/charts.js\">`charts.js`</a>.\n\n#### Profile map\n\nThe profile page uses Javascript to call the [\"geography metadata\" endpoint](#get-geography-metadata), using the `geom=true` argument to get boundary coordinates for the chosen place. A tile layer then adds shapes of nearby geographies at the same summary level, which can be used to navigate to their corresponding profile pages. The map will also do some smart centering to account for the box full of place metadata in that part of the page.\n\n#### Profile charts\n\nThe Django template for the profile page creates empty slots for each chart, which are filled on load by `charts.js`. These placeholders look something like:\n\n    <div class=\"column-half\" id=\"chart-histogram-demographics-age-distribution_by_decade-total\" data-stat-type=\"scaled-percentage\" data-chart-title=\"Population by age range\"></div>\n\nThe `column-*` class isn't really important here; that's just a structural setting that gives the block an appropriate amount of width that can be governed with media queries. What we really care about are the `id` and `data-*` attribute values. The `data` attributes provide a place to pass optional information into the chart constructor, and the `id` value tells the constructor what type of chart to draw and which data to use.\n\nAt the bottom of the profile page, we trigger all the charts at once. Profile data is assigned to a Javascript variable:\n\n    profileData = {{ profile_data_json }};\n\nAnd we grab all the chart placeholders with:\n\n    chartContainers = $('[id^=chart-]')\n\nThe <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/templates/profile/profile.html#L437\">`makeCharts()` function</a> then loops through those containers, empties each one of any contents, and builds the variables required for a chart:\n\n    chartDataKey = chartID.replace('chart-','').replace('alt-','')\n    chartDataID = chartDataKey.split('-') #temporary variable\n    chartType = gracefulType(chartDataID[0])\n    chartData = profileData[chartDataID[1]]\n    geographyData = profileData['geography']\n\n##### Required variables\n\n`chartDataKey`: This tells us everything we need to know to recreate this particular chart from a given set of profile data, and we'll use it to populate embed code if a user asks for it. In the example above, this value would be `histogram-demographics-age-distribution_by_decade-total`.\n\n`chartType`: The first bit of our `chartDataKey`, in this case `histogram`, represents the type of chart we want. The `charts.js` library currently supports:\n\n* pie\n* column\n* grouped_column\n* histogram\n* bar\n* grouped_bar\n\nYou'll note that we actually pass this value through a function called `gracefulType`, which allows us to change chart types based on screen width. More on that in a moment.\n\n`chartData`: The rest of our `chartDataKey` provides the path to the data that should fill this chart. We start by assigning this variable a top-level item from `profileData`, in this case `demographics`. Then we use a loop to drill down based on the rest of our keys: `demographics` > `age` > `distribution_by_decade` > `total`. That's where we'll find the data to pass into the chart constructor.\n\n`geographyData`: We also reach into `profileData` for names and summary levels of the chosen place and its parent geographies.\n\n##### Optional variables\n\nPlaceholder containers can also use data attributes to pass optional information to the chart constructor. Our example container uses `data-stat-type` and `data-chart-title`:\n\n    <div class=\"column-half\" id=\"chart-histogram-demographics-age-distribution_by_decade-total\" data-stat-type=\"scaled-percentage\" data-chart-title=\"Population by age range\"></div>\n\nThe `makeCharts()` function will recognize:\n\n`data-chart-title`: A title to place above the chart elements, passed to the chart constructor as `chartChartTitle`. Defaults to `null`, although most charts on Census Reporter's profile pages do assign a value here.\n\n`data-initial-sort`: Used only by pie charts. Determines which category to highlight when the chart is initialized. A placeholder container with `data-initial-sort=\"-value\"` will display the highest data value in the chart on load. Otherwise the first value in the chart will serve as the default state.\n\n`data-stat-type`: Provides formatting hints for the chart's language and display. Standard chart behavior may be overriden with these values:\n\n* **percentage**: Adds a \"%\" character after figures in the chart. Sets chart domain to 0-100. Uses \"rate\" in comparison sentences.\n* **scaled-percentage**: Does the same things as \"percentage,\" but also scales the chart so that the highest category value takes up the full vertical space available.\n* **dollar**: Adds a \"$\" character before figures in the chart. Uses \"amount\" in comparison sentences.\n\n`data-qualifier`: Adds a trailing line below the chart, prepended with an \"*\" character. This is useful when charts require a little extra context. For example, the profile page's <a href=\"https://censusreporter.org/profiles/16000US5367000-spokane-wa/#race\">\"Race & Ethnicity\" column chart</a> adds this explanation: \"Hispanic includes respondents of any race. Other categories are non-Hispanic.\"\n\n#### Responsive design\n\nThe charts on Census Reporter's profile pages are responsive to browser width. They use a combination of CSS media queries and Javascript to accommodate various screen sizes. Media queries take care of changes like column widths and legend placements, and they help arrange the interactive hovercards that provide extra data when a user mouses over or taps a chart element.\n\nJavascript comes into play so we can completely change chart types that won't read well at certain widths. There are a couple functions <a href=\"https://github.com/censusreporter/censusreporter/blob/master/censusreporter/apps/census/templates/profile/profile.html#L425\">at the bottom of the profile template</a> that make this happen:\n\n`lazyRedrawCharts`: This function updates `window.browserWidth` and `window.browserHeight` variables whenever a page is resized, then triggers `makeCharts()` to redraw any charts on the page according to their new available widths. (This is why `makeCharts()` empties out the contents of each container first. So they can be filled again, maybe even with a different chart format.) Realistically, this most likely gets triggered by a user turning a phone or tablet from portrait to landscape orientation, but just in case, the redraw is debounced to avoid a crazy number of events firing off.\n\n    var lazyRedrawCharts = _.debounce(function() {\n        window.browserWidth = document.documentElement.clientWidth;\n        window.browserHeight = document.documentElement.clientHeight;\n        makeCharts();\n    }, 50);\n    $(window).resize(lazyRedrawCharts);\n\n\n`gracefulType`: This function checks `window.browserWidth`, and if it's too narrow to reasonably display a column chart, flips it to a bar chart. This is called by each chart inside the `makeCharts()` function, which is triggered on page load as well as resize thanks to `lazyRedrawCharts`.\n\n    var gracefulType = function(chartType) {\n        if (browserWidth <= 640) {\n            if (chartType == 'column' || chartType == 'histogram') {\n                return 'bar'\n            } else if (chartType == 'grouped_column') {\n                return 'grouped_bar'\n            }\n        }\n        return chartType\n    }\n\nBetween media queries and this Javascript, charts should be useful on phones as much as desktops.\n\nData comparison pages\n=====================\n\nTabular view, map view, distribution view. Docs soon.\n"}, {"repo": "nprapps/app-template", "language": "JavaScript", "readme_contents": "nprviz's Project Template\n=========================\n\n* [About this template](#about-this-template)\n* [Assumptions](#assumptions)\n* [Copy the template](#copy-the-template)\n* [Configure the project](#configure-the-project)\n* [Bootstrap issues](#bootstrap-issues)\n* [Develop with the template](#develop-with-the-template)\n\nAbout this template\n-------------------\n\nThis template provides a a project skeleton suitable for NPR projects that are designed to be served as flat files. Facilities are provided for rendering html from data, compiling LESS into CSS, deploying to S3, installing cron jobs on servers, copy-editing via Google Spreadsheets and a whole bunch of other stuff.\n\nThis codebase is licensed under the [MIT open source license](http://opensource.org/licenses/MIT). See the ``LICENSE`` file for the complete license.\n\nPlease note: logos, fonts and other media referenced via url from this template are **not** covered by this license. Do not republish NPR media assets without written permission. Open source libraries in this repository are redistributed for convenience and are each governed by their own license.\n\nAlso note: Though open source, This project is not intended to be a generic solution. We strongly encourage those who love the app-template to use it as a basis for their own project template. We have no plans to remove NPR-specific code from this project.\n\nIf you want to setup a version of the app template for yourself, read [this blog post](http://blog.apps.npr.org/2014/09/08/how-to-setup-the-npr-app-template-for-you-and-your-news-org.html) about how to do so.\n\nAssumptions\n-----------\n\nThe following things are assumed to be true in this documentation.\n\n* You are running OSX.\n* You are using Python 2.7. (Probably the version that came with OSX.)\n* You have [virtualenv](https://pypi.python.org/pypi/virtualenv) and [virtualenvwrapper](https://pypi.python.org/pypi/virtualenvwrapper) installed and working.\n* You have NPR's AWS credentials stored as environment variables locally.\n\nFor more details on the technology stack used with the app-template, see our [development environment blog post](http://blog.apps.npr.org/2013/06/06/how-to-setup-a-developers-environment.html).\n\nCopy the template\n-----------------\n\nCreate a new repository on Github. Everywhere you see ``$NEW_PROJECT_NAME`` in the following script, replace it with the name of the repository you just created.\n\n```\ngit clone git@github.com:nprapps/app-template.git $NEW_PROJECT_NAME\ncd $NEW_PROJECT_NAME\n\nmkvirtualenv $NEW_PROJECT_NAME\npip install -r requirements.txt\nnpm install\n\nfab bootstrap\n```\n\nThis will setup the new repo and will replace `README.md` (this file) with `PROJECT_README.md`. See that file for usage documentation.\n\nBy default `bootstrap` will use `nprapps` as the Github username, and the current directory name as the repository name. **This is a best practice**, but you can override these defaults if you need to:\n\n```\nfab bootstrap:$GITHUB_USERNAME,$REPOSITORY_NAME\n```\n\n**Problems installing requirements?** You may need to run the pip command as ``ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future pip install -r requirements.txt`` to work around an issue with OSX.\n\nBootstrap issues\n----------------\n\nThe app-template can automatically setup your Github repo with our default labels and tickets by running ``fab issues.bootstrap``. You will be prompted for your Github username and password.\n\n"}, {"repo": "TimeMagazineLabs/babynames", "language": "JavaScript", "readme_contents": "# Baby Names!\n\nv0.1.1\n\n[![Build Status](https://travis-ci.org/TimeMagazineLabs/babynames.svg)](https://travis-ci.org/TimeMagazineLabs/babynames)\n\nFun with the Social Security Administration's [baby name data](http://www.ssa.gov/OACT/babynames/).\n\n## Setup\n\nThis is a Node.js script, so you should consider [downloading Node](http://nodejs.org/) before attempting to run it.\n\nTo download the repo, simply clone it:\n\n\tgit clone https://github.com/TimeMagazineLabs/babynames.git\n\tcd babynames\n\nThen install the dependencies:\n\n\tnpm install\n\n## The Data \n\nThe Social Security Administration organizes the baby name data, somewhat inconveniently, as year-by-year text files named `yob[year].txt`, beginning in 1880 for national data and 1910 for state data. The data for the previous calendar year is usually released around Mother's Day.\n\nAs of the 2018 data, there are 109,174 names, constituting any name-gender combination that appeared in at least one year a minimum of five times. The scripts in this repo download this raw data and provide tools for aggregating specific (or all) names in specific (or all) spans of years will the ability to exclude uncommon names.\n\n### Getting the Data\n\nThe raw data is not included in the repo. Instead, you need to download it from the [Social Security Administration](http://www.ssa.gov/OACT/babynames/) with a simple command or function. This script will download and unzip it for you into the [`data/national`](data/national) directory, and then delete the `.zip` file.\n\n\t# CLI\n\t./index.js download \n\n\t# Node\n\tconst babynames = require(\"babynames\");\n\tbabynames.download({ [opts] }, function() {\n\t\t// further commands to aggregate the flat files you just downloaded\n\t});\n\nYou can also get the state-by-state data, which extracts to the [`data/states`](data/states) directory\n\n\t# CLI\n\t./index.js download --states\n\n\t# Node\n\tconst babynames = require(\"babynames\");\n\tbabynames.download({ states: true }, function() { ... });\n\n### Total babies born each year\n\nThere is also a file called `data/totals.json` with data on the total number of babies born (or at least, those issued a SSN) each year, [per the SSA](http://www.ssa.gov/oact/babynames/numberUSbirths.html), which is used for calculating frequencies as percentages. This is necessary because the totals are higher than the sum of each name in the name files, which don't include names that occur fewer than five times.\n\nIf you want to re-download this data--maybe it's a new year or you suspect there has been a revision--just run `./scripts/total_births.js`, which will scrape the page on the SSA website and overwrite the file in the repo.\n\n### Let's get started!\n\nNow that you've downloaded the raw data, the fun begins!\n\n## Extracting names\n\nOnce you've downloaded the data, you can aggregate it on a per-name basis and store it in a variety of formats:\n\n\t./index.js store --format=json --names=Edward,Nancy,Christopher\n\n### Options\n\nThese options are either passed as `--format`, e.g. from the command-line, or as key values in Node (see [test/test.js](test/test.js))\n\n| option | default | purpose |\n| -------- | --------- | ---------- |\n| `names` | `null`: Every name! | A comma-separated list of names to extract. If you don't append a name with `-f` or `-m`, it will search for both genders.|\n| `start` | `1880` | The first year of data to extract. The default, `1880`, is the first available year of data. |\n| `end` | Most recent year |  The last year of data to extract. The default is the previous calendar year starting in June, otherwise the year before that. |\n| `min` | `1` | Don't include names that don't show up at least this many times in at least one year. The default is functionally `5` in the data. |\n| `cutoff` | `1` | Don't include names that don't show up in at least this many individual years. |\n| `format` | Must be provided | Format out output. Options are `json`, `csv`, `jsonp`, `csvs`, `mongodb`. See following explanation. |\n\n#### Formats\n+ `json`: Each name is stored as an individual JSON file in the `/flat_files/individual/` directory.\n+ `jsonp`: Each name is stored as an individual JSON-P file in the `/flat_files/individual/` directory. It is wrapped in a callback function named `name_callback` by default, which you can override with `opts.callback` or `--callback`.\n+ `csv`: All names are packaged into one CSV file and stored in `/flat_files/names_[year_start]_[year_end].csv/`. This file will be able 30MB if you don't include limiting specifications above (`start`, `end`, `min`, `cutoff`).\n+ `csvs`: Each name is stored as an individual CSV file in the `/flat_files/individual/` directory.\n+ `mongodb`: All names are inserted into a MongoDB instance, using the slug `[name]-[m|f]` as the `_id`. *Note:* Because this is optional, the [mongodb](https://www.npmjs.org/package/mongodb) Node module is not included as a dependency, so you'll need to install it yourself as well as running a mongo server: `npm install mongodb`. You can pass a `--mongo_uri` argument, which defaults to `mongodb://localhost:27017`, as well as a `db_name` argument, which defaults to `babynames`.\n\n### How it Works\n\nFirst, the script reads every raw file from the SSA and stores the data on a per-name basis in memory. For each name, it records both the absolute number of babies with that name in a given year and the percentage of all babies of the same gender with that name. The denominator in that calculation is the gender-specific total number of babies [as reported on SSA.gov](http://www.ssa.gov/oact/babynames/numberUSbirths.html), NOT the calculated sum of all baby name frequencies (which will be lower than the actual number of children born in the United States, given that the data only counts names that appear at least five times). For JSON, the years are stored as keys in an object for fast retrieval. Here is the output of `./index.js store --name=Clifford-m --format=json --start=1960 --end=1980`, which would be writting to `flat_files/individuals/clifford-m.json`:\n\n\t{\n\t  \"id\": \"clifford-m\",\n\t  \"name\": \"Clifford\",\n\t  \"gender\": \"M\",\n\t  \"values\": {\n\t    \"1960\": 2465,\n\t    \"1961\": 2336,\n\t    \"1962\": 2183,\n\t    \"1963\": 2198,\n\t    \"1964\": 2021,\n\t    \"1965\": 1822,\n\t    \"1966\": 1612,\n\t    \"1967\": 1514,\n\t    \"1968\": 1608,\n\t    \"1969\": 1507,\n\t    \"1970\": 1581,\n\t    \"1971\": 1382,\n\t    \"1972\": 1268,\n\t    \"1973\": 1175,\n\t    \"1974\": 1148,\n\t    \"1975\": 1124,\n\t    \"1976\": 1065,\n\t    \"1977\": 973,\n\t    \"1978\": 1002,\n\t    \"1979\": 1046,\n\t    \"1980\": 1218\n\t  },\n\t  \"percents\": {\n\t    \"1960\": 0.00113831417748373,\n\t    \"1961\": 0.0010835080428208315,\n\t    \"1962\": 0.001038538187329834,\n\t    \"1963\": 0.0010643861620113896,\n\t    \"1964\": 0.0009969135634998424,\n\t    \"1965\": 0.0009614400281994266,\n\t    \"1966\": 0.0008867579315876157,\n\t    \"1967\": 0.0008507089990852349,\n\t    \"1968\": 0.0009054069348090115,\n\t    \"1969\": 0.0008235737746129422,\n\t    \"1970\": 0.0008297069733171276,\n\t    \"1971\": 0.0007600414008079977,\n\t    \"1972\": 0.0007571952960735124,\n\t    \"1973\": 0.0007279201679110487,\n\t    \"1974\": 0.0007039861066992741,\n\t    \"1975\": 0.0006925348562528072,\n\t    \"1976\": 0.0006520884587077995,\n\t    \"1977\": 0.0005690371283567635,\n\t    \"1978\": 0.0005862398622043789,\n\t    \"1979\": 0.0005837441214009189,\n\t    \"1980\": 0.0006565602388628679\n\t  }\n\t}\n\n## Analysis\n\n**This is still in the works**\n\nThe `store` script comes with several options for basic analysis:\n\n+ `normalize`: Add a third property to each name that is the normalized value for the percentage figures, such that the peak percentage year is 1.\n+ `peak`: Find the peak value and year for both raw values and percents\n+ `maxima`: Identify all the local maxima -- points where every value 5 years before and after is lower. Only counts maxima that are at least 25 percent of peak value.\n+ `dense`: If a name does not appear in a year in the range specified between `start` and `end`, list that year in the data as `0`. Otherwise it is not included at all (a \"sparse\" format).\n\n## Extras\nWe've now got British baby names going back to 1996, accessed on Oct. 5, 2016 from the U.K. [Office for National Statistics](http://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/livebirths/adhocs/006073babynames1996to2015). The total number of live births was downloaded [here](http://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/livebirths/datasets/birthsummarytables) from the same source.\n\n## License\n\nThis script is provided free and open-source by Time under the MIT license. If you use it, you are politely encouraged to acknowledge Time and link to this page.\n\nThe dictionary file [dict/2of12.txt](dict/2of12.txt) is from the [12 Dicts project](http://wordlist.aspell.net/12dicts-readme/), which is in the public domain.\n"}, {"repo": "guardian/frontend", "language": "HTML", "readme_contents": "## We're hiring!\nEver thought about joining us?\nhttps://workforus.theguardian.com/careers/digital-development/\n\n# Frontend\nThe Guardian website frontend.\n\n**For everybody who engages with our journalism, [theguardian.com](https://www.theguardian.com) is an industry-best news website that is fast, accessible and easy to use. Unlike other ways of developing products, ours puts the audience first.**\n\nFrontend is [a set of Play Framework 2 Scala applications](docs/02-architecture/01-applications-architecture.md). It is built in two parts, using `make` for the client side asset build and SBT for the Play Framework backend.\n\n# Documentation\n\n**[All documentation notes and useful items can be found in the `docs` folder](docs).**\n\n# Core Development Principles (lines in the sand)\nThese principles apply to all requests on `www.theguardian.com` and `api.nextgen.guardianapps.co.uk` (our Ajax URL)\n\n## On the server\n* Every request can be cached and has an appropriate Cache-Control header set.\n* Each request may only perform one I/O operation on the backend. (you cannot make two calls to the content API or any other 3rd party)\n* The average response time of any endpoint is less than 500ms.\n* Requests that take longer than two seconds will be terminated.\n\n# New developers\nWelcome! **[The best place to start is here](docs/01-start-here)**\n\nTo get set up, please follow [the installation guide](docs/01-start-here/01-installation-steps.md).\n\nFixes for common problems can be found [here](docs/01-start-here/04-troubleshooting.md).\n\nPlease read the [development tips](docs/01-start-here/05-development-tips.md) document to learn about more about development process.\n\n## Deploying\nFollow the steps described in the [How to deploy document](docs/01-start-here/03-how-to-deploy.md).\n"}, {"repo": "dukechronicle/chronline", "language": "Ruby", "readme_contents": "Chronline [![Build Status](https://travis-ci.org/dukechronicle/chronline.svg?branch=master)](https://travis-ci.org/dukechronicle/chronline)\n=========\n\nThis is the code for the [Duke Chronicle](http://www.dukechronicle.com) website. The Chronicle is Duke's independent daily news organization. The site was written entirely by undergrad students at Duke. We are one of the few college news organizations that have a dedicated team responsible for building, maintaining, and running the online product. We want to build a platform for providing information and fostering discussion within the Duke community, and we take this mission very seriously. This is a project that will continue to improve as we try to build the *best* news platform out there.\n\nDevelopment\n=============\n\nDocumentation for development is in the [wiki](https://github.com/dukechronicle/chronline/wiki). To get the site up and running, check out the [setting up](https://github.com/dukechronicle/chronline/wiki/Setting-Up) page. We are very open to comments, suggestions, and pull requests.\n\nJoin Us\n-------\n\nThe Chronline team is a small group of undergrads who are passionate about programming and building something awesome. This is a great chance to get some real software engineering experience. If you are a current Duke student and are interested in helping us, you can send an email to [*recruitment@dukechronicle.com*](mailto:recruitment@dukechronicle.com). Anyone interested in web design should also definitely reach out!\n\nWriting Tests\n-------------\n\nWe are building up our test coverage slowly. We would like for all new code to have tests. Sometimes hard deadlines make this difficult, but we request that any pull requests come with tests. For more about our testing infrastructure, see the [testing](https://github.com/dukechronicle/chronline/wiki/Testing) wiki page.\n\nResources\n---------\n\nIn no particular order:\n\n - [Rails Guides](http://guides.rubyonrails.org/)\n - [Ruby Toolbox](https://www.ruby-toolbox.com/)\n - [HAML](http://haml.info/)\n - [CoffeeScript](http://coffeescript.org/)\n - [Sass](http://sass-lang.com/)\n - [Pro Git](http://git-scm.com/book)\n - [SimpleForm](http://simple-form.plataformatec.com.br/)\n - [RSpec Rails](https://www.relishapp.com/rspec/rspec-rails/docs)\n - [Cucumber](https://www.relishapp.com/cucumber/cucumber/docs)\n - [Capybara](http://jnicklas.github.com/capybara/)\n - [Pry](http://pryrepl.org/)\n\nSecurity Issues\n===============\n\nWe feel strongly about keeping this repository open source to show the kind of work we are doing. We try to abide by best practices to keep the site secure, but in the case that you find a security issue, please email [webmaster@dukechronicle.com](mailto:webmaster@dukechronicle.com). If you happen to find a bug, we will happily list your name here as a thank you.\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Duke Student Publishing Company\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"}, {"repo": "BloombergMedia/whatiscode", "language": "JavaScript", "readme_contents": "## [What Is Code?](http://www.bloomberg.com/whatiscode)\n*Businessweek*, June 11, 2015  \nby [Paul Ford](https://twitter.com/ftrain) & [contributors](https://makerba.se/p/15js4s/whatiscode)\n\nReport an [issue](https://github.com/BloombergMedia/whatiscode/issues) or suggest changes by submitting a [pull request](https://github.com/BloombergMedia/whatiscode/pulls). Issues and pull requests labeled \u201c[text](https://github.com/BloombergMedia/whatiscode/labels/text)\u201d will be reviewed by an editor, though we make no guarantees about timeliness. Changes merged into master may take a day or so to push live to production, especially on weekends.\n\n#### LICENSE\n---\nThis repository contains a variety of content; some is owned by Bloomberg Finance LP, and some is from third-parties (various Javascript libraries).\n\nThe third-party content is distributed under the license provided by those parties.\n\nThe Javascript content owned by Bloomberg Finance LP is distributed under the Apache 2 license; the text of this license can be found in the [LICENSE](https://github.com/BloombergMedia/whatiscode/blob/master/LICENSE) file.\n\nThe article text, contained in the [index.html](https://github.com/BloombergMedia/whatiscode/blob/master/index.html) file, is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International license. For the full text of the license, please see [the Creative Commons site](https://creativecommons.org/licenses/by-nc-nd/4.0/).\n"}, {"repo": "times/cardkit", "language": "JavaScript", "readme_contents": "# CardKit 2\n\n[![Build Status](https://travis-ci.org/times/cardkit.svg?branch=master)](https://travis-ci.org/times/cardkit) [![codecov](https://codecov.io/gh/times/cardkit/branch/master/graph/badge.svg)](https://codecov.io/gh/times/cardkit) [![Join the chat at https://gitter.im/times/cardkit](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/times/cardkit?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n> A simple, powerful and fully configurable image editor for web browers and servers. Optional UI included.\n\nCardKit 2 has three main parts:\n\n- [`CardKit`](#cardkit): The core library, that manages and maintains the configuration object which defines the structure and options of a card\n- [`CardKitDOM`](#cardkitdom): A DOM renderer, that takes an instance of CardKit and renders either a standalone image, or a pre-packaged UI for editing the image\n- [`CardKitServer`](#cardkitserver): A server renderer, that allows you to take an instance of CardKit and render it into an image on a Node.js server\n\nAdditionally, a base class allows you to create your own renderers. See more in the [Custom Renderers](#custom-renderers) section.\n\n**For version 1, see the [`v1-master`](https://github.com/times/cardkit/tree/v1-master) branch**\n\n## Installation\n\n`$ npm install cardkit --save`\n\n\n## Usage\n\nCardKit 2 requires a configuration object in order to render an image. Each renderer (CardKitDOM and CardKitServer) uses this configuration and converts it into an output. Below are simple implementations for CardKit depending on your use case.\n\nIn addition to these, you may also want to try the [CardKit Yeoman Generator](https://www.github.com/times/generator-cardkit), which can help you scaffold an entire project in just a few moments. It brings with it the latest version of CardKit, a recommended directory structure, and a build process that helps you get your CardKit project deployed. There is also a [JSFiddle](https://jsfiddle.net/chrishutchinson/16tLs2ta/) that you can fork and edit for quick in-browser testing without touching the command line.\n\n#### Yeoman generator\n\n    $ npm install -g yo generator-cardkit\n    $ yo cardkit\n\n#### Browser with Webpack / Browserify usage\n  \n```js\n// Load CardKit and CardKit DOM\nconst CardKit = require('cardkit');\nconst CardKitDOM = require('cardkit/dom');\n\n// Base configuration object - see `./examples/configurations` for examples\nvar configuration = {};\n\n// Optional themes object - see `./examples/configurations` for examples\nvar themes = {};\n\n// Optional layouts object - see `./examples/configurations` for examples\nvar layouts = {};\n\n// Initialise CardKit\nvar cardkit = new CardKit(configuration, {\n  themes: themes,\n  layouts: layouts\n});\n\n// Initialise Renderer\nvar renderer = new CardKitDOM(cardkit);\n\n// To render the card only (with optional theme / layout overrides)\nrenderer.renderCard('card', {\n  theme: 'Alt',\n  layout: 'Square'\n});\n\n// OR To render the editing UI\nrenderer.renderUI('card');\n```\n\n\n#### Browser with `<script>` tag usage\n  \n```html\n<!-- Load in React from a CDN (or similar) -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react-dom.min.js\"></script>\n\n<!-- Load in the CardKit and CardKitDOM Libraries -->\n<script type=\"text/javascript\" src=\"https://cdn.rawgit.com/times/cardkit/v2.0.6/dist/cardkit.js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.rawgit.com/times/cardkit/v2.0.6/dist/dom.js\"></script>\n\n<!-- Your container element to render into -->\n<div id=\"card\"></div>\n\n<script type=\"text/javascript\">\n  // Base configuration object - see `./examples/configurations` for examples\n  var configuration = {};\n\n  // Optional themes object - see `./examples/configurations` for examples\n  var themes = {};\n\n  // Optional layouts object - see `./examples/configurations` for examples\n  var layouts = {};\n\n  // Initialise CardKit\n  var cardkit = new CardKit(configuration, {\n    themes: themes,\n    layouts: layouts\n  });\n\n  // Initialise Renderer\n  var renderer = new CardKitDOM(cardkit);\n\n  // To render the card only (with optional theme / layout overrides)\n  renderer.renderCard('card', {\n    theme: 'Alt',\n    layout: 'Square'\n  });\n\n  // OR To render the editing UI\n  renderer.renderUI('card');\n</script>\n```\n\n\n#### Server usage\n\n```js\n// Require CardKit and CardKitServer\nconst CardKit = require('cardkit');\nconst CardKitServer = require('cardkit/server');\n\n// Base configuration object - see `./examples/configurations` for examples\nconst configuration = {};\n\n// Initialise CardKit\nconst cardkit = new CardKit(configuration);\n\n// Initialise Renderer\nvar renderer = new CardKitServer(cardkit);\n\n// Render to image\nrenderer.renderToImage(2)\n       .then((image) => {\n          // Do what you want with the image here...\n          console.log('<img src=\"data:image/png;base64,' + image + '\" />');\n          process.exit();\n       })\n       .catch((e) => {\n          console.log('[ERR]', e);\n          process.exit();\n       });\n```\n\n\n## APIs\n\n### CardKit\n\n#### `new CardKit(configuration, options)`\n\n> Initialisation. Pass in a required configuration object, and optional themes, templates and layouts\n\n#### `cardkit.updateConfiguration(configuration, options, rerender)`\n\n> Updates the configuration in your instance of CardKit. Can optionally rerender with a flag if previously rendered (supported in CardKitDOM).\n\n#### `cardkit.computeConfiguration(options)`\n\n> Computes a configuaration object, optionally accepting a named template, theme and layout. These get merged into the base configuration and returned.\n\n\n### CardKitDOM\n\n#### `new CardKitDOM(cardkit)`\n\n> Accepts an instance of CardKit and initialises the renderer\n\n#### `cardkit.renderUI(id, overrides)`\n\n> Renders the include user interface to the specified DOM element\n\n#### `cardkit.renderCard(id)`\n\n> Renders just the card in it's SVG form to the specified DOM element\n\n#### `cardkit.rerender()`\n\n> Will re-render the existing UI or card\n\n#### `cardkit.download(scale, element)`\n\n> Downloads the image to your local machine. Accepts a scale (default=2), and an element to grab from. If not provided it will fall back to the existing card being rendererd (if `renderCard()` was used).\n\n\n### CardKitServer\n\n#### `new CardKitDOM(cardkit)`\n\n> Accepts an instance of CardKit and initialises the renderer\n\n#### `cardkit.renderToString()`\n\n> Renders the card to a HTML string (e.g. `<svg...></svg>`)\n\n#### `cardkit.renderToImage(scale)`\n\n> Renders the card to an image returning a Promise containing the image as a base64 string\n\n\n## Custom Renderers\n\nA base class `CardKitRenderer` allows you to create your own renderer for CardKit. For example, CardKitDOM currently uses SVG to create the card, and React to render the UI. You may, however, wish to render your card using HTML canvas, or build a UI using Vue.js. Creating a custom renderer is a good way to achieve this. Below is a brief example of how you might achieve this:\n\n```js\nclass CardKitCanvas extends CardKitRenderer {\n\n  renderCard () {\n    // Canvas-specific code here\n  }\n\n  rerender () { // A method that `CardKit` calls if the base configuration object is updated\n    // Handle an update to the base configuration, e.g. you may want to re-render the canvas element here\n  }\n\n  yourCustomMethod () {\n    // You can implement any custom methods here, for example you may wish to expose or manipulate the <canvas> element for other users to take advantage of\n  }\n\n}\n\nconst cardkit = new CardKit(configuration);\n\nconst renderer = new CardKitCanvas(cardkit);\n\nrenderer.yourCustomMethod();\n```\n\n\n## Custom Fonts\n\nCardKit allows you to load in custom fonts for use on your cards, see the Wiki for details. These need to be encoded into base64 format. \n\n_If you wish to use a Google font, you can use the [googlefontcss64](https://www.npmjs.com/package/googlefontcss64) library to generate a base64 version of any Google font. You can use [this](https://gist.github.com/chrishutchinson/4a9f7bffddfec376e9d71e8666d5955d) Node.js script to get all the details you need._\n\nOnce you have the base64 encoded version of your font, you can register it in your configuration object, like so:\n\n```js\nvar configuration = {\n  // ...\n  fonts: {\n    'MyCustomFontName': base64encodedFont\n  },\n  layers: {\n    text: {\n      fontFamily: 'MyCustomFontName'\n    }\n  }\n  // ...\n}\n```\n\nIf you need to provide a specific format for your font, you can do the following:\n\n```js\nvar configuration = {\n  // ...\n  fonts: {\n    'MyCustomFontName': {\n      src: base64encodedFont,\n      format: 'woff'\n    }\n  },\n  layers: {\n    text: {\n      fontFamily: 'MyCustomFontName'\n    }\n  }\n  // ...\n}\n```\n\n\n## Upgrading from v1.x\n\nUpgrading from v1.x to v2 should be a fairly straightforward process if you haven't made any major modifications to the v1.x user interface. Your configuration object from v1.x should be compatible with v2 with a few minor tweaks. Specific variations are available in the Wiki.\n\n\n## Running locally\n\nTo run a sample UI locally, run: `$ npm start`\n\nYou can optionally pass a port like so: `$ npm start -- --port=8080`\n\n\n## Tests\n\nTo trigger the test suite, run `$ npm run test`"}, {"repo": "mkiser/WTFJHT", "language": "HTML", "readme_contents": "[![Publish Status](https://travis-ci.org/mkiser/WTFJHT.svg?branch=master)](https://travis-ci.org/mkiser/WTFJHT)\n\n# What The Fuck Just Happened Today?\n\n<p class=\"lead\"><a href=\"https://whatthefuckjusthappenedtoday.com/\">WTF Just Happened Today</a> is today's essential newsletter logging the daily shock and awe in national politics. Read in moderation.</p>\n\n<p>The goal is to capture the most important news coming out of the D.C. in a digestable form inspired by <a href=\"http://www.theskimm.com/\">The Skimm</a>, <a href=\"http://techmeme.com/\">Techmeme</a>, and <a href=\"http://www.theverge.com/2016/12/13/13936946/twitter-tweetstorm-thread-timeline-medium\">tweetstorms</a>.</p>\n \nI started this project because I was having trouble keeping up with the pace of news coming out from the Trump administration. It started as an Instapaper and Evernote notebook, but quickly became unwieldy as news events started to blur. So, I started logging the things on a day-by-day basis. \n\nWhat started as a personal project \u2013 a challenge to chronicle the daily shock and awe of the administration's first 100 days \u2013 [has become my full-time job.](https://whatthefuckjusthappenedtoday.com/meta/trump-creates-one-new-job/) See? Trump IS creating jobs. \n\nThis is, strictly speaking, the news through my lens and not a professional act of journalism \u2013 nothing here is my original reporting \u2013 however, it is an act of journalism in and of itself \u2013 I'm making editorial decisions, crafting and curating the content selection. You won't find \"fair and balanced\" objective coverage. \n\nWhat you will find, however, is an independent voice, personal accountability, and a consideration for how the editorial choices I make impact others. If you're expecting <a href=\"https://twitter.com/maggieNYT\" target=\"_blank\">Maggie Haberman</a> or <a href=\"https://twitter.com/Fahrenthold\" target=\"_blank\">David Fahrenthold</a>, sorry. It's also worth noting that I go through considerable effort to cite the original source of the news. I also try to make sure each recap is rich with a diversity of sources.\n\n\nBuilt using <a href=\"https://pages.github.com/\">GitHub Pages</a>, <a href=\"http://jekyllrb.com/\">Jekyll</a>, <a href=\"https://www.cloudflare.com\">Cloudflare</a>, and <a href=\"https://mailchimp.com/\">MailChimp</a>.\n\n<p class=\"lead\">-<a href=\"https://twitter.com/matt_kiser/\">Matt Kiser</a><br>\n    <small>matt at whatthefuckjusthappenedtoday dot com</small>\n</p>\n"}, {"repo": "twbs/bootstrap", "language": "JavaScript", "readme_contents": "<p align=\"center\">\n  <a href=\"https://getbootstrap.com/\">\n    <img src=\"https://getbootstrap.com/docs/4.3/assets/brand/bootstrap-solid.svg\" alt=\"Bootstrap logo\" width=\"72\" height=\"72\">\n  </a>\n</p>\n\n<h3 align=\"center\">Bootstrap</h3>\n\n<p align=\"center\">\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  <br>\n  <a href=\"https://getbootstrap.com/docs/4.3/\"><strong>Explore Bootstrap docs \u00bb</strong></a>\n  <br>\n  <br>\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=bug.md\">Report bug</a>\n  \u00b7\n  <a href=\"https://github.com/twbs/bootstrap/issues/new?template=feature.md&labels=feature\">Request feature</a>\n  \u00b7\n  <a href=\"https://themes.getbootstrap.com/\">Themes</a>\n  \u00b7\n  <a href=\"https://blog.getbootstrap.com/\">Blog</a>\n</p>\n\n\n## Table of contents\n\n- [Quick start](#quick-start)\n- [Status](#status)\n- [What's included](#whats-included)\n- [Bugs and feature requests](#bugs-and-feature-requests)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Versioning](#versioning)\n- [Creators](#creators)\n- [Thanks](#thanks)\n- [Copyright and license](#copyright-and-license)\n\n\n## Quick start\n\nSeveral quick start options are available:\n\n- [Download the latest release.](https://github.com/twbs/bootstrap/archive/v4.3.1.zip)\n- Clone the repo: `git clone https://github.com/twbs/bootstrap.git`\n- Install with [npm](https://www.npmjs.com/): `npm install bootstrap`\n- Install with [yarn](https://yarnpkg.com/): `yarn add bootstrap@4.3.1`\n- Install with [Composer](https://getcomposer.org/): `composer require twbs/bootstrap:4.3.1`\n- Install with [NuGet](https://www.nuget.org/): CSS: `Install-Package bootstrap` Sass: `Install-Package bootstrap.sass`\n\nRead the [Getting started page](https://getbootstrap.com/docs/4.3/getting-started/introduction/) for information on the framework contents, templates and examples, and more.\n\n\n## Status\n\n[![Build Status](https://github.com/twbs/bootstrap/workflows/Tests/badge.svg)](https://github.com/twbs/bootstrap/actions?workflow=Tests)\n[![npm version](https://img.shields.io/npm/v/bootstrap.svg)](https://www.npmjs.com/package/bootstrap)\n[![Gem version](https://img.shields.io/gem/v/bootstrap.svg)](https://rubygems.org/gems/bootstrap)\n[![Meteor Atmosphere](https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue.svg)](https://atmospherejs.com/twbs/bootstrap)\n[![Packagist Prerelease](https://img.shields.io/packagist/vpre/twbs/bootstrap.svg)](https://packagist.org/packages/twbs/bootstrap)\n[![NuGet](https://img.shields.io/nuget/vpre/bootstrap.svg)](https://www.nuget.org/packages/bootstrap/absoluteLatest)\n[![peerDependencies Status](https://img.shields.io/david/peer/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=peer)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/bootstrap.svg)](https://david-dm.org/twbs/bootstrap?type=dev)\n[![Coverage Status](https://img.shields.io/coveralls/github/twbs/bootstrap/master.svg)](https://coveralls.io/github/twbs/bootstrap?branch=master)\n[![CSS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/css/bootstrap.min.css?compression=gzip&label=CSS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/css/bootstrap.min.css)\n[![JS gzip size](https://img.badgesize.io/twbs/bootstrap/master/dist/js/bootstrap.min.js?compression=gzip&label=JS+gzip+size)](https://github.com/twbs/bootstrap/tree/master/dist/js/bootstrap.min.js)\n[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)](https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229)\n[![Backers on Open Collective](https://img.shields.io/opencollective/backers/bootstrap.svg)](#backers)\n[![Sponsors on Open Collective](https://img.shields.io/opencollective/sponsors/bootstrap.svg)](#sponsors)\n\n\n## What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```text\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n```\n\nWe provide compiled CSS and JS (`bootstrap.*`), as well as compiled and minified CSS and JS (`bootstrap.min.*`). [source maps](https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps) (`bootstrap.*.map`) are available for use with certain browsers' developer tools. Bundled JS files (`bootstrap.bundle.js` and minified `bootstrap.bundle.min.js`) include [Popper](https://popper.js.org/).\n\n\n## Bugs and feature requests\n\nHave a bug or a feature request? Please first read the [issue guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/twbs/bootstrap/issues/new).\n\n\n## Documentation\n\nBootstrap's documentation, included in this repo in the root directory, is built with [Hugo](https://gohugo.io/) and publicly hosted on GitHub Pages at <https://getbootstrap.com/>. The docs may also be run locally.\n\nDocumentation search is powered by [Algolia's DocSearch](https://community.algolia.com/docsearch/). Working on our search? Be sure to set `debug: true` in `site/assets/js/src/search.js` file.\n\n### Running documentation locally\n\n1. Run `npm install` to install the Node.js dependencies, including Hugo (the site builder).\n2. Run `npm run test` (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\n3. From the root `/bootstrap` directory, run `npm run docs-serve` in the command line.\n4. Open `http://localhost:9001/` in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its [documentation](https://gohugo.io/documentation/).\n\n### Documentation for previous releases\n\nYou can find all our previous releases docs on <https://getbootstrap.com/docs/versions/>.\n\n[Previous releases](https://github.com/twbs/bootstrap/releases) and their documentation are also available for download.\n\n\n## Contributing\n\nPlease read through our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.\n\nMoreover, if your pull request contains JavaScript patches or features, you must include [relevant unit tests](https://github.com/twbs/bootstrap/tree/master/js/tests). All HTML and CSS should conform to the [Code Guide](https://github.com/mdo/code-guide), maintained by [Mark Otto](https://github.com/mdo).\n\nEditor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/master/.editorconfig) for easy use in common text editors. Read more and download plugins at <https://editorconfig.org/>.\n\n\n## Community\n\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\n- Follow [@getbootstrap on Twitter](https://twitter.com/getbootstrap).\n- Read and subscribe to [The Official Bootstrap Blog](https://blog.getbootstrap.com/).\n- Join [the official Slack room](https://bootstrap-slack.herokuapp.com/).\n- Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##bootstrap` channel.\n- Implementation help may be found at Stack Overflow (tagged [`bootstrap-4`](https://stackoverflow.com/questions/tagged/bootstrap-4)).\n- Developers should use the keyword `bootstrap` on packages which modify or add to the functionality of Bootstrap when distributing through [npm](https://www.npmjs.com/browse/keyword/bootstrap) or similar delivery mechanisms for maximum discoverability.\n\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under [the Semantic Versioning guidelines](https://semver.org/). Sometimes we screw up, but we adhere to those rules whenever possible.\n\nSee [the Releases section of our GitHub project](https://github.com/twbs/bootstrap/releases) for changelogs for each release version of Bootstrap. Release announcement posts on [the official Bootstrap blog](https://blog.getbootstrap.com/) contain summaries of the most noteworthy changes made in each release.\n\n\n## Creators\n\n**Mark Otto**\n\n- <https://twitter.com/mdo>\n- <https://github.com/mdo>\n\n**Jacob Thornton**\n\n- <https://twitter.com/fat>\n- <https://github.com/fat>\n\n\n## Thanks\n\n<a href=\"https://www.browserstack.com/\">\n  <img src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\" width=\"192\" height=\"42\">\n</a>\n\nThanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/bootstrap#backer)]\n\n[![Bakers](https://opencollective.com/bootstrap/backers.svg?width=890)](https://opencollective.com/bootstrap#backers)\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bootstrap#sponsor)]\n\n[![](https://opencollective.com/bootstrap/sponsor/0/avatar.svg)](https://opencollective.com/bootstrap/sponsor/0/website)\n[![](https://opencollective.com/bootstrap/sponsor/1/avatar.svg)](https://opencollective.com/bootstrap/sponsor/1/website)\n[![](https://opencollective.com/bootstrap/sponsor/2/avatar.svg)](https://opencollective.com/bootstrap/sponsor/2/website)\n[![](https://opencollective.com/bootstrap/sponsor/3/avatar.svg)](https://opencollective.com/bootstrap/sponsor/3/website)\n[![](https://opencollective.com/bootstrap/sponsor/4/avatar.svg)](https://opencollective.com/bootstrap/sponsor/4/website)\n[![](https://opencollective.com/bootstrap/sponsor/5/avatar.svg)](https://opencollective.com/bootstrap/sponsor/5/website)\n[![](https://opencollective.com/bootstrap/sponsor/6/avatar.svg)](https://opencollective.com/bootstrap/sponsor/6/website)\n[![](https://opencollective.com/bootstrap/sponsor/7/avatar.svg)](https://opencollective.com/bootstrap/sponsor/7/website)\n[![](https://opencollective.com/bootstrap/sponsor/8/avatar.svg)](https://opencollective.com/bootstrap/sponsor/8/website)\n[![](https://opencollective.com/bootstrap/sponsor/9/avatar.svg)](https://opencollective.com/bootstrap/sponsor/9/website)\n\n\n## Copyright and license\n\nCode and documentation copyright 2011-2019 the [Bootstrap Authors](https://github.com/twbs/bootstrap/graphs/contributors) and [Twitter, Inc.](https://twitter.com) Code released under the [MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE). Docs released under [Creative Commons](https://creativecommons.org/licenses/by/3.0/).\n"}, {"repo": "daneden/animate.css", "language": "CSS", "readme_contents": "# Animate.css [![GitHub release](https://img.shields.io/github/release/daneden/animate.css.svg)](https://github.com/daneden/animate.css/releases) [![CDNJS](https://img.shields.io/cdnjs/v/animate.css.svg)](https://cdnjs.com/libraries/animate.css) [![Build Status](https://travis-ci.com/daneden/animate.css.svg?branch=master)](https://travis-ci.com/daneden/animate.css) [![devDependencies Status](https://david-dm.org/daneden/animate.css/dev-status.svg)](https://david-dm.org/daneden/animate.css?type=dev) [![chat](https://img.shields.io/badge/chat-gitter-green.svg)](https://gitter.im/animate-css/Lobby) [![npm version](https://badge.fury.io/js/animate.css.svg)](https://www.npmjs.com/package/animate.css)\n\n> **We need your help!** animate.css v4 is in the work with lots of improvements and some breaking changes, including CSS custom properties support (aka CSS variables) and classes prefix for a safer use. We need **your feedback**! You can follow the development on the [`dev`](https://github.com/daneden/animate.css/tree/dev) branch and give your feedback on the [issue tracker](https://github.com/daneden/animate.css/issues).\n**Every feedback is welcome!**\n\n_Just-add-water CSS animation_\n\n`animate.css` is a bunch of cool, fun, and cross-browser animations for you to use in your projects. Great for emphasis, home pages, sliders, and general just-add-water-awesomeness.\n\n\n## Installation\n\nInstall via npm:\n\n```bash\n$ npm install animate.css --save\n```\n\nor yarn:\n\n```bash\n$ yarn add animate.css\n```\n\n\n## Usage\n\nTo use animate.css in your website, simply drop the stylesheet into your document's `<head>`, and add the class `animated` to an element, along with any of the animation names. That's it! You've got a CSS animated element. Super!\n\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"animate.min.css\">\n</head>\n```\n\nor use a CDN hosted version by [CDNJS](https://cdnjs.com/libraries/animate.css)\n\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css\">\n</head>\n```\n\n\n### Animations\n\nTo animate an element, add the class `animated` to an element. You can include the class `infinite` for an infinite loop. Finally you need to add one of the following classes to the element:\n\n| Class Name        |                    |                     |                      |\n| ----------------- | ------------------ | ------------------- | -------------------- |\n| `bounce`          | `flash`            | `pulse`             | `rubberBand`         |\n| `shake`           | `headShake`        | `swing`             | `tada`               |\n| `wobble`          | `jello`            | `bounceIn`          | `bounceInDown`       |\n| `bounceInLeft`    | `bounceInRight`    | `bounceInUp`        | `bounceOut`          |\n| `bounceOutDown`   | `bounceOutLeft`    | `bounceOutRight`    | `bounceOutUp`        |\n| `fadeIn`          | `fadeInDown`       | `fadeInDownBig`     | `fadeInLeft`         |\n| `fadeInLeftBig`   | `fadeInRight`      | `fadeInRightBig`    | `fadeInUp`           |\n| `fadeInUpBig`     | `fadeOut`          | `fadeOutDown`       | `fadeOutDownBig`     |\n| `fadeOutLeft`     | `fadeOutLeftBig`   | `fadeOutRight`      | `fadeOutRightBig`    |\n| `fadeOutUp`       | `fadeOutUpBig`     | `flipInX`           | `flipInY`            |\n| `flipOutX`        | `flipOutY`         | `lightSpeedIn`      | `lightSpeedOut`      |\n| `rotateIn`        | `rotateInDownLeft` | `rotateInDownRight` | `rotateInUpLeft`     |\n| `rotateInUpRight` | `rotateOut`        | `rotateOutDownLeft` | `rotateOutDownRight` |\n| `rotateOutUpLeft` | `rotateOutUpRight` | `hinge`             | `jackInTheBox`       |\n| `rollIn`          | `rollOut`          | `zoomIn`            | `zoomInDown`         |\n| `zoomInLeft`      | `zoomInRight`      | `zoomInUp`          | `zoomOut`            |\n| `zoomOutDown`     | `zoomOutLeft`      | `zoomOutRight`      | `zoomOutUp`          |\n| `slideInDown`     | `slideInLeft`      | `slideInRight`      | `slideInUp`          |\n| `slideOutDown`    | `slideOutLeft`     | `slideOutRight`     | `slideOutUp`         |\n| `heartBeat`       |\n\nFull example:\n\n```html\n<h1 class=\"animated infinite bounce delay-2s\">Example</h1>\n```\n\n[Check out all the animations here!](https://daneden.github.io/animate.css/)\n\nIt's possible to change the duration of your animations, add a delay or change the number of times that it plays:\n\n```css\n.yourElement {\n  animation-duration: 3s;\n  animation-delay: 2s;\n  animation-iteration-count: infinite;\n}\n```\n\n## Usage with Javascript\n\nYou can do a whole bunch of other stuff with animate.css when you combine it with Javascript. A simple example:\n\n```javascript\nconst element =  document.querySelector('.my-element')\nelement.classList.add('animated', 'bounceOutLeft')\n```\n\nYou can also detect when an animation ends:\n\n```javascript\nconst element =  document.querySelector('.my-element')\nelement.classList.add('animated', 'bounceOutLeft')\n\nelement.addEventListener('animationend', function() { doSomething() })\n```\n\nYou can use this simple function to add and remove the animations:\n\n```javascript\nfunction animateCSS(element, animationName, callback) {\n    const node = document.querySelector(element)\n    node.classList.add('animated', animationName)\n\n    function handleAnimationEnd() {\n        node.classList.remove('animated', animationName)\n        node.removeEventListener('animationend', handleAnimationEnd)\n\n        if (typeof callback === 'function') callback()\n    }\n\n    node.addEventListener('animationend', handleAnimationEnd)\n}\n```\n\nAnd use it like this:\n\n```javascript\nanimateCSS('.my-element', 'bounce')\n\n// or\nanimateCSS('.my-element', 'bounce', function() {\n  // Do something after animation\n})\n```\n\nNotice that the examples are using ES6's `const` declaration, dropping support for IE10 and some aging browsers. If you prefer, switch the `const` to `var` declarations and IE10 and some old browsers will get support (they still have to provide [classList](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList) support, so do your [research](https://caniuse.com/#feat=classlist)).\n\n## Setting _Delay_ and _Speed_\n\n### Delay Class\n\nIt's possible to add delays directly on the element's class attribute, just like this:\n\n```html\n<div class=\"animated bounce delay-2s\">Example</div>\n```\n\n| Class Name | Delay Time |\n| ---------- | ---------- |\n| `delay-1s` | `1s`       |\n| `delay-2s` | `2s`       |\n| `delay-3s` | `3s`       |\n| `delay-4s` | `4s`       |\n| `delay-5s` | `5s`       |\n\n> _**Note**: The default delays are from 1 second to 5 seconds only. If you need custom delays, add it directly to your own CSS code._\n\n### Slow, Slower, Fast, and Faster Class\n\nIt's possible to control the speed of the animation by adding these classes, as a sample below:\n\n```html\n<div class=\"animated bounce faster\">Example</div>\n```\n\n| Class Name | Speed Time |\n| ---------- | ---------- |\n| `slow`     | `2s`       |\n| `slower`   | `3s`       |\n| `fast`     | `800ms`    |\n| `faster`   | `500ms`    |\n\n> _**Note**: The `animated` class has a default speed of `1s`. If you need custom duration, add it directly to your own CSS code._\n\n## Custom Builds\n\nAnimate.css is powered by [gulp.js](https://gulpjs.com/), which means you can create custom builds pretty easily. First of all, you\u2019ll need Gulp and all other dependencies:\n\n```sh\n$ cd path/to/animate.css/\n$ npm install\n```\n\nNext, run `npx gulp` to compile your custom builds. For example, if you want only some of the \u201cattention seekers\u201d, simply edit the `animate-config.json` file to select only the animations you want to use.\n\n```javascript\n\"attention_seekers\": {\n  \"bounce\": true,\n  \"flash\": false,\n  \"pulse\": false,\n  \"shake\": true,\n  \"headShake\": true,\n  \"swing\": true,\n  \"tada\": true,\n  \"wobble\": true,\n  \"jello\":true\n}\n```\n\n## Accessibility\n\nAnimate.css supports the [`prefers-reduced-motion` media query](https://webkit.org/blog/7551/responsive-design-for-motion/) so that users with motion sensitivity can opt out of animations. On supported platforms (currently all the majors browsers and OS), users can select \"reduce motion\" on their operating system preferences and it will turn off CSS transitions for them without any further work required.\n\n## License\n\nAnimate.css is licensed under the MIT license. (https://opensource.org/licenses/MIT)\n\n## Code of Conduct\n\nThis project and everyone participating in it is governed by the [Contributor Covenant Code of Conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code. Please report unacceptable behavior to [callmeelton@gmail.com](mailto:callmeelton@gmail.com).\n\n## Contributing\n\nPull requests are the way to go here. We only have two rules for submitting a pull request: match the naming convention (camelCase, categorised [fades, bounces, etc]) and let us see a demo of submitted animations in a [pen](https://codepen.io). That **last one is important**.\n"}, {"repo": "nathansmith/960-Grid-System", "language": "CSS", "readme_contents": "960 Grid System\n===============\n\nCreated by Nathan Smith. See the official site for more info: http://960.gs\n\nTo install the Adobe Fireworks extension, simply double-click the `*.mxp` file\nincluded in the `/fireworks_extension directory`. If you are running Windows 7\nyou will need admin permissions in order to install this extension properly.\n\n----------------------------------------------------------------------------\n\nThank you for downloading the 960 Grid System. I hope it helps to streamline\nweb development workflow. Enclosed in the bundle are printable sketch sheets\nand template files for Adobe Fireworks and Photoshop, OmniGraffle and Visio.\n\nAlso included is a lightweight CSS file, which contains the grid dimensions.\nTo use this file, simply include the `960.css` in the `<head>` of the HTML page.\nYou may also use the `reset.css` and `text.css` files, or opt to leave them out.\nHere is an example of the XHTML code necessary to incorporate the CSS files:\n\n```html\n<head>\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/reset.css\" />\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/text.css\" />\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/960.css\" />\n</head>\n```\n\nIt is worth noting that these styles do not automatically make up a finished\nsite design. They are simply a starting point, ideally for rapid prototyping\nor as a basis for creating your own designs. You should not feel constrained\nby the way I have built the initial code. If you disagree with how something\nhas been done, feel free to revise it for the needs of your particular site.\n\nThe files in the 960 Grid System are free of charge, licensed under MIT/GPL.\n\n----------------------------------------------------------------------------\n\nNote that if you are building a site in a language which reads from right to\nleft, use the CSS files that end in `_rtl.css` instead. Denote the language:\n\n```html\n<html lang=\"...\" dir=\"rtl\">\n```\n\nBe sure to set `lang=\"...\"` to the appropriate two-letter abbreviation of the\nlanguage you are using. Example: lang=\"he\" for Hebrew, lang=\"ar\" for Arabic.\n\n----------------------------------------------------------------------------\n\nGPL license:\nhttp://www.gnu.org/licenses/gpl.html\n\nMIT license:\nhttp://www.opensource.org/licenses/mit-license.php\n"}, {"repo": "necolas/normalize.css", "language": "CSS", "readme_contents": "# normalize.css\n\n<a href=\"https://github.com/necolas/normalize.css\"><img\n  src=\"https://necolas.github.io/normalize.css/logo.svg\" alt=\"Normalize Logo\"\n  width=\"80\" height=\"80\" align=\"right\"></a>\n\n> A modern alternative to CSS resets\n\n[![npm][npm-image]][npm-url] [![license][license-image]][license-url]\n[![changelog][changelog-image]][changelog-url]\n[![gitter][gitter-image]][gitter-url]\n\n\n**NPM**\n\n```sh\nnpm install --save normalize.css\n```\n\n**CDN**\n\nSee https://yarnpkg.com/en/package/normalize.css\n\n**Download**\n\nSee https://necolas.github.io/normalize.css/latest/normalize.css\n\n\n## What does it do?\n\n* Preserves useful defaults, unlike many CSS resets.\n* Normalizes styles for a wide range of elements.\n* Corrects bugs and common browser inconsistencies.\n* Improves usability with subtle modifications.\n* Explains what code does using detailed comments.\n\n\n## Browser support\n\n* Chrome\n* Edge\n* Firefox ESR+\n* Internet Explorer 10+\n* Safari 8+\n* Opera\n\n\n## Extended details and known issues\n\nAdditional detail and explanation of the esoteric parts of normalize.css.\n\n#### `pre, code, kbd, samp`\n\nThe `font-family: monospace, monospace` hack fixes the inheritance and scaling\nof font-size for preformatted text. The duplication of `monospace` is\nintentional. [Source](https://en.wikipedia.org/wiki/User:Davidgothberg/Test59).\n\n#### `sub, sup`\n\nNormally, using `sub` or `sup` affects the line-box height of text in all\nbrowsers. [Source](https://gist.github.com/413930).\n\n#### `select`\n\nBy default, Chrome on OS X and Safari on OS X allow very limited styling of\n`select`, unless a border property is set. The default font weight on `optgroup`\nelements cannot safely be changed in Chrome on OSX and Safari on OS X.\n\n#### `[type=\"checkbox\"]`\n\nIt is recommended that you do not style checkbox and radio inputs as Firefox's\nimplementation does not respect box-sizing, padding, or width.\n\n#### `[type=\"number\"]`\n\nCertain font size values applied to number inputs cause the cursor style of the\ndecrement button to change from `default` to `text`.\n\n#### `[type=\"search\"]`\n\nThe search input is not fully stylable by default. In Chrome and Safari on\nOSX/iOS you can't control `font`, `padding`, `border`, or `background`. In\nChrome and Safari on Windows you can't control `border` properly. It will apply\n`border-width` but will only show a border color (which cannot be controlled)\nfor the outer 1px of that border. Applying `-webkit-appearance: textfield`\naddresses these issues without removing the benefits of search inputs (e.g.\nshowing past searches).\n\n## Contributing\n\nPlease read the [contribution guidelines](CONTRIBUTING.md) in order to make the\ncontribution process easy and effective for everyone involved.\n\n\n[changelog-image]: https://img.shields.io/badge/changelog-md-blue.svg?style=flat-square\n[changelog-url]: CHANGELOG.md\n[license-image]: https://img.shields.io/npm/l/normalize.css.svg?style=flat-square\n[license-url]: LICENSE.md\n[npm-image]: https://img.shields.io/npm/v/normalize.css.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/normalize.css\n[gitter-image]: https://img.shields.io/badge/chat-gitter-blue.svg?style=flat-square\n[gitter-url]: https://gitter.im/necolas/normalize.css\n"}, {"repo": "ionic-team/ionicons", "language": "TypeScript", "readme_contents": "# Ionicons\n\n[Ionicons](http://ionicons.com/) is a completely open-source icon set with 1,100+ icons crafted for web, iOS, Android, and desktop apps. Ionicons was built for [Ionic Framework](https://ionicframework.com/), so icons have both Material Design and iOS versions.\n\nNote: All brand icons are trademarks of their respective owners. The use of these trademarks does not indicate endorsement of the trademark holder by Ionic, nor vice versa.\n\nWe intend for this icon pack to be used with [Ionic](http://ionicframework.com/), but it\u2019s by no means limited to it. Use them wherever you see fit, personal or commercial. They are free to use and licensed under [MIT](http://opensource.org/licenses/MIT).\n\n\n## Contributing\n\nThanks for your interest in contributing! Read up on our guidelines for\n[contributing](https://github.com/ionic-team/ionicons/blob/master/.github/CONTRIBUTING.md)\nand then look through our issues with a [help wanted](https://github.com/ionic-team/ionicons/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)\nlabel.\n\n\n## Using the Web Component\n\nThe Ionicons Web Component is an easy and performant way to use Ionicons in your app. The component will dynamically load an SVG for each icon, so your app is only requesting the icons that you need.\n\nAlso note that only visible icons are loaded, and icons which are \"below the fold\" and hidden from the user's view do not make fetch requests for the svg resource.\n\n### Installation\n\nIf you're using [Ionic Framework](https://ionicframework.com/), Ionicons is packaged by default, so no installation is necessary. Want to use Ionicons without Ionic Framework? Place the following `<script>` near the end of your page, right before the closing </body> tag, to enable them.\n\n```html\n<script src=\"https://unpkg.com/ionicons@5.0.0/dist/ionicons.js\"></script>\n```\n\n### Basic usage\n\nTo use a built-in icon from the Ionicons package, populate the `name` attribute on the ion-icon component:\n\n```html\n<ion-icon name=\"heart\"></ion-icon>\n```\n\nTo use a custom SVG, provide its url in the `src` attribute to request the external SVG file. The `src` attribute works the same as `<img src=\"...\">` in that the url must be accessible from the webpage that's making a request for the image. Additionally, the external file can only be a valid svg and does not allow scripts or events within the svg element.\n\n```html\n<ion-icon src=\"/path/to/external/file.svg\"></ion-icon>\n```\n\n### Icon sizes\n\nTo specify the icon size, you can use the size attribute for our pre-defined font sizes.\n\n```html\n<ion-icon size=\"small\"></ion-icon>\n<ion-icon size=\"large\"></ion-icon>\n```\n\nOr you can set a specific size by applying the `font-size` CSS property on the `ion-icon` component. It's recommended to use pixel sizes that are a multiple of 8 (8, 16, 32, 64, etc.)\n\n```css\nion-icon {\n  font-size: 64px;\n}\n```\n\n## License\n\nIonicons is licensed under the [MIT license](http://opensource.org/licenses/MIT).\n\n\n## Related\n\n* [Ionicons Homepage](http://ionicons.com/)\n* [Ionic Framework](https://ionicframework.com/)\n* [Ionic Worldwide Slack](http://ionicworldwide.herokuapp.com/)\n* [Ionic Forum](https://forum.ionicframework.com/)\n* [Stencil](https://stenciljs.com/)\n* [Stencil Worldwide Slack](https://stencil-worldwide.slack.com)\n"}, {"repo": "designmodo/Flat-UI", "language": "CSS", "readme_contents": "\n# [Flat UI Free](https://designmodo.github.io/Flat-UI/)\n\nFlat UI is a beautiful theme for [Bootstrap](http://getbootstrap.com). We have redesigned many of its components to look flat in every pixel.\n\nTo get started, check out [getting started page](https://designmodo.github.io/Flat-UI/docs/getting-started.html) or follow instructions below.\n\n## Links:\n\n+ [Demo Page](https://designmodo.github.io/Flat-UI/)\n+ [Download PSD](https://designmodo.com/flat-free/) (for designers)\n+ [Flat UI Pro 1.4.0](https://designmodo.com/flat/) (from $39)\n\n## Quick start\n\nThree quick start options are available:\n\n- [Download the latest release](https://github.com/designmodo/Flat-UI/archive/2.3.0.zip).\n- Clone the repo: `git clone https://github.com/designmodo/Flat-UI.git`.\n- Install with [Bower](http://bower.io): `bower install flat-ui`.\n\nRun `npm install` and `bower install` to install dependencies.\n\nRead the [getting started page](https://designmodo.github.io/Flat-UI/docs/getting-started.html) for information on the framework contents.\n\nExamples: <https://github.com/designmodo/Flat-UI/tree/master/docs/examples>.\n\n\n### What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```\nflat-ui/\n\u2514\u2500\u2500 app/\n  \u251c\u2500\u2500 css/\n  \u251c\u2500\u2500 fonts/\n  \u251c\u2500\u2500 images/\n  \u251c\u2500\u2500 scripts/\n  \u2514\u2500\u2500 styles/\n      \u251c\u2500\u2500 mixins/\n      \u251c\u2500\u2500 modules/\n      \u251c\u2500\u2500 flat-ui.scss\n      \u251c\u2500\u2500 _mixins.scss\n      \u251c\u2500\u2500 _spaces.scss\n      \u2514\u2500\u2500 _variables.scss\n\u251c\u2500\u2500 dist/\n  \u251c\u2500\u2500 css/\n  \u251c\u2500\u2500 fonts/\n  \u251c\u2500\u2500 images/\n  \u251c\u2500\u2500 scripts/\n\u251c\u2500\u2500 docs/\n  \u251c\u2500\u2500 examples/\n  \u251c\u2500\u2500 components.html\n  \u251c\u2500\u2500 getting-started.html\n  \u251c\u2500\u2500 index.html\n  \u2514\u2500\u2500 template.html\n```\n\nWe provide compiled CSS and JS (`flat-ui.*`), as well as compiled and minified CSS and JS (`flat-ui.min.*`). Fonts with icons are included.\n\n## Documentation\n\nFlat UI's documentation, included in this repo in the docs directory and publicly hosted on GitHub Pages at <https://designmodo.github.io/Flat-UI/docs/components.html>.\n\n\n## SASS support\n\nIf you are interested in SASS source files - you can visit this project made by @wingrunr21:\n[Designmodo's Flat-UI ported to SASS with support for Flat-UI Pro](https://github.com/wingrunr21/flat-ui-sass)\n\n## Copyright and license\n\nFlat UI Free is licensed under a Creative Commons Attribution 3.0 Unported (CC BY 3.0)  (http://creativecommons.org/licenses/by/3.0/) and MIT License - http://opensource.org/licenses/mit-license.html.\n\nYou are allowed to use these elements anywhere you want, however we\u2019ll highly appreciate if you will link to our [website](https://designmodo.com).\n\n## Typeface\n\nFlat UI Free is made using the Lato typeface, which can be downloaded for free here: http://www.google.com/webfonts/specimen/Lato\n\n## Designmodo Products\n\n**Postcards - [https://designmodo.com/postcards/](https://designmodo.com/postcards/)**\n\nCreate beautiful responsive emails and newsletters with a simple drag & drop. It includes more than 100 modules to\nhelp you create custom emails faster than ever before.\n\n**Slides Framework - [https://designmodo.com/slides/](https://designmodo.com/slides/)**\n\nSlides is a framework based on its own CSS3, JavaScript, and HTML5 language with a unique code and structure that lets you create, with minimum effort, visually captivating websites with a lot of built-in options.\n\n**Startup Framework - [https://designmodo.com/startup/](https://designmodo.com/startup/)**\n\nStartup Framework is based on Bootstrap and help you to create beautiful and responsive websites. Build your website quickly with an intuitive and easy-to-use drag and drop interface.\n\n## Useful Links\n\nMore products from Designmodo: <https://designmodo.com/products/>\n\nDesignmodo Market: <http://market.designmodo.com/>\n\nTutorials: <https://designmodo.com/tutorials/>\n\nFreebies: <https://designmodo.com/freebies/>\n\nAffiliate Program (earn money): <https://designmodo.com/affiliates/>\n\n**Social Media:**\n\nTwitter: <http://www.twitter.com/designmodo>\n\nFacebook: <http://www.facebook.com/designmodo>\n\nRSS: <http://feeds.feedburner.com/designmodo>\n\nGoogle+: <https://www.google.com/+Designmodo>\n"}, {"repo": "h5bp/html5-boilerplate", "language": "JavaScript", "readme_contents": "# [HTML5 Boilerplate](https://html5boilerplate.com/)\n\n[![LICENSE](https://img.shields.io/badge/license-MIT-lightgrey.svg)](https://github.com/h5bp/html5-boilerplate/blob/master/LICENSE.txt)\n[![Build Status](https://travis-ci.org/h5bp/html5-boilerplate.svg)](https://travis-ci.org/h5bp/html5-boilerplate)\n[![devDependency Status](https://david-dm.org/h5bp/html5-boilerplate/dev-status.svg)](https://david-dm.org/h5bp/html5-boilerplate#info=devDependencies)\n[![NPM Downloads](https://img.shields.io/npm/dt/html5-boilerplate.svg)](https://www.npmjs.com/package/html5-boilerplate)\n[![github-stars-image](https://img.shields.io/github/stars/h5bp/html5-boilerplate.svg?label=github%20stars)](https://github.com/h5bp/html5-boilerplate)\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\n\nThis project is the product of years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\n* Homepage: [https://html5boilerplate.com/](https://html5boilerplate.com/)\n* Source: [https://github.com/h5bp/html5-boilerplate](https://github.com/h5bp/html5-boilerplate)\n* Twitter: [@h5bp](https://twitter.com/h5bp)\n\n\n## Quick start\n\nChoose one of the following options:\n\n* Download the latest stable release from\n  [html5boilerplate.com](https://html5boilerplate.com/). This zip file is a snapshot of the `dist` folder. On Windows, Mac and from the file manager on Linux unzipping this folder will output to a folder named something like `html5-boilerplate_v7.3.0`. From the command line will need to create a folder and unzip the contents into that folder.\n\n  ```bash\n  mkdir html5-boilerplate\n  unzip html5-boilerplate*.zip -d html5-boilerplate\n  ```\n\n* Clone the git repo \u2014 `git clone\n  https://github.com/h5bp/html5-boilerplate.git` - and checkout the\n  [tagged release](https://github.com/h5bp/html5-boilerplate/releases)\n  you'd like to use. The `dist` folder represents the latest version of the project for end users. \n* Install with [npm](https://www.npmjs.com/): `npm install html5-boilerplate` or [yarn](https://yarnpkg.com/): `yarn add html5-boilerplate`. The resulting `node_modules/html5-boilerplate/dist` folder represents the latest version of the project for end users. Depending on what you want to use and how you want to use it, you may have to copy and paste the contents of that folder into your project directory.\n\n## Features\n\n* HTML5 ready. Use the new elements with confidence.\n* Designed with progressive enhancement in mind.\n* Includes:\n  * [`Normalize.css`](https://necolas.github.com/normalize.css/)\n    for CSS normalizations and common bug fixes\n  * [`jQuery`](https://jquery.com/) via CDN with [SRI Hash](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) and a local fallback\n  * A custom build of [`Modernizr`](https://modernizr.com/) for feature\n    detection\n  * [`Apache Server Configs`](https://github.com/h5bp/server-configs-apache)\n    that, among other, improve the web site's performance and security\n* Placeholder CSS Media Queries.\n* Useful CSS helper classes.\n* Default print styles, performance optimized.\n* An optimized version of the Google Universal Analytics snippet.\n* Protection against any stray `console` statements causing JavaScript\n  errors in older browsers.\n* \"Delete-key friendly.\" Easy to strip out parts you don't need.\n* Extensive inline and accompanying documentation.\n\n\n## Browser support\n\n* Chrome *(latest 2)*\n* Edge *(latest 2)*\n* Firefox *(latest 2)*\n* Internet Explorer 11\n* Opera *(latest 2)*\n* Safari *(latest 2)*\n\n*This doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.*\n\nIf you need legacy browser support you can use [HTML5 Boilerplate v6](https://github.com/h5bp/html5-boilerplate/releases/tag/6.1.0) (IE9/IE10)\nor [HTML5 Boilerplate v5](https://github.com/h5bp/html5-boilerplate/releases/tag/5.3.0) (IE 8). They are no longer actively developed.\n\n## Documentation\n\nTake a look at the [documentation table of contents](dist/doc/TOC.md).\nThis documentation is bundled with the project which makes it \navailable for offline reading and provides a useful starting point for\nany documentation you want to write about your project.\n\n## Contributing\n\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to [contribute](.github/CONTRIBUTING.md),\nhowever, if you decide to get involved, please take a moment to review\nthe [guidelines](.github/CONTRIBUTING.md):\n\n* [Bug reports](.github/CONTRIBUTING.md#bugs)\n* [Feature requests](.github/CONTRIBUTING.md#features)\n* [Pull requests](.github/CONTRIBUTING.md#pull-requests)\n\n## License\n\nThe code is available under the [MIT license](LICENSE.txt).\n"}, {"repo": "foundation/foundation-sites", "language": "HTML", "readme_contents": "<p align=\"center\">\n  <a href=\"http://foundation.zurb.com/\">\n    <img src=\"https://user-images.githubusercontent.com/9939075/38782856-2a64a43e-40fa-11e8-89cd-e873af03b3c4.png\" alt=\"Foundation for Sites 6\" width=\"448px\" style=\"max-width:100%;\"/>\n  </a>\n</p>\n\u00a0\n\u00a0\n\n\n<p align=\"center\">\n  <a href=\"https://foundation.zurb.com/sites/docs/installation.html\"><b>Install</b></a>\n  | <a href=\"https://foundation.zurb.com/sites/docs\">Documentation</a>\n  | <a href=\"https://github.com/zurb/foundation-sites/releases\">Releases</a>\n  | <a href=\"CONTRIBUTING.md\">Contributing</a>\n</p>\n\n---\n\n\n[![Build Status](https://travis-ci.org/zurb/foundation-sites.svg?branch=develop)](https://travis-ci.org/zurb/foundation-sites)\n[![dependencies Status](https://david-dm.org/zurb/foundation-sites/status.svg)](https://david-dm.org/zurb/foundation-sites)\n[![devDependencies Status](https://david-dm.org/zurb/foundation-sites/dev-status.svg)](https://david-dm.org/zurb/foundation-sites?type=dev)\n[![npm version](https://badge.fury.io/js/foundation-sites.svg)](https://badge.fury.io/js/foundation-sites)\n[![Bower version](https://badge.fury.io/bo/foundation-sites.svg)](https://badge.fury.io/bo/foundation-sites)\n[![Gem Version](https://badge.fury.io/rb/foundation-rails.svg)](https://badge.fury.io/rb/foundation-rails)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/foundation-sites/badge?style=rounded)](https://www.jsdelivr.com/package/npm/foundation-sites)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/zurb/foundation-sites?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nFoundation is the most advanced responsive front-end framework in the world. Quickly go from prototype to production, building sites or apps that work on any kind of device with Foundation. Includes a fully customizable, responsive grid, a large library of Sass mixins, commonly used JavaScript plugins, and full accessibility support.\n\n---\n\n## Run locally\n\n### Documentation\n\nTo run the documentation locally on your machine, you need [Node.js](https://nodejs.org/en/) installed on your computer. (Your Node.js version must be **6.4.0** or higher). Run these commands to set up the documentation:\n\n```bash\n# Install\ngit clone https://github.com/zurb/foundation-sites\ncd foundation-sites\nnpm install\n\n# Start the documentation\nnpm start\n```\n\n### Testing\n\nFoundation has three kinds of tests: JavaScript, Sass, and visual regression. Refer to our [testing guide](https://github.com/zurb/foundation-sites/wiki/Testing-Guide) for more details.\n\nRun tests with:\n```bash\n# Sass unit tests\nnpm run test:sass\n# JavaScript unit tests\nnpm run test:javascript:units\n# Visual tests\nnpm run test:visual\n```\n\nTesting Supported By<br/>\n<img width=\"160\" src=\"http://foundation.zurb.com/sites/docs/assets/img/logos/browser-stack.svg\" alt=\"BrowserStack\"/>\n\n## Contributing\n\nCheck out [CONTRIBUTING.md](CONTRIBUTING.md) to see how to report an issue or submit a bug fix or a new feature, and our  [contributing guide](http://foundation.zurb.com/develop/contribute.html) to learn how you can contribute more globally to Foundation. You can also browse the [Help Wanted](https://github.com/zurb/foundation-sites/labels/help%20wanted) tag in our issue tracker to find things to do.\n\n## Training\n\nWant the guided tour to Foundation from the team that built it? The ZURB team offers comprehensive training courses for developers of all skill levels. If you're new to Foundation, check out the [Introduction to Foundation Course](http://zurb.com/university/foundation-intro?utm_source=Github%20Repo&utm_medium=website&utm_campaign=readme&utm_content=readme%20training%20link) to kickstart your skills, amplify your productivity, and get a comprehensive overview of everything Foundation has to offer. More advanced users should check out the [Advanced Foundation Course](http://zurb.com/university/advanced-foundation-training?utm_source=Github%20Repo&utm_medium=website&utm_campaign=readme&utm_content=readme%20training%20link) to learn the Advanced skills that ZURB uses to deliver quality client work in short timeframes.\n\nCopyright \u00a9 2019 ZURB, Inc.\n"}, {"repo": "Modernizr/Modernizr", "language": "JavaScript", "readme_contents": "# Modernizr \n[![npm version](https://badge.fury.io/js/modernizr.svg)](https://badge.fury.io/js/modernizr)\n[![Build Status](https://api.travis-ci.org/Modernizr/Modernizr.svg?branch=master)](https://travis-ci.org/Modernizr/Modernizr) \n[![Inline docs](https://inch-ci.org/github/Modernizr/Modernizr.svg?branch=master)](https://inch-ci.org/github/Modernizr/Modernizr)\n\n##### Modernizr is a JavaScript library that detects HTML5 and CSS3 features in the user\u2019s browser.\n\n- [Website](https://modernizr.com)\n- [Documentation](https://modernizr.com/docs/)\n- [Integration tests](https://modernizr.github.io/Modernizr/test/integration.html)\n- [Unit tests](https://modernizr.github.io/Modernizr/test/unit.html)\n\nModernizr tests which native CSS3 and HTML5 features are available in the current UA and makes the results available to you in two ways: as properties on a global `Modernizr` object, and as classes on the `<html>` element. This information allows you to progressively enhance your pages with a granular level of control over the experience.\n\n## New Asynchronous Event Listeners\n\nOften times people want to know when an asynchronous test is done so they can allow their application to react to it.\nIn the past, you've had to rely on watching properties or `<html>` classes. Only events on **asynchronous** tests are\nsupported. Synchronous tests should be handled synchronously to improve speed and to maintain consistency.\n\nThe new API looks like this:\n\n```js\n// Listen to a test, give it a callback\nModernizr.on('testname', function( result ) {\n  if (result) {\n    console.log('The test passed!');\n  }\n  else {\n    console.log('The test failed!');\n  }\n});\n```\n\nWe guarantee that we'll only invoke your function once (per time that you call `on`). We are currently not exposing\na method for exposing the `trigger` functionality. Instead, if you'd like to have control over async tests, use the\n`src/addTest` feature, and any test that you set will automatically expose and trigger the `on` functionality.\n\n## Getting Started\n\n- Clone or download the repository\n- Install project dependencies with `npm install`\n\n## Building Modernizr \n\n### From javascript\n\nModernizr can be used programmatically via npm:\n\n```js\nvar modernizr = require(\"modernizr\");\n```\n\nA `build` method is exposed for generating custom Modernizr builds. Example:\n\n```javascript\nvar modernizr = require(\"modernizr\");\n\nmodernizr.build({}, function (result) {\n  console.log(result); // the build\n});\n```\n\nThe first parameter takes a JSON object of options and feature-detects to include. See [`lib/config-all.json`](lib/config-all.json) for all available options.\n\nThe second parameter is a function invoked on task completion.\n\n### From the command-line\n\nWe also provide a command line interface for building modernizr. \nTo see all available options run:\n\n```shell\n./bin/modernizr\n```\n\nOr to generate everything in 'config-all.json' run this with npm:\n\n```shell\nnpm start\n//outputs to ./dist/modernizr-build.js\n```\n\n## Testing Modernizr\n\nTo execute the tests using mocha-headless-chrome on the console run:\n\n```shell\nnpm test\n```\n\nYou can also run tests in the browser of your choice with this command:\n\n```shell\nnpm run serve-gh-pages\n```\n\nand navigating to these two URLs:\n\n```shell\nhttp://localhost:8080/test/unit.html\nhttp://localhost:8080/test/integration.html\n```\n \n \n## Deprecation\n\nThese tests are considered deprecated. They are not included anymore in the default build\nand will be removed in the next major version:\n\n- `touchevents` (in 4.0)\n- `unicode` (in 4.0) \n\n\n## Code of Conduct\n\nThis project adheres to the [Open Code of Conduct](https://github.com/Modernizr/Modernizr/blob/master/.github/CODE_OF_CONDUCT.md). \nBy participating, you are expected to honor this code.\n\n\n## License\n\n[MIT License](https://opensource.org/licenses/MIT)\n"}, {"repo": "twbs/ratchet", "language": "CSS", "readme_contents": "# [Ratchet](http://goratchet.com)\n[![GitHub Release](https://img.shields.io/github/release/twbs/ratchet.svg)](https://github.com/twbs/ratchet/releases)\n[![Build Status](https://img.shields.io/travis/twbs/ratchet/master.svg)](https://travis-ci.org/twbs/ratchet)\n[![devDependency Status](https://img.shields.io/david/dev/twbs/ratchet.svg)](https://david-dm.org/twbs/ratchet#info=devDependencies)\n\nBuild mobile apps with simple HTML, CSS, and JS components.\n\n## Table of contents\n\n* [Getting started](#getting-started)\n* [Documentation](#documentation)\n* [Support](#support)\n* [Contributing](#contributing)\n* [Troubleshooting](#troubleshooting)\n* [Versioning](#versioning)\n* [Maintainers](#maintainers)\n* [License](#license)\n\n## Getting started\n\n* Clone the repo with `git clone https://github.com/twbs/ratchet.git` or just [download](http://github.com/twbs/ratchet/archive/v2.0.2.zip) the bundled CSS and JS\n* [Read the docs](http://goratchet.com) to learn about the components and how to get a prototype on your phone\n* [Check out examples](http://goratchet.com/examples/)\n\nTake note that our master branch is our active, unstable development branch and that if you're looking to download a stable copy of the repo, check the [tagged downloads](https://github.com/twbs/ratchet/tags).\n\n### What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\n\n```\nratchet/\n\u251c\u2500\u2500 css/\n\u2502   \u251c\u2500\u2500 ratchet.css\n\u2502   \u251c\u2500\u2500 ratchet.min.css\n\u2502   \u251c\u2500\u2500 ratchet-theme-android.css\n\u2502   \u251c\u2500\u2500 ratchet-theme-android.min.css\n\u2502   \u251c\u2500\u2500 ratchet-theme-ios.css\n\u2502   \u2514\u2500\u2500 ratchet-theme-ios.min.css\n\u251c\u2500\u2500 js/\n\u2502   \u251c\u2500\u2500 ratchet.js\n\u2502   \u2514\u2500\u2500 ratchet.min.js\n\u2514\u2500\u2500 fonts/\n    \u251c\u2500\u2500 ratchicons.eot\n    \u251c\u2500\u2500 ratchicons.svg\n    \u251c\u2500\u2500 ratchicons.ttf\n    \u2514\u2500\u2500 ratchicons.woff\n```\n\nWe provide compiled CSS and JS (`ratchet.*`), as well as compiled and minified CSS and JS (`ratchet.min.*`). The Ratchicon fonts are included, as are the optional Android and iOS platform themes.\n\n## Documentation\n\nRatchet's documentation is built with [Jekyll](http://jekyllrb.com) and publicly hosted on GitHub Pages at <http://goratchet.com>. The docs may also be run locally.\n\n### Running documentation locally\n\n1. If necessary, [install Jekyll](http://jekyllrb.com/docs/installation) (requires v3.0.x).\n  * **Windows users:** Read [this unofficial guide](http://jekyll-windows.juthilo.com/) to get Jekyll up and running without problems.\n2. Install the Ruby-based syntax highlighter, [Rouge](https://github.com/jneen/rouge), with `gem install rouge`.\n3. From the root `/ratchet` directory, run `jekyll serve` in the command line.\n4. Open <http://localhost:4000> in your browser, and boom!\n\nLearn more about using Jekyll by reading its [documentation](http://jekyllrb.com/docs/home/).\n\n### Documentation for previous releases\n\nDocumentation for v1.0.2 has been made available for the time being at <http://goratchet.com/1.0.2/> while folks transition to Ratchet 2.\n\n[Previous releases](https://github.com/twbs/ratchet/releases) and their documentation are also available for download.\n\n## Support\n\nQuestions or discussions about Ratchet should happen in the [Google group](https://groups.google.com/forum/#!forum/goratchet) or hit us up on Twitter [@GoRatchet](https://twitter.com/goratchet).\n\n## Contributing\n\nPlease file a GitHub issue to [report a bug](https://github.com/twbs/ratchet/issues). When reporting a bug, be sure to follow the [contributor guidelines](https://github.com/twbs/ratchet/blob/master/CONTRIBUTING.md).\n\n## Troubleshooting\n\nA small list of \"gotchas\" is provided below for designers and developers starting to work with Ratchet.\n\n* Ratchet is designed to respond to touch events from a mobile device. In order to use mouse click events (for desktop browsing and testing), you have a few options:\n  * Enable touch event emulation in Chrome (found in the overrides tab in the web inspector preferences)\n  * Use a JavaScript library like fingerblast.js to emulate touch events (ideally only loaded from desktop devices)\n* Script tags containing JavaScript will not be executed on pages that are loaded with push.js. If you would like to attach event handlers to elements on other pages, document-level event delegation is a common solution.\n* Ratchet uses XHR requests to fetch additional pages inside the application. Due to security concerns, modern browsers prevent XHR requests when opening files locally (aka using the `file://` protocol); consequently, Ratchet does not work when opened directly as a file.\n  * A common solution to this is to simply serve the files from a local server. One convenient way to achieve this is to run `python -m SimpleHTTPServer <port>` to serve up the files in the current directory to `http://localhost:<port>`\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Ratchet is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we'll adhere to these rules whenever possible.\n\nReleases will be numbered with the following format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backward compatibility **bumps the major** while resetting minor and patch\n* New additions without breaking backward compatibility **bumps the minor** while resetting the patch\n* Bug fixes and misc changes **bumps only the patch**\n\nFor more information on SemVer, please visit <http://semver.org/>.\n\n## Maintainers\n\nConnor Sears\n\n* <https://twitter.com/connors>\n* <https://github.com/connors>\n\n\nCreated by Connor Sears, Dave Gamache, and Jacob Thornton.\n\n\n## License\n\nRatchet is licensed under the [MIT License](http://opensource.org/licenses/MIT).\n"}, {"repo": "IanLunn/Hover", "language": "CSS", "readme_contents": "# Hover.css\n\n[![Join the chat at https://gitter.im/IanLunn/Hover](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/IanLunn/Hover?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA collection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and so on. Easily apply to your own elements, modify or just use for inspiration. Available in CSS, Sass, and LESS.\n\n[Demo](http://ianlunn.github.io/Hover)  |\n[Tutorial](http://ianlunn.co.uk/articles/hover-css-tutorial-introduction/)\n\n## Contents\n- [Download/Install](#downloadinstall)\n- [How To Use](#how-to-use)\n    - [A. Copy and Paste an Effect](#a-copy-and-paste-an-effect)\n    - [B. Reference Hover.css](#b-reference-hovercss)\n    - [A Note on the display property](#a-note-on-the-display-property)\n    - [Using Icon Effects](#using-icon-effects)\n- [What's Included?](#whats-included)\n    - [css](#css)\n    - [scss/less](#scssless)\n    - [Other](#other)\n- [Browser Support](#browser-support)\n- [Using Grunt for Development](#using-grunt-for-development)\n- [Using Sass/LESS for Development](#using-sassless-for-development)\n    - [_hacks](#\\_hacks)\n    - [_mixins](#\\_mixins)\n    - [_options](#\\_options)\n- [Contribute to Hover.css](#contribute-to-hovercss)\n- [Licenses](#licenses)\n    - [Commercial License](#commercial-license)\n    - [Open-Source License](#open-source-license)\n- [Hire Ian Lunn](#hire-ian-lunn)\n\n## Download/Install\n\n- NPM: `npm install hover.css --save`\n- Bower: `bower install hover --save`\n- [Download Zip](https://github.com/IanLunn/Hover/archive/master.zip)\n\n## How To Use\nHover.css can be used in a number of ways; either copy and paste the effect you'd like to use in your own stylesheet or reference the stylesheet. Then just add the class name of the effect to the element you'd like it applied to.\n\n### A. Copy and Paste an Effect\nIf you plan on only using one or several effects, it's better practice to copy and paste an effect into your own stylesheet, so a user doesn't have to download `css/hover.css` in its entirety.\n\nAssuming you want to use the Grow effect:\n\n1. Download Hover.css\n2. In `css/hover.css`, find the Grow CSS (each effect is named using a comment above it):\n\n    ```css\n    /* Grow */\n    .hvr-grow {\n        display: inline-block;\n        vertical-align: middle;\n        transform: translateZ(0);\n        box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n        backface-visibility: hidden;\n        -moz-osx-font-smoothing: grayscale;\n        transition-duration: 0.3s;\n        transition-property: transform;\n    }\n\n    .hvr-grow:hover,\n    .hvr-grow:focus,\n    .hvr-grow:active {\n        transform: scale(1.1);\n    }\n    ```\n3. Copy this effect and then paste it into your own stylesheet.\n4. In the HTML file which you'd like the effect to appear, add the class of `.hvr-grow` to your chosen element.\n\nExample element before applying Hover.css effect:\n\n```html\n<a href=\"#\">Add to Basket</a>\n```\n\nExample element after applying Hover.css effect:\n\n```html\n<a href=\"#\" class=\"hvr-grow\">Add to Basket</a>\n```\n\n**Note**: As of `2.0.0` all Hover.css class names are prefixed with `hvr-` to prevent conflicts with other libraries/stylesheets. If using Sass/LESS, this can easily be changed using the `$nameSpace`/`@nameSpace` variable in `scss/_options.scss` or `less/_options.less`.\n\n### B. Reference Hover.css\n\nIf you plan on using many Hover.css effects, you may like to reference the entire Hover.css stylesheet.\n\n1. Download `hover-min.css`\n2. Add `hover-min.css` to your websites files, in a directory named `css` for example\n3. Reference `hover-min.css` in `<head>` of the HTML page you'd like to add Hover.css effects to:\n```html\n<head>\n\t<link href=\"css/hover-min.css\" rel=\"stylesheet\">\n</head>\n```\nAlternatively you can add a reference into an existing stylesheet like so (this may be useful to WordPress users who are unable to edit HTML):\n```css\n@import url(\"hover-min.css\");\n```\n4. Assuming you want to use the Grow effect, in the HTML file you'd like to use this effect, add the class of `.hvr-grow` to your chosen element.\n\nExample element before applying Hover.css effect:\n\n```html\n<a href=\"#\" class=\"button\">Add to Basket</a>\n```\n\nExample element after applying Hover.css effect:\n\n```html\n<a href=\"#\" class=\"button hvr-grow\">Add to Basket</a>\n```\n\n### A Note on the `display` Property\n\nTo make an element \"transformable\", Hover.css  gives the following to all elements it is applied to:\n\n```css\ndisplay: inline-block;\nvertical-align: middle;\n```\n\nShould you wish to override this behavior, either remove the above CSS from Hover.css or change the `display` property for the element. Be sure to declare the override after the Hover.css declarations so the CSS cascade will take effect. Alternatively, if you are using the Sass/LESS version of Hover.css, you can remove/comment out the `forceBlockLevel()` mixin found in `scss/_hacks.scss` or `less/_hacks.less`.\n\nFor more information about Transformable elements, see the [CSS Transforms Module](http://www.w3.org/TR/css3-transforms/#transformable-element).\n\n### Using Icon Effects\n\nTo add a Hover.css icon, place the icon HTML inside the element that a Hover.css effect is applied to. For example:\n\n```\n<a href=\"#\" class=\"hvr-icon-forward\">\n  Icon Forward\n  <i class=\"fa fa-chevron-circle-right hvr-icon\"></i>\n</a>\n```\n\nIn the above code, we have given a link element a class of `hvr-icon-forward` which will make an icon move forward when the link is hovered over. The icon itself is given a class of `hvr-icon` to let Hover.css know that this is the icon we want to animate. In this example, our icon is from FontAwesome, which we've loaded into the `<head></head>` of our web page as per FontAwesome's instructions, like so:\n\n```html\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\" media=\"all\">\n```\n\nNote: As of Hover.css v2.3.0 you can use any method you like for adding icons (previously, only FontAwesome was supported out-of-the-box.) For example, you could use another icon library or instead, use an image like so:\n\n```\n<a href=\"#\" class=\"hvr-icon-spin\">\n  Icon Spin\n  <img src=\"myicon.svg\" class=\"hvr-icon\" />\n</a>\n```\n\nHere, the image will act as the icon because it has the `hvr-icon` class applied to it, and when hovered over, the icon will spin as defined by the `hvr-icon-spin` class on the parent element.\n\nPosition of the icon is entirely in your control. You could place it before the text, like so:\n\n```\n<a href=\"#\" class=\"hvr-icon-spin\">\n  <img src=\"myicon.svg\" class=\"hvr-icon\" />\n  Icon Spin\n</a>\n```\n\nOr use custom CSS to position the icon as you see fit.\n\n## What's Included?\n\nThe project consists of the following folders and files:\n\n### css\n\n- **demo-page.css** - Contains styles to demonstrate Hover. Not required in your projects\n- **hover-min.css** - The minified/production version of Hover.css\n- **hover.css** - The development version of Hover.css\n\n### scss/less\n\n- **effects** - Contains each individual effect sorted into categorized folders\n- **_hacks.scss/_hacks.less, _mixins.scss/_mixins.less, _options.scss/_options.less** - Sass/LESS Utilities\n- **hover.scss/hover.less** - Development version of Hover.css in Sass and LESS flavours\n\n### Other\n\nOther files of note include:\n\n- **index.html** - Demonstrates all Hover.css effects\n- **Gruntfile.js** - Used for [development of Hover.css via Grunt](#using-grunt-for-development).\n\n## Browser Support\nMany Hover.css effects rely on CSS3 features such as transitions, animations, transforms and pseudo-elements, for that reason, effects may not fully work in older browsers.\n\n- [Transitions](http://caniuse.com/#search=transitions) and [Animations](http://caniuse.com/#search=animations) - not supported below Internet Explorer 10\n- [Transforms](http://caniuse.com/#search=transforms) - not supported below Internet Explorer 9\n- [Generated Content (pseudo-elements)](http://caniuse.com/#search=pseudo-elements) - not supported below Internet Explorer 8\n\nAside from the above mentioned browsers, Hover.css is supported across all major browsers. Please see [caniuse.com](http://caniuse.com/) for full support for many web technologies and test your webpages accordingly. It is recommended to apply fallback effects for older browsers, using CSS supported by those browsers or a feature testing library such as [Modernizr](http://modernizr.com/).\n\n## Using Grunt for Development\n\nGrunt is non-essential but can speed up development. With [Grunt installed](http://gruntjs.com/getting-started), run `grunt` from the command line to set up a development server accessed at [http://127.0.0.1:8000/](http://127.0.0.1:8000/) or your local IP for network testing. With Grunt running, Sass or LESS will be preprocessed (depending on whether you work out of the `scss` or `less` folder) and CSS files will be minified.\n\n**Note:** Originally Grunt was set up to autoprefix CSS properties but to make the project as accessible as possible, this is no longer the case. The `prefixed(property, value)` Sass/LESS mixin should be used for browser prefixing instead. See [Using Sass/LESS for Development](#using-sassless-for-development) and [Using LESS for Development].\n\n## Using Sass/LESS for Development\n\nSass/LESS are non-essential but can speed up development. Preprocess Sass/LESS with your favourite software or the environment provided via [Grunt](#using-grunt-for-development).\n\nSass/LESS is used in the Hover.css project to separate various CSS into specific files. Each effect is within its own file in the `effects` directory. Hover.css also uses the following `.scss` and `.less` files:\n\n### _hacks\nContains hacks (undesirable but usually necessary lines of code) applied to certain effects. [Hacks explained here](https://github.com/IanLunn/Hover/wiki/Hacks-Explained).\n\n### _mixins\nContains `prefixed` and `keyframes` mixins that apply the necessary prefixes you specify in `_options.scss` / `_options.less` to properties and keyframes.\n\nProperties can be prefixed like so:\n\n- Sass:\n```css\n@include prefixed(transition-duration, .3s);\n```\n- LESS:\n```css\n.prefixed(transition-duration, .3s);\n```\n\nThe `prefixed` mixin is passed the property you want to prefix, followed by its value.\n\nKeyframes can be prefixed like so:\n\n- Sass:\n```css\n@include keyframes(my-animation) {\n    to {\n        color: red;\n    }\n}\n```\nThe `keyframes` mixin is passed the keyframe name, followed by the content using the @content directive.\n\n\n- LESS:\n```css\n.keyframes(my-animation, {\n    to {\n        color: red;\n    }\n});\n```\nThe `keyframes` mixin is passed the keyframe name, followed by the content, both as arguments.\n\n\n### _options\nContains default options, various effect options and the browser prefixes you'd like to use with the `prefixed` mixin. By default, only the `-webkit-` prefix is set to `true` (due to most browsers not requiring prefixes now).\n\nAs of `2.0.0`, `_options` also includes a `$nameSpace` / `@nameSpace` option which allows you to change the name all classes are prefixed with. The default namespace is `hvr`.\n\nThe `$includeClasses` / `@includeClasses` option by default is set to `true` and will generate all Hover.css effects under their own class names, `hvr-grow` for example. Should you wish to add the properties that make up Hover.css effects to your own class names, set this option to `false`.\n\n## Contribute to Hover.css\n\nIf you'd like to contribute your own effects, please see the [Contributing Guide](https://github.com/IanLunn/Hover/blob/master/CONTRIBUTING.md).\n\n## Licenses\n\nHover.css is made available under a free personal/open source or paid commercial licenses depending on your requirements. To compare licenses please visit the [Ian Lunn Design Limited Store](https://ianlunn.co.uk/store/licenses/) and [purchase a commercial license here](https://ianlunn.co.uk/store/hover-css/).\n\n### Personal/Open Source\n\nFor personal/open source use, Hover.css is made available under a [MIT license](https://opensource.org/licenses/MIT)\n\n- Use in unlimited personal applications\n- Your application can't be sold\n- Your modifications remain open-source\n- Free updates\n\n[Read full license](https://ianlunn.co.uk/store/licenses/personal/)\n\n### Commercial\n\nFor commercial use, Hover.css is made available under Commercial, Extended Commercial, and OEM Commercial licenses.\n\n#### Commercial License\n\n- Use in 1 application\n- Sell your application once only (e.g. a website sold to a client)\n- Your code is kept proprietary, to yourself\n- Free updates to the major version\n\n[Purchase](https://ianlunn.co.uk/store/hover-css/?attribute_pa_licenses=commercial) | [Read full license](https://ianlunn.co.uk/store/licenses/commercial/)\n\n#### Extended Commercial License\n\n- Use in unlimited applications\n- Sell your applications an unlimited number of times (e.g. a website template sold on a theme store)*\n- Your code is kept proprietary, to yourself\n- Free updates to the major version\n\n*With the exception of applications that allow end users to produce separate applications. See the OEM Commercial License.\n\n[Purchase](https://ianlunn.co.uk/store/hover-css/?attribute_pa_licenses=extended-commercial) | [Read full license](https://ianlunn.co.uk/store/licenses/extended-commercial/)\n\n#### OEM Commercial License\n\nShould your application enable end users to produce separate applications that incorporate Ian Lunn Design Limited's software, for example, a development toolkit, library, or application builder, you must obtain an OEM Commercial License. Please [contact us](https://ianlunn.co.uk/contact/) for more information about the OEM Commercial License.\n\n### MIT License (Pre v2.2.0 / 24th March 2017)\n\nHover.css was previously made available under a MIT License for both commercial and non-commercial use. Anyone that obtained a MIT license for commercial use before v2.2.0 (24th March 2017) may continue to use Hover.css versions prior to v2.2.0 under that same license.\n\nIf you'd like to upgrade to v2.2.0 or above, or would like to simply show your support for Hover.css (we'd much appreciate it!), please purchase an up-to-date commercial license. [Purchase a Commercial License](https://ianlunn.co.uk/store/hover-css/).\n\n## Hire Ian Lunn\n\n[Ian Lunn](http://ianlunn.co.uk) is a Freelance Front-end Developer and author of [CSS3 Foundations](http://css3foundations.com/).\n\nHire [Ian](http://ianlunn.co.uk) for responsive websites, WordPress websites, JavaScript, animation, and optimization.\n"}, {"repo": "connors/photon", "language": "CSS", "readme_contents": "# [Photon](http://photonkit.com/)\n\n[![Build Status](https://img.shields.io/travis/connors/photon/master.svg)](https://travis-ci.org/connors/photon)\n\nUI toolkit for building desktop apps with Electron.\n\n## Getting started\n\n* Clone the repo with `git clone https://github.com/connors/photon.git`\n* [Read the docs](http://photonkit.com) to learn about the components and how to get your new application started\n\nTake note that our master branch is our active, unstable development branch and that if you're looking to download a stable copy of the repo, check the [tagged downloads](https://github.com/connors/photon/tags).\n\n### What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets. You'll see something like this:\n\n```\nphoton/\n\u251c\u2500\u2500 css/\n\u2502   \u251c\u2500\u2500 photon.css\n\u251c\u2500\u2500 fonts/\n\u2502   \u251c\u2500\u2500 photon-entypo.eot\n\u2502   \u251c\u2500\u2500 photon-entypo.svg\n\u2502   \u251c\u2500\u2500 photon-entypo.ttf\n\u2502   \u2514\u2500\u2500 photon-entypo.woff\n\u2514\u2500\u2500 template-app/\n    \u251c\u2500\u2500 js/\n    \u2502   \u2514\u2500\u2500 menu.js\n    \u251c\u2500\u2500 app.js\n    \u251c\u2500\u2500 index.html\n    \u2514\u2500\u2500 package.json\n```\n\nWe provide compiled CSS (`photon.*`). We also include the Entypo fonts and a template Electron application for you to quickly get started.\n\n## Documentation\n\nPhoton's documentation is built with [Jekyll](http://jekyllrb.com) and publicly hosted on GitHub Pages at <http://photonkit.com>. The docs may also be run locally.\n\n### Running documentation locally\n\n1. If necessary, [install Jekyll](http://jekyllrb.com/docs/installation) (requires v2.5.x).\n  * **Windows users:** Read [this unofficial guide](http://jekyll-windows.juthilo.com/) to get Jekyll up and running without problems.\n2. Install the Ruby-based syntax highlighter, [Rouge](https://github.com/jneen/rouge), with `gem install rouge`.\n3. From the root `/photon` directory, run `jekyll serve` in the command line.\n4. Open <http://localhost:4000> in your browser, and boom!\n\nLearn more about using Jekyll by reading its [documentation](http://jekyllrb.com/docs/home/).\n\n## Contributing\n\nPlease file a GitHub issue to [report a bug](https://github.com/connors/photon/issues). When reporting a bug, be sure to follow the [contributor guidelines](https://github.com/connors/photon/blob/master/CONTRIBUTING.md).\n\n\n## Development\n\n1. Install node dependencies: `npm install`.\n2. Open the example app: `npm start`.\n\nModifying source Sass files? Open a second Terminal tab and run `npm run build` to kick off a build of the compiled `photon.css`.\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Photon is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we'll adhere to these rules whenever possible.\n\nReleases will be numbered with the following format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backward compatibility **bumps the major** while resetting minor and patch\n* New additions without breaking backward compatibility **bumps the minor** while resetting the patch\n* Bug fixes and misc changes **bumps only the patch**\n\nFor more information on SemVer, please visit <http://semver.org/>.\n\n## Maintainers\n\nConnor Sears\n\n* <https://twitter.com/connors>\n* <https://github.com/connors>\n\n## License\n\nCopyright @connors. Released under MIT.\n"}, {"repo": "basscss/basscss", "language": "CSS", "readme_contents": "# Basscss\n\nLow-level CSS toolkit \u2013 the original [Functional CSS][functional-css] library <https://basscss.com>\n\n[![Build Status](https://travis-ci.org/basscss/basscss.svg)](https://travis-ci.org/basscss/basscss)\n[![npm version](https://badge.fury.io/js/basscss.svg)](https://badge.fury.io/js/basscss)\n\n## Lightning-Fast Modular CSS with No Side Effects\n\nBasscss is a lightweight collection of immutable utilities designed for speed, clarity, performance, and scalability.\n\n## Stable\n\nBasscss v8 is the final version of Basscss, which means no major, breaking changes will be introduced.\nMinor features and patches may be added, but\ndue to the nature of this CSS approach, there are virtually no bugs in Basscss.\n\n---\n\n## Features\n\n### Code with Confidence\n\nUsing clear, humanized naming conventions, Basscss is quick to internalize\nand easy to reason about while speeding up development time with more scalable,\nmore readable code.\n\n### No Side Effects\n\nThings behave exactly as expected with immutable utilities\nand styles that follow the open/closed principle\nto help prevent common pitfalls with CSS.\n\n### Composable\n\nReusable, interoperable styles\nwork like building blocks to lay the foundation for any stylesheet\nand can be mixed and matched in any number of combinations.\n\n## Designed for Design\n\nBasscss strikes a balance between consistency and flexibility\nto allow for rapid prototyping and quick iterative changes\nwhen designing in the browser.\n\n## Responsive by Default\n\nBasscss provides lightweight, performant styles\nand flexible utilities to design for any device\nand to help reduce boilerplate in stylesheets.\n\n## Unassuming\n\nModular and customizable typography and layout styles don\u2019t dictate\nwhat things should look like and play well with other stylesheets and frameworks.\n\n[Read More](https://basscss.com)\n\n---\n\n## Other Packages\n\n### Base styles\n\nThe core Basscss package does not include any base element styles.\nFor an out-of-the-box solution, see:\n\nhttps://github.com/basscss/basic\n\n### Addons\n\nIn addition to the core modules, optional modules,\nincluding responsive margin, padding, layout, and typography styles, can be found here:\n\nhttps://github.com/basscss/addons\n\n### Ace.css\n\nFor a bundle with the core Basscss and all optional modules, see:\n\nhttps://github.com/basscss/ace\n\n---\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Related\n\n- [Tachyons][tachyons]\n- [Buzzfeed Solid][solid]\n- [OOCSS][oocss]\n\n## Thanks\n\nThis library was largely inspired and influenced by the following people\n\n- [Nicole Sullivan](https://twitter.com/stubbornella)\n- [Nicolas Gallagher](https://twitter.com/necolas)\n- [Adam Morse](https://twitter.com/mrmrs_)\n- [Jessica Harllee](https://twitter.com/harllee)\n- [Zack Sears](https://twitter.com/zacksears)\n- [Diana Mounter](https://twitter.com/broccolini)\n- [John Otander](https://twitter.com/4lpine)\n\n---\n\n[MIT license](LICENSE.md)\n\n[functional-css]: https://jon.gold/2015/07/functional-css/\n[tachyons]: http://tachyons.io\n[solid]: https://solid.buzzfeed.com\n[oocss]: https://github.com/stubbornella/oocss/wiki\n"}, {"repo": "atlemo/SubtlePatterns", "language": "HTML", "readme_contents": "Subtle Patterns\n===============\n\nView all the patterns from [Subtle Patterns](https://www.toptal.com/designers/subtlepatterns/) - including the famous Photoshop .pat file.\n\nIf you need Base64 versions of the patterns, you can use this generator:\nhttp://www.greywyvern.com/code/php/binary2base64.\n\nThe original authors of the patterns are credited on Subtle Patterns. Subtle Patterns is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. The patterns here can be used free of charge, but please read this before using them: [CC BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/).\n\n[Subtle Patterns](https://www.toptal.com/designers/subtlepatterns/) \u00a9 2017 [Toptal](https://www.toptal.com).\n"}, {"repo": "mrmrs/colors", "language": "CSS", "readme_contents": "# [colors.css 3.0.0](http://clrs.cc/)\n\n\nBetter default colors for the web. A collection of skin classes for faster prototyping and nicer looking sites.\n\n#### Stats\n\n903 | 85 | 85\n---|---|---\nbytes | selectors | declarations\n\n## Installation\n\n#### With [npm](https://npmjs.com)\n\n```\nnpm install --save-dev colors.css\n```\n\n#### With Git\n\n```\ngit clone https://github.com/tachyons-css/colors.css\n```\n\n## Usage\n\n#### Using with [PostCSS](https://github.com/postcss/postcss)\n\nImport the css module\n\n```css\n@import \"colors.css\";\n```\n\nThen process the CSS using the [`tachyons-cli`](https://github.com/tachyons-css/tachyons-cli)\n\n```sh\n$ npm i -g tachyons-cli\n$ tachyons-cli path/to/css-file.css > dist/t.css\n```\n\n#### Using the CSS\n\nThe built CSS is located in the `css` directory. It contains an unminified and minified version.\nYou can either cut and paste that css or link to it directly in your html.\n\n```html\n<link rel=\"stylesheet\" href=\"path/to/module/css/colors.css\">\n```\n\n#### Development\n\nThe source CSS files can be found in the `src` directory.\nRunning `$ npm start` will process the source CSS and place the built CSS in the `css` directory.\n\n## The CSS\n\n```css\n/*\n\n  COLORS\n  Better default colors for the web\n\n*/\n/* \n\n   VARIABLES\n\n   - Cool\n   - Warm\n   - Gray Scale\n\n*/\n/*\n\n   SKINS\n   - Backgrounds\n   - Colors\n   - Border colors\n   - SVG fills\n   - SVG Strokes\n\n*/\n/* Backgrounds */\n.bg-navy { background-color: #001F3F; }\n.bg-blue { background-color: #0074D9; }\n.bg-aqua { background-color: #7FDBFF; }\n.bg-teal { background-color: #39CCCC; }\n.bg-olive { background-color: #3D9970; }\n.bg-green { background-color: #2ECC40; }\n.bg-lime { background-color: #01FF70; }\n.bg-yellow { background-color: #FFDC00; }\n.bg-orange { background-color: #FF851B; }\n.bg-red { background-color: #FF4136; }\n.bg-fuchsia { background-color: #F012BE; }\n.bg-purple { background-color: #B10DC9; }\n.bg-maroon { background-color: #85144B; }\n.bg-white { background-color: #FFFFFF; }\n.bg-gray { background-color: #AAAAAA; }\n.bg-silver { background-color: #DDDDDD; }\n.bg-black { background-color: #111111; }\n/* Colors */\n.navy { color: #001F3F; }\n.blue { color: #0074D9; }\n.aqua { color: #7FDBFF; }\n.teal { color: #39CCCC; }\n.olive { color: #3D9970; }\n.green { color: #2ECC40; }\n.lime { color: #01FF70; }\n.yellow { color: #FFDC00; }\n.orange { color: #FF851B; }\n.red { color: #FF4136; }\n.fuchsia { color: #F012BE; }\n.purple { color: #B10DC9; }\n.maroon { color: #85144B; }\n.white { color: #FFFFFF; }\n.silver { color: #DDDDDD; }\n.gray { color: #AAAAAA; }\n.black { color: #111111; }\n/* Border colors \n\n   Use with another border utility that sets border-width and style \n   i.e .border { border-width: 1px); border-style: solid); }     \n*/\n.border--navy { border-color: #001F3F; }\n.border--blue { border-color: #0074D9; }\n.border--aqua { border-color: #7FDBFF; }\n.border--teal { border-color: #39CCCC; }\n.border--olive { border-color: #3D9970; }\n.border--green { border-color: #2ECC40; }\n.border--lime { border-color: #01FF70; }\n.border--yellow { border-color: #FFDC00; }\n.border--orange { border-color: #FF851B; }\n.border--red { border-color: #FF4136; }\n.border--fuchsia { border-color: #F012BE; }\n.border--purple { border-color: #B10DC9; }\n.border--maroon { border-color: #85144B; }\n.border--white { border-color: #FFFFFF; }\n.border--gray { border-color: #AAAAAA; }\n.border--silver { border-color: #DDDDDD; }\n.border--black { border-color: #111111; }\n/* Fills for SVG */\n.fill-navy { fill: #001F3F; }\n.fill-blue { fill: #0074D9; }\n.fill-aqua { fill: #7FDBFF; }\n.fill-teal { fill: #39CCCC; }\n.fill-olive { fill: #3D9970; }\n.fill-green { fill: #2ECC40; }\n.fill-lime { fill: #01FF70; }\n.fill-yellow { fill: #FFDC00; }\n.fill-orange { fill: #FF851B; }\n.fill-red { fill: #FF4136; }\n.fill-fuchsia { fill: #F012BE; }\n.fill-purple { fill: #B10DC9; }\n.fill-maroon { fill: #85144B; }\n.fill-white { fill: #FFFFFF; }\n.fill-gray { fill: #AAAAAA; }\n.fill-silver { fill: #DDDDDD; }\n.fill-black { fill: #111111; }\n/* Strokes for SVG */\n.stroke-navy { stroke: #001F3F; }\n.stroke-blue { stroke: #0074D9; }\n.stroke-aqua { stroke: #7FDBFF; }\n.stroke-teal { stroke: #39CCCC; }\n.stroke-olive { stroke: #3D9970; }\n.stroke-green { stroke: #2ECC40; }\n.stroke-lime { stroke: #01FF70; }\n.stroke-yellow { stroke: #FFDC00; }\n.stroke-orange { stroke: #FF851B; }\n.stroke-red { stroke: #FF4136; }\n.stroke-fuchsia { stroke: #F012BE; }\n.stroke-purple { stroke: #B10DC9; }\n.stroke-maroon { stroke: #85144B; }\n.stroke-white { stroke: #FFFFFF; }\n.stroke-gray { stroke: #AAAAAA; }\n.stroke-silver { stroke: #DDDDDD; }\n.stroke-black { stroke: #111111; }\n```\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## Authors\n\n* [mrmrs](http://mrmrs.cc)\n* [johno](http://johnotander.com)\n\n## License\n\nMIT\n\n"}, {"repo": "beetbox/beets", "language": "Python", "readme_contents": ".. image:: https://img.shields.io/pypi/v/beets.svg\n    :target: https://pypi.python.org/pypi/beets\n\n.. image:: https://img.shields.io/codecov/c/github/beetbox/beets.svg\n    :target: https://codecov.io/github/beetbox/beets\n\n.. image:: https://travis-ci.org/beetbox/beets.svg?branch=master\n    :target: https://travis-ci.org/beetbox/beets\n\n.. image:: https://repology.org/badge/tiny-repos/beets.svg\n    :target: https://repology.org/project/beets/versions\n\n\nbeets\n=====\n\nBeets is the media library management system for obsessive music geeks.\n\nThe purpose of beets is to get your music collection right once and for all.\nIt catalogs your collection, automatically improving its metadata as it goes.\nIt then provides a bouquet of tools for manipulating and accessing your music.\n\nHere's an example of beets' brainy tag corrector doing its thing::\n\n  $ beet import ~/music/ladytron\n  Tagging:\n      Ladytron - Witching Hour\n  (Similarity: 98.4%)\n   * Last One Standing      -> The Last One Standing\n   * Beauty                 -> Beauty*2\n   * White Light Generation -> Whitelightgenerator\n   * All the Way            -> All the Way...\n\nBecause beets is designed as a library, it can do almost anything you can\nimagine for your music collection. Via `plugins`_, beets becomes a panacea:\n\n- Fetch or calculate all the metadata you could possibly need: `album art`_,\n  `lyrics`_, `genres`_, `tempos`_, `ReplayGain`_ levels, or `acoustic\n  fingerprints`_.\n- Get metadata from `MusicBrainz`_, `Discogs`_, and `Beatport`_. Or guess\n  metadata using songs' filenames or their acoustic fingerprints.\n- `Transcode audio`_ to any format you like.\n- Check your library for `duplicate tracks and albums`_ or for `albums that\n  are missing tracks`_.\n- Clean up crufty tags left behind by other, less-awesome tools.\n- Embed and extract album art from files' metadata.\n- Browse your music library graphically through a Web browser and play it in any\n  browser that supports `HTML5 Audio`_.\n- Analyze music files' metadata from the command line.\n- Listen to your library with a music player that speaks the `MPD`_ protocol\n  and works with a staggering variety of interfaces.\n\nIf beets doesn't do what you want yet, `writing your own plugin`_ is\nshockingly simple if you know a little Python.\n\n.. _plugins: https://beets.readthedocs.org/page/plugins/\n.. _MPD: https://www.musicpd.org/\n.. _MusicBrainz music collection: https://musicbrainz.org/doc/Collections/\n.. _writing your own plugin:\n    https://beets.readthedocs.org/page/dev/plugins.html\n.. _HTML5 Audio:\n    http://www.w3.org/TR/html-markup/audio.html\n.. _albums that are missing tracks:\n    https://beets.readthedocs.org/page/plugins/missing.html\n.. _duplicate tracks and albums:\n    https://beets.readthedocs.org/page/plugins/duplicates.html\n.. _Transcode audio:\n    https://beets.readthedocs.org/page/plugins/convert.html\n.. _Discogs: https://www.discogs.com/\n.. _acoustic fingerprints:\n    https://beets.readthedocs.org/page/plugins/chroma.html\n.. _ReplayGain: https://beets.readthedocs.org/page/plugins/replaygain.html\n.. _tempos: https://beets.readthedocs.org/page/plugins/acousticbrainz.html\n.. _genres: https://beets.readthedocs.org/page/plugins/lastgenre.html\n.. _album art: https://beets.readthedocs.org/page/plugins/fetchart.html\n.. _lyrics: https://beets.readthedocs.org/page/plugins/lyrics.html\n.. _MusicBrainz: https://musicbrainz.org/\n.. _Beatport: https://www.beatport.com\n\nInstall\n-------\n\nYou can install beets by typing ``pip install beets``.\nBeets has also been packaged in the `software repositories`_ of several distributions.\nCheck out the `Getting Started`_ guide for more information.\n\n.. _Getting Started: https://beets.readthedocs.org/page/guides/main.html\n.. _software repositories: https://repology.org/project/beets/versions\n\nContribute\n----------\n\nCheck out the `Hacking`_ page on the wiki for tips on how to help out.\nYou might also be interested in the `For Developers`_ section in the docs.\n\n.. _Hacking: https://github.com/beetbox/beets/wiki/Hacking\n.. _For Developers: https://beets.readthedocs.io/en/stable/dev/\n\nRead More\n---------\n\nLearn more about beets at `its Web site`_. Follow `@b33ts`_ on Twitter for\nnews and updates.\n\n.. _its Web site: https://beets.io/\n.. _@b33ts: https://twitter.com/b33ts/\n\nAuthors\n-------\n\nBeets is by `Adrian Sampson`_ with a supporting cast of thousands. For help,\nplease visit our `forum`_.\n\n.. _forum: https://discourse.beets.io\n.. _Adrian Sampson: https://www.cs.cornell.edu/~asampson/\n"}, {"repo": "scottschiller/SoundManager2", "language": "JavaScript", "readme_contents": "# SoundManager 2: JavaScript Sound for the Web \ud83d\udd0a\r\n\r\nBy wrapping and extending HTML5 and Flash Audio APIs, SoundManager 2 brings reliable cross-platform audio to JavaScript.\r\n\r\n## HTML5 `Audio()` Support\r\n\r\n* 100% Flash-free MP3 + MP4/AAC (and OGG, FLAC, etc.) where supported\r\n* Compatible with Apple iPad (iOS 3.2), iPhone/iOS 4 and newer\r\n* Fallback to Flash for MP3/MP4 support, if needed\r\n* SM2 API is transparent; HTML5/flash switching handled internally\r\n* HTML5 API support approximates Flash 8 API features\r\n\r\n## Basic API Features\r\n\r\n* Load, stop, play, pause, mute, seek, pan (Flash-only) and volume control of sounds from JavaScript\r\n* Events: `onload`, `whileloading`, `whileplaying`, `onfinish` and more\r\n\r\n## Flash-based Features (Legacy Support)\r\n\r\n* (Flash 8+): ID3V1 and ID3V2 tag support for MP3s (title, artist, genre etc.)\r\n* RTMP / Flash Media Server streaming support\r\n* MPEG-4 (AAC, HE-AAC, H.264) audio support\r\n* \"MultiShot\" play (layered / chorusing effects)\r\n* Waveform/frequency spectrum data\r\n* Peak (L/R channel volume) data\r\n* Audio buffering state / event handling\r\n\r\n## General Tech Stuff\r\n\r\n* Full API Documentation with examples and notes\r\n* `console.log()`-style debug output and troubleshooting tools\r\n* GitHub Issues for discussion/support\r\n\r\n## As Heard On The Internets\r\n\r\nSome places that do or have used SM2 include SoundCloud, Tidal, Beats, Songza, freesound.org, last.fm, 8tracks, Discogs, and The Hype Machine among others - but most importantly, http://nyan.cat. ;)\r\n\r\n## Project Home, Documentation, Live Demos etc.\r\n\r\nhttp://www.schillmania.com/projects/soundmanager2/\r\n\r\n## Compiling JS builds (-nodebug, -jsmin) and Flash components, AS2/AS3 to SWF\r\n\r\n_(Note: This process is pretty outdated and relies on ancient binaries for the Flash bits. Here be dragons.)_\r\n\r\nAn Ant build file defines the tasks for compiling JS and SWF components, useful if you make changes to the SM2 source and want to recompile.\r\nGoogle's Closure Compiler is used for the JS. AS2 compilation is done by MTASC, and AS3 is handled by Adobe's Open Source Flex SDK (mxmlc) compiler.\r\nRefer to `build.xml` for compiler downloads and path definitions.\r\n\r\n## Versioning / Development Notes\r\n\r\nReleases are versioned by date, e.g., `V2.97a.20170601` and are tagged as such.\r\nThe latest official release is always on trunk/master.\r\nPost-release development builds may be available on the appropriate +DEV branch, eg., `V2.97a.20170601+DEV`\r\n\r\n## Forks and Pull Requests\r\n\r\nFirstly, thank you for wanting to contribute! Bug fixes and tweaks are welcomed, particularly if they follow the general coding style of the project.\r\nIf making a pull request, use the project's current +DEV development branch as the merge target instead of \"master\", if possible; please and thank-you.\r\n\r\n## Random Trivia: SoundManager / SoundManager 2 History\r\n\r\nThe original \"SoundManager\" implementation was created in 2001 and used JavaScript and Flash 6 (or thereabouts), and was hacked together to get JS-driven sound on a personal portfolio site. It was later used for the \"DHTML Arkanoid\" project in 2002.\r\n\r\nThe original inspiration came from the sonify.org \"Flashsound\" project; they had tutorials and examples on getting Flash to play sounds when an HTML element was hovered on. This was very up my alley at the time. It all started with a cheezy kung-fu demo.\r\n\r\nhttp://sonify.org/flashsound/kungfu/\r\n\r\nFlash's `ExternalInterface` API was not introduced until Flash 8, but a limited JS <-> Flash API existed via LiveConnect et al which still let the basics work. The original SoundManager used Flash's `TCallLabel()` methods, exposed to JS, to perform specific actions within \"Movie Clips\" (essentially, objects).\r\n\r\nMovie Clips contained Frames (in the animation sense) which could be given IDs (labels), and could also accept name/value parameters via `SetVariable()`. Thus, it was possible to create a Movie Clip for each sound, which would have a labeled frame for each sound action desired (stop, seek, pause, volume, and pan), e.g., `flashMovie.SetVariable('/MySound:volume, 50);`\r\n\r\nhttp://web.archive.org/web/20020404030916/http://sonify.org:80/flashsound/timeline/actionscript.html\r\n\r\nWhen a sound was created, playing it and setting parameters became a matter of having JS tell Flash to go to a specific frame within a Movie Clip to perform the desired \"action\" e.g., `flashMovie.TCallLabel('/soundID', 'play');` and then an additional call to set a variable if needed to apply effects like volume, pan and so on.\r\n\r\nInternet Explorer on the Mac did not support the JS/Flash API via LiveConnect etc., but Netscape on MacOS was OK.\r\n\r\nThe original SoundManager project still lives at http://schillmania.com/projects/soundmanager/ and was deprecated in 2007.\r\n\r\nSoundManager 2 became a reality when Flash 8 was released, as it introduced `ExternalInterface` which was a more complete JS <-> Flash API that allowed Flash methods to be exposed to JS, and could also accept full parameters. ExternalInterface is quite an interesting little hack, as the Flash movie injects some JS into the browser to make it work. Under the hood, it uses XML as a transport layer for calls. (Recall that in the 2000s, XML was hugely popular - the JSON of its day.)\r\n\r\nMore here on how SM2 / Flash / EI interaction worked.\r\n\r\nhttp://www.schillmania.com/content/entries/2010/how-soundmanager2-works/\r\n\r\nSoundManager 2 was released in 2006 and had a much more feature-rich and better-structured API, particularly at the time, thanks to learnings and feedback from the original SoundManager project. SM2 grew to be relatively popular among sites that used sound, whether as effects or a core part of the site experience. (Most sites used either SM2, or the jQuery-library-friendly jPlayer project.) \r\n\r\n## Why version 2.97?\r\n\r\nSoundManager 2 has been at \"version\" 2.97 for a long time, because 2.97 was arguably the best llama-ass-whipping version of WinAmp. (WinAmp 3 was not as good, and WinAmp 5 was \"the best of 2 and 3 combined.\") This MP3 player was my favourite Windows app during the 90's, and is missed as there's nothing quite like it on OS X where I spend most of my time these days.\r\n"}, {"repo": "CreateJS/SoundJS", "language": "JavaScript", "readme_contents": "# SoundJS\r\n\r\nSoundJS is a library to make working with audio on the web easier. It provides a consistent API for playing audio in\r\ndifferent browsers, including using a target plugin model to provide an easy way to provide additional audio plugins\r\nlike a Flash fallback (included, but must be used separately from the combined/minified version).\r\n\r\nA mechanism has been provided for easily tying in audio preloading to [PreloadJS](http://createjs.com/preloadjs/).\r\n\r\n\r\n## Example\r\n\r\n```javascript\r\ncreatejs.Sound.on(\"fileload\", handleLoadComplete);\r\ncreatejs.Sound.alternateExtensions = [\"mp3\"];\r\ncreatejs.Sound.registerSound({src:\"path/to/sound.ogg\", id:\"sound\"});\r\nfunction handleLoadComplete(event) {\r\n\tcreatejs.Sound.play(\"sound\");\r\n}\r\n```\r\n\r\n## License\r\nBuilt by gskinner.com, and released for free under the MIT license, which means you can use it for almost any purpose\r\n(including commercial projects). We appreciate credit where possible, but it is not a requirement.\r\n\r\n\r\n## Support and Resources\r\n* Find examples and more information at the [SoundJS web site](http://soundjs.com/)\r\n* Read the [documentation](http://createjs.com/docs/soundjs/)\r\n* Discuss, share projects, and interact with other users on [reddit](http://www.reddit.com/r/createjs/).\r\n* Ask technical questions on [Stack Overflow](http://stackoverflow.com/questions/tagged/soundjs).\r\n* File verified bugs or formal feature requests using Issues on [GitHub](https://github.com/CreateJS/SoundJS/issues).\r\n* Have a look at the included [examples](https://github.com/CreateJS/SoundJS/tree/master/examples) and\r\n[API documentation](http://createjs.com/docs/soundjs/) for more in-depth information.\r\n\r\n\r\n## Classes\r\n\r\n### [Sound](http://createjs.com/Docs/SoundJS/classes/Sound.html)\r\nThe core API for playing sounds. Call createjs.Sound.play(sound, ...options), and a sound instance is created that can be\r\nused to control the audio, and dispatches events when it is complete, loops, or is interrupted.\r\n\r\n### [SoundInstance](http://createjs.com/Docs/SoundJS/classes/AbstractSoundInstance.html)\r\nA controllable sound object that wraps the actual plugin implementation, providing a consistent API for audio playback,\r\nno matter what happens in the background. Sound instances can be paused, muted, and stopped; and the volume, pan (where\r\navailable), and position changed using the simple API.\r\n\r\n### [WebAudioPlugin](http://createjs.com/Docs/SoundJS/classes/WebAudioPlugin.html)\r\nThe default, built-in plugin, which uses Web Audio APIs to playback sounds. Note that WebAudio will fail to load when\r\nrun locally, and the HTML audio plugin will be used instead.\r\n\r\n### [HTMLAudioPlugin](http://createjs.com/Docs/SoundJS/classes/HTMLAudioPlugin.html)\r\nThe fallback built-in plugin, which manages audio playback via the HTML5 <audio> tag. This will be used in instances\r\nwhere the WebAudio plugin is not available.\r\n\r\n### [CordovaAudioPlugin](http://createjs.com/docs/soundjs/classes/CordovaAudioPlugin.html)\r\nAn additional plugin which will playback audio in a Cordova app and tools that utilize Cordova such as PhoneGap or Ionic.\r\nYou must manually register this plugin. Currently available on github since SoundJS-0.6.1.\r\n\r\n### [FlashAudioPlugin](http://createjs.com/Docs/SoundJS/classes/FlashAudioPlugin.html)\r\nAn additional plugin which uses a flash shim (and SWFObject) to playback audio using Flash. You must manually set up and\r\nregister this plugin.\r\n\r\n## [Documentation and examples](http://createjs.com/docs/soundjs/)\r\nHave a look at the included examples and API documentation for more in-depth information.\r\n"}, {"repo": "musescore/MuseScore", "language": "C++", "readme_contents": "![MuseScore](mscore/data/musescore_logo_full.png)  \nMusic notation and composition software\n\n[![Travis CI](https://secure.travis-ci.org/musescore/MuseScore.svg?branch=master)](https://travis-ci.org/musescore/MuseScore)\n[![Appveyor](https://ci.appveyor.com/api/projects/status/bp3ww6v985i64ece/branch/master?svg=true)](https://ci.appveyor.com/project/MuseScore/musescore/branch/master)\n[![License: GPL v2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html)\n\nMuseScore is an open source and free music notation software. For support, contribution, and bug reports visit MuseScore.org. Fork and make pull requests!\n\n## Features\n\n* WYSIWYG design, notes are entered on a \"virtual notepaper\"\n* TrueType font(s) for printing & display allows for high quality scaling to all sizes\n* Easy & fast note entry\n* Many editing functions\n* MusicXML import/export\n* MIDI (SMF) import/export\n* MuseData import\n* MIDI input for note entry\n* Integrated sequencer and software synthesizer to play the score\n* Print or create pdf files\n\n## More info\n* [MuseScore Homepage](https://musescore.org)\n* [MuseScore Git workflow instructions](https://musescore.org/en/developers-handbook/git-workflow).\n* [How to compile MuseScore?](https://musescore.org/en/developers-handbook/compilation)\n\n## License\nMuseScore is licensed under GPL version 2.0. See [LICENSE.GPL](https://github.com/musescore/MuseScore/blob/master/LICENSE.GPL) in the same directory.\n\n## Packages\n* **aeolus** Clone of [Aeolus](http://kokkinizita.linuxaudio.org/linuxaudio/aeolus/)\nDisabled by default in the stable releases. See http://dev-list.musescore.org/Aeolus-Organ-Synth-td7578364.html\nKept as an example of how to integrate with a complex synthesizer.\n\n* **assets** Graphical assets, use them if you need a MuseScore icon. For logo, color etc... see https://musescore.org/en/about/logos-and-graphics\n\n* **awl** Audio Widget Library, from the MusE project\n\n* **build** Utility files for build\n\n* **bww2mxml** Command line tool to convert BWW files to MusicXML. BWW parser is used by MuseScore to import BWW files.\n\n* **demos** A few MuseScore files to demonstrate what can be done\n\n* **fluid** Clone of [FluidSynth](https://sourceforge.net/projects/fluidsynth/), ported to C++ and customized\n\n* **fonts** Contains fontforge source (sfd) + ttf/otf fonts. MuseScore includes the \"Emmentaler\" font from the Lilypond project.\n\n* **libmscore** Data model of MuseScore\n\n* **mscore** Main code for the MuseScore UI\n\n* **msynth** Abstract interface to Fluid + Aeolus\n\n* **mtest** Unit testing using QTest\n\n* **omr** Optical music recognition\n\n* **share** Files moved to /usr/share/... on install\n\n* **test** Old tests. Should move to mtest\n\n* **vtest** Visual tests. Compare reference images with current implementation\n\n* **thirdparty** Contains projects which are included for convenience, usually to integrate them into the build system to make them available for all supported platforms.\n\n    * **thirdparty/rtf2html**\n    Used for capella import. Clone from [rtf2html@sourceforge](https://github.com/lvu/rtf2html), code now at [rtf2html@github](https://github.com/lvu/rtf2html)\n\n    * **thirdparty/dtl**\n    Used for the score comparison tool. [Diff Template Library](https://github.com/cubicdaiya/dtl)\n\n    * **thirdparty/ofqf**\n    OSC server interface. Based on [OSC for Qt4](http://www.arnoldarts.de/projects/ofqf/), code now on [github](https://github.com/kampfschlaefer/ofq)\n\n    * **thirdparty/singleapp**\n    Clone from [Qt Single Application](https://github.com/qtproject/qt-solutions/tree/master/qtsingleapplication)\n\n    * **thirdparty/portmidi**\n    Clone from [PortMidi](https://sourceforge.net/projects/portmedia/)\n\n    * **thirdparty/beatroot**\n    It's a core part of BeatRoot Vamp Plugin by Simon Dixon and Chris Cannam,\n    used in MIDI import for beat detection. (https://code.soundsoftware.ac.uk/projects/beatroot-vamp/repository)\n\n\n## Building\n**Read the developer handbook for a [complete build walkthrough](https://musescore.org/en/developers-handbook/compilation) and a list of dependencies.**\n\n### Getting sources\nIf using git to download repo of entire code history, type:\n\n    git clone https://github.com/musescore/MuseScore.git\n    cd MuseScore\n\nOtherwise, you can just download the latest source release tarball from https://github.com/musescore/MuseScore/releases, and then from your download directory type:\n\n    tar xzf MuseScore-x.x.x.tar.gz\n    cd MuseScore-x.x.x\n\n### Release Build\nTo compile MuseScore, type:\n\n    make release\n\nIf something goes wrong, then remove the whole build subdirectory with `make clean` and start new with `make release`.\n\n### Running\nTo start MuseScore, type:\n\n    ./build.release/mscore/mscore\n\nThe Start Center window will appear on every invocation until you disable that setting via the \"Preferences\" dialog.\n\n### Installing\nTo install to default prefix using root user, type:\n\n    sudo make install\n\n### Debug Build\nA debug version can be built by doing `make debug` instead of `make release`.\n\nTo run the debug version, type:\n\n    ./build.debug/mscore/mscore\n\n### Testing\nSee [mtest/README.md](/mtest/README.md) or [the developer handbook](https://musescore.org/handbook/developers-handbook/finding-your-way-around/automated-tests) for instructions on how to run the test suite.\n\nThe new [script testing facility](https://musescore.org/node/278278) is also available to create your own automated tests. Please try it out!\n"}, {"repo": "tomahawk-player/tomahawk", "language": "C++", "readme_contents": "# This project is essentially abandoned\nThere is no one working on it.\nThere isn't much sense in adding any new issues in the issue tracker unless you want to fix them yourself.\n\n# WHAT TOMAHAWK IS\n\nTomahawk is a free multi-source and cross-platform music player. An application that can play not only your local files, but also stream from services like Spotify, Beats, SoundCloud, Google Music, YouTube and many others. You can even connect with your friends' Tomahawks, share your musical gems or listen along with them. Let the music play!\n\n![Tomahawk Screenshot](/data/screenshots/tomahawk-screenshot.png?raw=true)\n\n## HOW TOMAHAWK WORKS\n\nTomahawk is basically a **player for music metadata**. At its core it decouples the metadata about a song from the source and reassembles it for each user based on their individual music accessibility and rights. In short, given the name of a song and artist, Tomahawk will find the right source, for the right user at the right time.  This fundamentally different approach to music enables a range of new music consumption and sharing experiences previously not possible.\n\n## MUSIC SOURCES\n\n* Local music library (MP3, Ogg, FLAC and many other formats)\n* Networked music libraries (other connected computers)\n\n### Subscription Music Services\n\n* Spotify\n* Beats Music\n* Google Play Music (on-demand streaming and music locker)\n* TIDAL\n* Rdio (Android only)\n* Deezer (Android only)\n\n### Free Streaming/Music Promotion Platforms\n\n* Soundcloud\n* Bandcamp\n* Last.fm\n* Jamendo\n* Official.fm\n* YouTube\n\n### Network/Cloud storage\n\n* Ampache\n* Owncloud\n* Subsonic\n* Beets\n\nThird party-developed resolvers have also been written for services like YouTube, Qobuz and others. We've also heard of digital music distributors writing their own for their internal CMSes to help them navigate and preview their content. That's cool.\n\nPackaged binary resolvers (.axes) are available: [here](http://teom.org/axes).\n\nSource code (and examples) can be found in our [Resolver repository](https://github.com/tomahawk-player/tomahawk-resolvers).\n\n## DOWNLOAD TOMAHAWK\n\nYou can download one of our nightly or stable builds:\n\n| *BUILD* | MAC / OSX | WINDOWS | LINUX |\n|:-------:|:---------:|:-------:|:-----:|\n|**NIGHTLY** | [**latest**](http://download.tomahawk-player.org/nightly/mac/Tomahawk-latest.dmg) | [**latest**](http://download.tomahawk-player.org/nightly/windows/tomahawk-latest.exe) | [**latest**](https://launchpad.net/~tomahawk/+archive/ubuntu/nightly) (Ubuntu) |\n|**STABLE** | [**0.8.4**](http://download.tomahawk-player.org/Tomahawk-0.8.4.dmg) | [**0.8.4**](http://download.tomahawk-player.org/tomahawk-0.8.4.exe) | [**0.8.4**](http://www.tomahawk-player.org/#page-about) (various distros) |\n\n## BUILD TOMAHAWK\n\n... or you can compile it yourself:\n\n    $ mkdir build && cd build\n    $ cmake ..\n    $ make\n\n### Detailed Build Instructions\n\n| Linux: | [Arch](http://wiki.tomahawk-player.org/index.php/Building_ArchLinux_package) **-** [Debian](http://wiki.tomahawk-player.org/index.php/Building_on_Debian) **-** [Fedora](http://wiki.tomahawk-player.org/index.php/Building_on_Fedora) **-** [openSUSE](http://wiki.tomahawk-player.org/index.php/Building_on_openSUSE) **-** [Ubuntu](http://wiki.tomahawk-player.org/index.php/Building_on_Ubuntu) |\n|------:|:------|\n| **Windows**: | [**Windows**](http://wiki.tomahawk-player.org/index.php/Building_Windows_Binary) |\n| **Mac**: | [**OS X**](http://wiki.tomahawk-player.org/index.php/Building_OS_X_Application_Bundle) |\n\n### Dependencies\n\nRequired dependencies:\n\n* [CMake 3](http://www.cmake.org/)\n* [Qt >= 5.4.0](http://qt-project.org/)\n* [VLC 2.1.0](https://videolan.org/vlc/)\n* [SQLite 3.6.22](http://www.sqlite.org/)\n* [TagLib 1.8](https://taglib.github.io/)\n* [Boost 1.3](http://www.boost.org/)\n* [Lucene++ 3.0.6](https://github.com/luceneplusplus/LucenePlusPlus/)\n* [Attica 5.6.0](http://ftp.kde.org/stable/attica/)\n* [QuaZip 0.4.3](http://quazip.sourceforge.net/)\n* [liblastfm 1.0.9](https://github.com/lastfm/liblastfm/)\n* [QtKeychain 0.1](https://github.com/frankosterfeld/qtkeychain/)\n* [Sparsehash](https://code.google.com/p/sparsehash/)\n* [GnuTLS](http://gnutls.org/)\n\nIf you are using Qt>5.6 you need to build and install QtWebKit\n\n* [QtWebKit](https://github.com/qt/qtwebkit)\n\nThe following dependencies are optional (but *recommended*):\n\n* [Jreen 1.1.1](http://qutim.org/jreen/)\n* [Snorenotify 0.5.2](https://github.com/Snorenotify/Snorenotify/)\n\nThird party libraries that we ship with our source:\n\n* [MiniUPnP 1.6](http://miniupnp.free.fr/)\n* [Qocoa](https://github.com/mikemcquaid/Qocoa/)\n* [libqnetwm](https://code.google.com/p/libqnetwm/)\n* [libqxt](http://libqxt.org/) (QxtWeb module)\n* [SPMediaKeyTap](https://github.com/nevyn/SPMediaKeyTap/)\n* [kdSingleApplicationGuard](http://www.kdab.com/)\n\n## SUPPORT TOMAHAWK\n\n* [Bug / Issue Tracker](https://bugs.tomahawk-player.org/secure/Dashboard.jspa)\n* [Translations](https://www.transifex.com/projects/p/tomahawk/)\n* [Donations](https://flattr.com/thing/169312/Tomahawk)\n\n## GET HELP\n\n* [Support & Feedback](https://tomahawk.uservoice.com)\n* Chat with us in IRC: **#tomahawk** on Freenode, and [Scrollback.io](https://scrollback.io/tomahawk)\n* [Twitter](https://twitter.com/tomahawk)\n* [Facebook](https://facebook.com/tomahawkplayer)\n* [Developer API Documentation](http://dev.tomahawk-player.org/api/classes.html)\n\n## SCREENSHOTS\n\nBROWSE FRIENDS' MUSIC & LISTEN ALONG\n\n![Browse](https://dchtm6r471mui.cloudfront.net/hackpad.com_ZRZMJDdxrVe_p.242147_1410998050088_listen-along.jpg)\n\nINBOX - RECEIVED & FORWARDING\n\n![Inbox](https://dchtm6r471mui.cloudfront.net/hackpad.com_ZRZMJDdxrVe_p.242147_1410997751044_inbox.jpg)\n\nCHARTS - BILLBOARD'S TASTEMAKER ALBUMS\n\n![Charts](https://dchtm6r471mui.cloudfront.net/hackpad.com_ZRZMJDdxrVe_p.242147_1410997901969_charts.jpg)\n\nFRIEND FEED\n\n![Feed](https://dchtm6r471mui.cloudfront.net/hackpad.com_ZRZMJDdxrVe_p.242147_1410971283885_heroshot.png)\n\nDYNAMIC (AUTO-UPDATING) PLAYLIST\n\n![Xspf](https://dchtm6r471mui.cloudfront.net/hackpad.com_ZRZMJDdxrVe_p.242147_1410998362549_dynamic-playlist-1.jpg)\n\nPLUG-INS / RESOLVER SETTINGS\n\n![Settings](https://dchtm6r471mui.cloudfront.net/hackpad.com_ZRZMJDdxrVe_p.242147_1410998587408_prefs.jpg)\n\n##Enjoy!\n"}, {"repo": "cashmusic/platform", "language": "PHP", "readme_contents": "# CASH Music Platform\n\nThe CASH Music platform gives everyone access to tools that let them manage, \npromote, and sell their music online \u2014 all owned and controlled themselves.\n\nThe platform can be used as a PHP library, integrated into popular CMS systems, \nor standalone with the included admin app. This repo contains the core framework, \ninstallers, an admin webapp, APIs, demos, and a full suite of tests.\n\n[![Build Status](https://secure.travis-ci.org/cashmusic/platform.svg)](http://travis-ci.org/cashmusic/platform)\n\n  \n## Get up and running\n\nAll you need to get started is [VirtualBox](https://www.virtualbox.org/wiki/Downloads), \n[Vagrant 1.4+](http://www.vagrantup.com/downloads.html), and this repo. Just fork, install\nVirtualBox and Vagrant, then open a terminal window and in the repo directory type:\n\n```bash\nvagrant up\n```  \n\nVagrant will fire up a VM, set up Apache, install the platform, and start serving a \nspecial dev website with tools, docs, and a live instance of the platform \u2014 all mapped \nright to localhost:8888.\n\n![Dev site included in repo](https://b6febe3773eb5c5bc449-6d885a724441c07ff9b675222419a9d2.ssl.cf2.rackcdn.com/special/docs/dev_screenshot.jpg)\n\n\n## Requirements\n\nOne of our goals is for this to run in as many places as possible, so we've worked \nhard to keep the requirements minimal:\n\n * PHP 5.4+\n * PDO (a default) and MySQL OR SQLite \n * mod_rewrite (for admin app)\n * fopen wrappers OR cURL \n\n## More\n\nFor more about installation, working with the platform, check out [the wiki](https://github.com/cashmusic/platform/wiki).\n\n## Submitting a pull request\n\nWe the 'master' branch release-ready at all times, so we ask all contributors to [TEST](https://github.com/cashmusic/platform/blob/master/tests/README.md) your code before submitting a pull request. Please \ncreate a descriptively named branch off your repo and give as many details in your pull request as possible.\n\nWe view pull requests as conversations. Submit a pull request early if you're working on something and\nhave questions. We'll work with you to get it where it needs to be for a merge.\n\n## Copyright & License\n\nThe CASH Music platform is (c) 2010-2014 CASH Music, licensed under an \n[AGPL license](http://www.gnu.org/licenses/agpl-3.0.html) (Some components, like\nthe core framework, are licensed LGPL. See LICENSE docs for more.)\n"}, {"repo": "mopidy/mopidy", "language": "Python", "readme_contents": "******\nMopidy\n******\n\nMopidy is an extensible music server written in Python.\n\nMopidy plays music from local disk, Spotify, SoundCloud, Google Play Music, and\nmore. You edit the playlist from any phone, tablet, or computer using a range\nof MPD and web clients.\n\n**Stream music from the cloud**\n\nVanilla Mopidy only plays music from your local disk and radio streams.\nThrough extensions, Mopidy can play music from cloud services like Spotify,\nSoundCloud, and Google Play Music. With Mopidy's extension support, backends\nfor new music sources can be easily added.\n\n**Mopidy is just a server**\n\nMopidy is a Python application that runs in a terminal or in the background on\nLinux computers or Macs that have network connectivity and audio output. Out of\nthe box, Mopidy is an MPD and HTTP server. Additional frontends for controlling\nMopidy can be installed from extensions.\n\n**Everybody use their favorite client**\n\nYou and the people around you can all connect their favorite MPD or web client\nto the Mopidy server to search for music and manage the playlist together. With\na browser or MPD client, which is available for all popular operating systems,\nyou can control the music from any phone, tablet, or computer.\n\n**Mopidy on Raspberry Pi**\n\nThe Raspberry Pi is a popular device to run Mopidy on, either using Raspbian or\nArch Linux. It is quite slow, but it is very affordable. In fact, the\nKickstarter funded Gramofon: Modern Cloud Jukebox project used Mopidy on a\nRaspberry Pi to prototype the Gramofon device. Mopidy is also a major building\nblock in the Pi Musicbox integrated audio jukebox system for Raspberry Pi.\n\n**Mopidy is hackable**\n\nMopidy's extension support and Python, JSON-RPC, and JavaScript APIs make\nMopidy perfect for building your own hacks. In one project, a Raspberry Pi was\nembedded in an old cassette player. The buttons and volume control are wired up\nwith GPIO on the Raspberry Pi, and is used to control playback through a custom\nMopidy extension. The cassettes have NFC tags used to select playlists from\nSpotify.\n\nTo get started with Mopidy, check out\n`the installation docs <http://docs.mopidy.com/en/latest/installation/>`_.\n\n- `Documentation <https://docs.mopidy.com/>`_\n- `Discourse forum <https://discourse.mopidy.com/>`_\n- `Zulip chat <https://mopidy.zulipchat.com/>`_\n- `Source code <https://github.com/mopidy/mopidy>`_\n- `Issue tracker <https://github.com/mopidy/mopidy/issues>`_\n\n.. image:: https://img.shields.io/pypi/v/Mopidy.svg?style=flat\n    :target: https://pypi.python.org/pypi/Mopidy/\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/circleci/project/github/mopidy/mopidy/develop.svg\n    :target: https://circleci.com/gh/mopidy/mopidy\n    :alt: CircleCI build status\n\n.. image:: https://img.shields.io/readthedocs/mopidy.svg\n    :target: https://docs.mopidy.com/\n    :alt: Read the Docs build status\n\n.. image:: https://img.shields.io/codecov/c/github/mopidy/mopidy/develop.svg\n    :target: https://codecov.io/gh/mopidy/mopidy\n    :alt: Test coverage\n\n.. image:: https://img.shields.io/badge/chat-on%20zulip-brightgreen\n    :target: https://mopidy.zulipchat.com/\n    :alt: Chat on Zulip\n"}, {"repo": "AudioKit/AudioKit", "language": "C++", "readme_contents": "AudioKit V4.9\n===\n\n[![Build Status](https://travis-ci.org/AudioKit/AudioKit.svg)](https://travis-ci.org/AudioKit/AudioKit)\n[![License](https://img.shields.io/cocoapods/l/AudioKit.svg?style=flat)](https://github.com/AudioKit/AudioKit/blob/master/LICENSE)\n[![CocoaPods compatible](https://img.shields.io/cocoapods/v/AudioKit.svg?style=flat)](https://cocoapods.org/pods/AudioKit)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![Platform](https://img.shields.io/cocoapods/p/AudioKit.svg?style=flat)](http://cocoadocs.org/docsets/AudioKit)\n<img src=\"https://img.shields.io/badge/in-swift5.0-orange.svg\">\n[![Reviewed by Hound](https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg)](https://houndci.com)\n[![Twitter Follow](https://img.shields.io/twitter/follow/AudioKitMan.svg?style=social)](http://twitter.com/AudioKitMan)\n\nAudioKit is an audio synthesis, processing, and analysis platform for iOS, macOS, and tvOS. This document serves as a one-page introduction to AudioKit, but we have much more information available on the AudioKit websites:\n\n| [AudioKitPro.com](http://audiokitpro.com/)|[AudioKit.io](http://audiokit.io/)|\n|:--:|:--:|\n| Features, News, Blog, and Highlighted Apps | Developer Documentation |\n| [![AudioKitPro](http://audiokit.io/images/audiokitpro.png)](http://audiokitpro.com) | [![AudioKit.io](http://audiokit.io/images/audiokitio.png)](http://audiokit.io) |\n\n## Sponsor AudioKit!\n\nIf you, your team or your company is using AudioKit, please consider [sponsoring Aure on Github Sponsors](http://github.com/sponsors/aure).\n\n## Key Concepts\n\n| Nodes | Operations | Taps |\n|-------|------------|------|\n| Nodes are interconnectable signal processing components.  Each node has an output and usually some parameters.  If the nodes processes another signal, the nodes will also have an `input`. | Operations are similar to nodes, except that they are signal processing components that exist inside of a single node.  Operations can be used as parameters to other operations to create very complex results. | Taps use nodes as their data source, but do not redirect the audio signal away from the source nodes output into other nodes. This allows a tap to be moved from node to node more freely and to be added after the audio signal path has started.\n\n## Installation\n\nInstallation details are found in the [Frameworks README file](https://github.com/audiokit/AudioKit/blob/master/Frameworks/README.md).\n\nAudioKit is also available via [CocoaPods](https://cocoapods.org/pods/AudioKit). Place the following in your `Podfile`:\n\n```\n    pod 'AudioKit', '~> 4.0'\n```\n\nIf you do not need the UI components, you can select just the Core pod, like so:\n\n```\n   pod 'AudioKit/Core'\n```\n\nYou can also use [Carthage](https://github.com/Carthage/Carthage) (v0.30 or higher) to install our precompiled static frameworks in your project.\n\n## Example Code\nThere are three Hello World projects, one for each of the Apple platforms: iOS, macOS, and tvOS. They play oscillators and display waveforms. The examples rely on AudioKit's frameworks so you can either download precompiled frameworks or [build them yourself](https://github.com/audiokit/AudioKit/blob/master/Frameworks/README.md)    .\n\nFor Hello World, you only need to understand a few lines of code:\n\n| Code                                           | Description                  |\n|------------------------------------------------|------------------------------|\n| `var oscillator = AKOscillator()`              | Create the sound generator   |\n| `AudioKit.output = oscillator`                 | Tell AudioKit what to output |\n| `AudioKit.start()`                             | Start up AudioKit            |\n| `oscillator.start()`                           | Start the oscillator         |\n| `oscillator.frequency = random(in: 220...880)` | Set oscillator parameters    |\n| `oscillator.stop()`                            | Stop the oscillator          |\n\n## Playgrounds\n\n<table>\n<tr>\n<td>\nPlaygrounds contain bite-size examples of AudioKit and serve as tutorials for many of AudioKit's core concepts and capabilities.  There are over 100 playgrounds which cover basic tutorials, synthesis, physical modeling, file playback, MIDI, effects, filters, and analysis.\n\nWe provide all playgrounds as a macOS project that is ready to run in Xcode. Just download the `AudioKitPlaygrounds.zip` file from our [releases page](https://github.com/audiokit/AudioKit/releases), open and build the project, and go to the playground pages to learn AudioKit's API in a fun way!\n\nWe have videos of most of the playgrounds in action, so you don't need to run Xcode to check them out, just go to [AudioKit Playground Videos](http://audiokit.io/playgrounds/).\n</td>\n<td width=320 align=right>\n\n[![Playgrounds](http://audiokit.io/examples/playgrounds.jpg)](http://audiokit.io/playgrounds/)\n\n</td>\n</tr>\n</table>\n\n## Ray Wenderlich's AudioKit Tutorial\n\n\nCheck out the [AudioKit tutorial on the Ray Wenderlich site](https://www.raywenderlich.com/145770/audiokit-tutorial-getting-started). You\u2019ll be taken on a fun and gentle journey through the framework via the history of sound synthesis and computer audio.\n\n## Getting help\n\nHere are three methods for getting support which are roughly listed in order of what you should try first:\n\n1. Post your problem to [StackOverflow with the #AudioKit hashtag](https://stackoverflow.com/questions/tagged/audiokit).\n\n2. If you don't have a problem that you can post to StackOverflow, you may post to our [Google Group](https://groups.google.com/forum/#!forum/audiokit), but it is a moderated list and prepare to be rejected if the moderator believes your question is better suited for StackOverflow (most are).\n\n3. If you are pretty sure the problem is not in your implementation, but in AudioKit itself, you can open a [Github Issue](https://github.com/audiokit/AudioKit/issues).\n\n\n## Contributing Code\n\nAudioKit is always being improved by our core team and our users.   [This is a rough outline of what we're working on currently.](https://github.com/audiokit/AudioKit/projects)\n\nWhen you want to modify AudioKit, check out the [develop](https://github.com/audiokit/AudioKit/tree/develop) branch (as opposed to master), make your changes, and send us a [pull request](https://github.com/audiokit/AudioKit/pulls).\n\n## About Us\n\nAudioKit was created by [Aurelius Prochazka](https://github.com/aure) who is your life line if you need help!  [Matthew Fecher](https://github.com/analogcode) manages all of AudioKit's web sites and [Stephane Peter](https://github.com/megastep) is Aure's co-admin and manages AudioKit's releases.\n\nBut, there are many other important people in our family:\n\n| Group | Description |\n|-------|-------------|\n|[Core Team](https://github.com/orgs/AudioKit/people)                    | The biggest contributors to AudioKit! |\n|[Slack](https://audiokit.slack.com)                                     | Pro-level developer chat group, contact a core team member for an in invitation. |\n|[Contributors](https://github.com/AudioKit/AudioKit/graphs/contributors)| A list of all people who have submitted code to AudioKit.|\n|[Google Group](https://groups.google.com/forum/#!forum/audiokit)        | App Announcements and mailing list for all users. |\n\n### Contributors\n\nThis project exists thanks to all the people who [contribute](CONTRIBUTING.md).\n<a href=\"https://github.com/AudioKit/AudioKit/graphs/contributors\"><img src=\"https://opencollective.com/AudioKit/contributors.svg?width=890&button=false\" /></a>\n\n\n"}, {"repo": "Soundnode/soundnode-app", "language": "JavaScript", "readme_contents": "[![Join the chat at https://gitter.im/Soundnode/soundnode-app](https://badges.gitter.im/Soundnode/soundnode-app.svg)](https://gitter.im/Soundnode/soundnode-app?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nSoundnode App\n============\n\nSoundnode App is an Open-Source project to support Soundcloud for desktop Mac, Windows, and Linux. <br>\nIt's built with Electron, Node.js, Angular.js, and uses the Soundcloud API.\n\n> Be aware that Soundnode relies on Soundcloud API which only allows third party apps to play 15 thousand tracks daily. When the rate limit is reached all users are blocked from playing/streaming tracks. The stream will be re-enable one day after (at the same time) streams were blocked.\n\nFollow us on twitter for updates [@Soundnodeapp](https://www.twitter.com/soundnodeapp).\n\nFeatured on [Producthunt](https://www.producthunt.com/tech/soundnode-2), [TNW](http://thenextweb.com/apps/2016/01/25/soundnode-is-the-soundcloud-desktop-app-youve-been-waiting-for/#gref)\nand [Gizmodo](http://gizmodo.com/soundnode-turns-soundcloud-into-a-spotify-like-desktop-1754953529)\n\n![alt tag](https://raw.githubusercontent.com/Soundnode/soundnode-app/master/Soundnode-app.png)\n\n## Features\n\n- No need to install\n- Native media keyboard shortcuts\n- Search for new songs\n- Easy navigation\n- Listen to songs from your Stream, Likes, Tracks, Following or Playlists\n- Like songs and save to your liked playlist\n- Full playlist feature\n- Follow/Unfollow users\n\nAnd much more!\n\n## Configuration\n\nSince soundcloud apply rate limit to third party app you need to configure your own API key to make soundnode work.\n\nUnfortunately soundcloud suspended new application creation, so to retrieve your api key, you have to dig into soundcloud website.\n\n* Login to soundcloud.com on favorite browser\n* Look for and api call and write down the client_id parameter\n![dev tools](doc/img/dev_tools.png)\n* Edit your userConfig.json file (see here for location : https://github.com/eliecharra/soundnode-app/blob/master/app/public/js/common/configLocation.js#L34) and update clientId parameter with the previously retrieved one.\n\n## How to contribute\n\nFirst, building, testing, and reporting bugs is highly appreciated. Please include console's output and steps to reproduce the problem in your bug report if possible.\n\nIf you want to develop, you can look at the issues, especially the bugs and then fix them.\nHere's a [list of issues](https://github.com/Soundnode/soundnode-app/issues?state=open).\n\nPlease follow the [contribution guidelines](https://github.com/Soundnode/soundnode-app/blob/master/CONTRIBUTING.md).\n\n## Development\n\nSee the [Development page](https://github.com/Soundnode/soundnode-app/wiki/Development) for a complete guide on how to build\nthe app locally on your computer.\n\nCheck out [Electron documentation](https://electron.atom.io/docs/)\n\n## Supported Platforms\n\n- Windows\n- Mac\n- Linux\n\n## Author\n\n- [Michael Lancaster](https://github.com/weblancaster)\n\n## Contributors\n\nThanks to all [contributors](https://github.com/Soundnode/soundnode-app/graphs/contributors) that are helping or helped making Soundnode better.\n\n## License\n\nGNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 [license](https://github.com/Soundnode/soundnode-app/blob/master/LICENSE.md).\n"}, {"repo": "gillesdemey/Cumulus", "language": "JavaScript", "readme_contents": "# Cumulus\nA SoundCloud player that lives in your menubar.\n\n[![GitHub release](https://img.shields.io/badge/download-latest-blue.svg)](https://github.com/gillesdemey/Cumulus/releases/latest)\n\n<img height=\"600\" width=\"auto\" src=\"assets/cumulus_app.png\">\n\n# Installing\n\nDownload the [latest release for OSX](https://github.com/gillesdemey/Cumulus/releases/latest).\n\n*IntelliJ users be warned: This app hijacks the \u2318+Alt+L shortcurt used by IntelliJ to reformat code. See [#40](https://github.com/gillesdemey/Cumulus/issues/40#issuecomment-261022368) and [#77](https://github.com/gillesdemey/Cumulus/issues/77).*\n\n# Developing\n\n## Install dependencies\n`npm install`\n\n`npm install -g electron`\n\n## Compile the application\n`grunt` or `grunt build`\n\n## Run the application with the [Chrome DevTools](https://developer.chrome.com/devtools)\n`NODE_ENV=development electron .`\n\n### Or in Windows:\n- PowerShell: `$env:NODE_ENV=\"development\"; electron .`\n- CMD: `set \"NODE_ENV=development\" & electron .`\n"}, {"repo": "metabrainz/picard", "language": "Python", "readme_contents": "MusicBrainz Picard\n==================\n[![Travis Status](https://img.shields.io/travis/metabrainz/picard/master.svg?style=flat-square&label=Travis)](https://travis-ci.org/metabrainz/picard)\n[![Codacy Grade](https://img.shields.io/codacy/grade/53a33607234a4c18a11a6207d1173c0c/master.svg?style=flat-square&label=Codacy)](https://www.codacy.com/app/MetaBrainz/picard)\n[![AppVeyor Status](https://img.shields.io/appveyor/ci/metabrainz/picard/master.svg?style=flat-square&label=AppVeyor)](https://ci.appveyor.com/project/MetaBrainz/picard)\n[![CircleCI](https://circleci.com/gh/metabrainz/picard.svg?style=svg)](https://circleci.com/gh/metabrainz/picard)\n\n[MusicBrainz Picard](http://picard.musicbrainz.org) is a cross-platform (Linux/Mac OS X/Windows) application written in Python and is the official [MusicBrainz](http://musicbrainz.org) tagger.\n\nPicard supports the majority of audio file formats, is capable of using audio fingerprints ([AcoustIDs](http://musicbrainz.org/doc/AcoustID)), performing CD lookups and [disc ID](http://musicbrainz.org/doc/Disc_ID) submissions, and it has excellent Unicode support. Additionally, there are several plugins available that extend Picard's features.\n\nWhen tagging files, Picard uses an album-oriented approach. This approach allows it to utilize the MusicBrainz data as effectively as possible and correctly tag your music. For more information, [see the illustrated quick start guide to tagging](https://picard.musicbrainz.org/quick-start/).\n\nPicard is named after Captain Jean-Luc Picard from the TV series Star Trek: The Next Generation.\n\nBinary downloads are available [here](http://picard.musicbrainz.org/downloads/).\n\nSupport and issue reporting\n---------------------------\n\nPlease report all bugs and feature requests in the [MusicBrainz issue tracker](https://tickets.metabrainz.org/browse/PICARD). If you need support in using Picard please read the [documentation](https://picard.musicbrainz.org/docs/) first and have a look at the [MusicBrainz community forums](https://community.metabrainz.org/c/picard).\n\nInstalling\n---------------------------\n\n[INSTALL.md has instructions on building this codebase.](INSTALL.md)\n"}, {"repo": "overtone/overtone", "language": "Clojure", "readme_contents": "                                                              888\n                                                              888\n             _ooooooooo._                                     888\n          ,o888PP\"\"\"\"PP88   .d88b.  888  888  .d88b.  888d888 888888 .d88b.  88888b.   .d88b.\n        d88P''          '  d88\"\"88b 888  888 d8P  Y8b 888P\"   888   d88\"\"88b 888 \"88b d8P  Y8b\n      ,88P                 88    88 Y88  88P 88888888 888     888   88    88 888  888 88888888\n     ,88                   Y88..88P  Y8bd8P  Y8b.     888     Y88b. Y88..88P 888  888 Y8b.\n    ,88'                    \"Y88P\"    Y88P    \"Y8888  888      \"Y888 \"Y88P\"  888  888  \"Y8888\n    d8P\n    d8b                        88[\n    `88                       J88\n     Y8b                     ,88'\n      Y8b.                  d88'\n       `Y8b._            _o88P\n         `Y888oo.____ooo888P'\n            '\"PP888888PP''\n\n\n\n# Collaborative Programmable Music.\n\nOvertone is an Open Source toolkit for designing synthesizers and\ncollaborating with music.  It provides:\n\n* A Clojure API to the SuperCollider synthesis engine\n* A growing library of musical functions (scales, chords, rhythms,\n  arpeggiators, etc.)\n* Metronome and timing system to support live-programming and sequencing\n* Plug and play MIDI device I/O\n* A full Open Sound Control (OSC) client and server implementation.\n* Pre-cache - a system for locally caching external assets such as .wav\n  files\n* An API for querying and fetching sounds from http://freesound.org\n* A global concurrent event stream\n\n## Quick Start\n\n### Installation\n\n```sh\n    # Install the clojure-cli tools\n    # https://clojure.org/guides/getting_started\n\n    # Create a deps.edn file with a minimum\n    # {:deps {overtone/overtone {:mvn/version \"0.10.6\"}}}\n    $ clojure\n    $ (use 'overtone.live)\n```\n\n```sh\n    # Or install leiningen\n    # https://github.com/technomancy/leiningen\n\n    $ lein new insane-noises\n\n    # add the following dependencies to insane-noises/project.clj\n    # [org.clojure/clojure \"1.9.0\"]\n    # [overtone \"0.10.6\"]\n\n    $ cd insane-noises\n    $ lein repl\n```\n\n### Making sounds\n\n\n```clj\n    ;; boot the server\n    user=> (use 'overtone.live)\n\n    ;; listen to the joys of a simple sine wave\n    user=> (demo (sin-osc))\n\n    ;; or something more interesting...\n    user=> (demo 7 (lpf (mix (saw [50 (line 100 1600 5) 101 100.5]))\n                   (lin-lin (lf-tri (line 2 20 5)) -1 1 400 4000)))\n```\n\n### Detailed Instructions\n\nFor a more detailed set of setup instructions (including details\nspecific to Windows and Linux) head over to the\n[Overtone wiki installation page](https://github.com/overtone/overtone/wiki/Installing-Overtone)\n\nWe maintain documentation for all aspects of the system in the\n[project wiki](https://github.com/overtone/overtone/wiki/Home), you'll\nfind tutorials and examples on topics such as synthesizing new sounds\nfrom scratch, live-coding and generating musical scores on the fly. If\nyou see anything missing, please feel free to add it yourself, or hit us\nup on the [mailing list](http://groups.google.com/group/overtone) and\nwe'll sort something out.\n\n## Cheat Sheet\n\nFor a quick glance at all the exciting functionality Overtone puts at\nyour musical fingertips check out the cheat sheet:\n\nhttps://github.com/overtone/overtone/raw/master/docs/cheatsheet/overtone-cheat-sheet.pdf\n\n## Overtone Powered Bands\n\nA list of bands using Overtone to generate sounds:\n\n* [Meta-eX](http://meta-ex.com)\n* [Repl Electric](http://repl-electric.com)\n\n## Community\n\n### Mailing List\n\nWe encourage you to join the\n[mailing list](http://groups.google.com/group/overtone) to see what\nother people are getting up to with Overtone. Use it to ask questions,\nshow off what you've made and even meet fellow Overtoners in your area\nso you can meet up for impromptu jam sessions. All we ask is that you be\nconsiderate, courteous and respectful and that you share as much of your\ncode as possible so we can all learn how to make crazy cool sounds\ntogether.\n\n### Twitter\n\nFollow `@overtone` on Twitter: http://twitter.com/overtone\n\n### Web\n\nOur main website is hosted on GitHub: http://overtone.github.io\n\n##  Videos\n\n### Introductions\n\nHead over to Vimeo for a fast-paced 4 minute introduction to live-coding\nwith Overtone to see what's possible\n\n  http://vimeo.com/22798433\n\nFor a nice overview of the basics of creating and playing with\nsynthesized instruments in Overtone checkout Philip Potter's 20 minute\nworkshop:\n\n  http://skillsmatter.com/podcast/scala/clojurex-unpanel-2894\n\nChris Ford also delivers a beautifully paced introduction to fundamental music\nconcepts from basic sine waves to Bach's Goldberg Variations with live examples throughout:\n\n  http://skillsmatter.com/podcast/home/functional-composition\n\nThere are also the following tutorials:\n\n* Setting up an Overtone Development Environment - Running on Edge\n  http://vimeo.com/25102399\n* How to Hack Overtone with Emacs http://vimeo.com/25190186\n\n### Presentations\n\n* Rich Hickey - Harmonikit: http://www.youtube.com/watch?v=bhkdyCPYgLs\n* Sam Aaron - Programming Music With Overtone: http://www.youtube.com/watch?v=imoWGsipe4k\n* Chris Ford - Functional Composition: http://www.youtube.com/watch?v=Mfsnlbd-4xQ\n* Meta-eX - Live Coding with Meta-eX: https://www.youtube.com/watch?v=zJqH5bNcIN0\n\n### Interviews\n\nOvertone has generated quite a bit of interest. Here's a list of\navailable interviews which go into further depth on the background and\nphilosophy of Overtone:\n\n* http://twit.tv/show/floss-weekly/197\n* http://mostlylazy.com/2011/11/18/episode-0-0-2-sam-aaron-and-overtone-at-clojure-conj-2011/\n* http://codebassradio.net/2011/11/29/runtime-expectations-episode-13-hot-clojure-conj/\n  (scroll down to the section with Sam Aaron, Ghadi Shayban, and Daniel Spiewak)\n* http://clojure.com/blog/2012/01/04/take5-sam-aaron.html\n\n### Performances\n\n* Repl Electric: https://vimeo.com/95988263\n* Piotr Jagielski\u200f: https://www.youtube.com/watch?v=r8YKC7Qugm8\n* Sam Aaron Live @ Arnolfini:  https://vimeo.com/46867490\n* Meta-eX Live @ Music Tech Fest: http://youtu.be/zJqH5bNcIN0?t=15m25s\n\n\n## Source Repository\n\nDownloads and the source repository can be found on GitHub:\n\n  http://github.com/overtone/overtone\n\nClone the repository on GitHub to get started developing, and if you are\nready to submit a patch then fork your own copy and do a pull request.\n\n##  clojure.tools.deps and Leiningen Support\n\nOvertone and its dependencies are on http://clojars.org, and the\ndependency for your `deps.edn` is:\n\n```Clojure\n    {overtone/overtone {:mvn/version \"0.10.6\"}}\n```\n\nor for your `project.clj` (Leiningen)\n\n```Clojure\n    [overtone \"0.10.6\"]\n```\n\n## Contributors\n\nSee: https://github.com/overtone/overtone/graphs/contributors\n"}, {"repo": "samaaron/sonic-pi", "language": "Ruby", "readme_contents": "                                           \u2558\n                                    \u2500       \u255b\u2592\u255b\n                                     \u2590\u256b       \u2584\u2588\u251c\n                              \u2500\u255f\u255b      \u2588\u2584      \u256a\u2593\u2580\n                    \u2553\u2524\u2524\u2524\u2524\u2524\u2524\u2524\u2524\u2524  \u2569\u258c      \u2588\u2588      \u2580\u2593\u258c\n                     \u2590\u2592   \u256c\u2592     \u255f\u2593\u2558    \u2500\u2593\u2588      \u2593\u2593\u251c\n                     \u2592\u256b   \u2592\u256a      \u2593\u2588     \u2593\u2593\u2500     \u2593\u2593\u2584\n                    \u2552\u2592\u2500  \u2502\u2592       \u2593\u2588     \u2593\u2593     \u2500\u2593\u2593\u2500\n                    \u256c\u2592   \u2584\u2592 \u2552    \u256a\u2593\u2550    \u256c\u2593\u256c     \u258c\u2593\u2584\n                    \u2565\u2552   \u2566\u2565     \u2555\u2588\u2552    \u2559\u2593\u2590     \u2584\u2593\u256b\n                               \u2590\u2569     \u2592\u2592      \u2580\u2580\n                                    \u2552\u256a      \u2590\u2584\n\n                 _____             __        ____  __\n                / ___/____  ____  /_/____   / __ \\/_/\n                \\__ \\/ __ \\/ __ \\/ / ___/  / /_/ / /\n               ___/ / /_/ / / / / / /__   / ____/ /\n              /____/\\____/_/ /_/_/\\___/  /_/   /_/\n\n\n## The Live Coding Music Synth for Everyone.\n\nSonic Pi is a *new kind of musical instrument*. Instead of strumming\nstrings or whacking things with sticks - you write code - **live**.\n\nSonic Pi has been designed with the aim to find a harmonious balance\nbetween three core principles:\n\n* **Simple** enough for the 10 year old within you\n* **Joyful** enough for you to lose yourself through play\n* **Powerful** enough for your own expressions\n\nSonic Pi is a complete open source programming environment originally\ndesigned to explore and *teach programming concepts* within schools through\nthe process of creating *new sounds*.\n\nIn addition to being an engaging education resource it has evolved into\nan *extremely powerful* and performance-ready *live coding instrument* suitable\nfor professional artists and DJs.\n\nWhilst Education is a core focus it now sits at the intersection\nbetween three core domains:\n\n* **Art** - providing the means to express yourself and ask new questions of music and notation\n* **Technology** - exploring questions related to liveness, time and concurrency in programming languages\n* **Education**  - demonstrating that open play rather than rigid structures increases motivation and engagement in the classroom\n\nAgain, finding a balance working to the best benefits of all these\ndomains is the objective.\n\n\n* Info & Latest Releases: https://sonic-pi.net\n* Source: https://github.com/samaaron/sonic-pi\n* Computing Education Resources for Schools: https://www.raspberrypi.org/learning/sonic-pi-lessons/\n* Music Education Toolkit for Schools: https://sonic-pi.mehackit.org\n\n## Contributors\n\nSonic Pi has been developed with support from many individuals and organisations. Please see the [CONTRIBUTORS.md](https://github.com/samaaron/sonic-pi/blob/master/CONTRIBUTORS.md) file for a more complete list.\n\n## Translations\n\nSonic Pi's application and built in tutorial have been translated into several languages thanks to the awesome work of several [volunteer translators](CONTRIBUTORS.md#translation):\n\nStatus                                                                                                                                                       | Language            | Application        | Tutorial\n-----------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------------ | :----------------: | :----------------:\n[![Translation Status of Sonic Pi: da](https://hosted.weblate.org/widgets/sonic-pi/da/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Danish              | :white_check_mark: | :red_circle:\n[![Translation Status of Sonic Pi: nl](https://hosted.weblate.org/widgets/sonic-pi/nl/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Dutch               | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: fi](https://hosted.weblate.org/widgets/sonic-pi/fi/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Finnish             | :white_check_mark: | :red_circle:\n[![Translation Status of Sonic Pi: fr](https://hosted.weblate.org/widgets/sonic-pi/fr/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | French              | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: de](https://hosted.weblate.org/widgets/sonic-pi/de/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | German              | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: hu](https://hosted.weblate.org/widgets/sonic-pi/hu/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Hungarian           | :white_check_mark: | :red_circle:\n[![Translation Status of Sonic Pi: is](https://hosted.weblate.org/widgets/sonic-pi/is/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Icelandic           | :white_check_mark: | :red_circle:\n[![Translation Status of Sonic Pi: it](https://hosted.weblate.org/widgets/sonic-pi/it/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Italian             | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: ja](https://hosted.weblate.org/widgets/sonic-pi/ja/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Japanese            | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: nb](https://hosted.weblate.org/widgets/sonic-pi/nb/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Norwegian Bokm\u00e5l    | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: pl](https://hosted.weblate.org/widgets/sonic-pi/pl/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Polish              | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: pt](https://hosted.weblate.org/widgets/sonic-pi/pt/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Portuguese          | :red_circle:       | :white_check_mark:\n[![Translation Status of Sonic Pi: ro](https://hosted.weblate.org/widgets/sonic-pi/ro/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Romanian            | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: ru](https://hosted.weblate.org/widgets/sonic-pi/ru/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Russian             | :white_check_mark: | :white_check_mark:\n[![Translation Status of Sonic Pi: zh_Hans](https://hosted.weblate.org/widgets/sonic-pi/zh_Hans/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/) | Simplified Chinese  | :white_check_mark: | :red_circle:\n[![Translation Status of Sonic Pi: es](https://hosted.weblate.org/widgets/sonic-pi/es/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)           | Spanish             | :white_check_mark: | :white_check_mark:\n\nWould you like to contribute a translation too? If so, please take a look at our [translation docs](https://github.com/samaaron/sonic-pi/blob/master/TRANSLATION.md) to get started.\n\n## Information for developers\n\nSonic Pi is under active development, and welcomes new contributors:\n\n* [How to contribute](HOW-TO-CONTRIBUTE.md)\n* [Change log](CHANGELOG.md)\n* [Community](COMMUNITY.md)\n* [Contributors](CONTRIBUTORS.md)\n* [Installation](INSTALL.md)\n* [License](LICENSE.md)\n* [Testing](TESTING.md)\n* [Translation](TRANSLATION.md)\n\n[![Weblate](https://hosted.weblate.org/widgets/sonic-pi/-/svg-badge.svg)](https://hosted.weblate.org/engage/sonic-pi/)\n<br/>\n[![Travis CI](https://travis-ci.org/samaaron/sonic-pi.svg?branch=master)](https://travis-ci.org/samaaron/sonic-pi)\n<br/>\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/samaaron/sonic-pi?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n"}, {"repo": "puppetlabs/puppet", "language": "Ruby", "readme_contents": "Puppet\n======\n\n[![Travis Status](https://travis-ci.org/puppetlabs/puppet.svg?branch=master)](https://travis-ci.org/puppetlabs/puppet)\n[![Appveyor Status](https://ci.appveyor.com/api/projects/status/cvhpypd4504sevqq/branch/master?svg=true)](https://ci.appveyor.com/project/puppetlabs/puppet/branch/master)\n[![Gem Version](https://badge.fury.io/rb/puppet.svg)](https://badge.fury.io/rb/puppet)\n[![Inline docs](https://inch-ci.org/github/puppetlabs/puppet.svg)](https://inch-ci.org/github/puppetlabs/puppet)\n\nPuppet, an automated administrative engine for your Linux, Unix, and Windows systems, performs\nadministrative tasks (such as adding users, installing packages, and updating server\nconfigurations) based on a centralized specification.\n\nDocumentation\n-------------\n\nDocumentation for Puppet and related projects can be found online at the\n[Puppet Docs site](https://puppet.com/docs).\n\nHTTP API\n--------\n[HTTP API Index](https://puppet.com/docs/puppet/5.5/http_api/http_api_index.html)\n\nInstallation\n------------\n\nThe best way to run Puppet is with [Puppet Enterprise (PE)](https://puppet.com/products/puppet-enterprise/),\nwhich also includes orchestration features, a web console, and professional support.\nThe PE documentation is [available here.](https://puppet.com/docs/pe/latest)\n\nTo install an open source release of Puppet,\n[see the installation guide on the docs site.](https://puppet.com/docs/puppet/5.5/install_pre.html)\n\nIf you need to run Puppet from source as a tester or developer,\nsee the [Running Puppet from Source](https://docs.puppet.com/puppet/3.8/from_source.html) guide on the docs site.\n\nDeveloping and Contributing\n------\n\nWe'd love to get contributions from you! For a quick guide to getting your\nsystem setup for developing, take a look at our [Quickstart\nGuide](https://github.com/puppetlabs/puppet/blob/master/docs/quickstart.md). Once you are up and running, take a look at the\n[Contribution Documents](https://github.com/puppetlabs/puppet/blob/master/CONTRIBUTING.md) to see how to get your changes merged\nin.\n\nFor more complete docs on developing with Puppet, take a look at the\nrest of the [developer documents](https://github.com/puppetlabs/puppet/blob/master/docs/index.md).\n\nLicensing\n---------\n\nSee [LICENSE](https://github.com/puppetlabs/puppet/blob/master/LICENSE) file. Puppet is licensed by Puppet, Inc. under the Apache license. Puppet, Inc. can be contacted at: info@puppet.com\n\nSupport\n-------\n\nPlease log tickets and issues at our [JIRA tracker](https://tickets.puppetlabs.com).  A [mailing\nlist](https://groups.google.com/forum/?fromgroups#!forum/puppet-users) is\navailable for asking questions and getting help from others. In addition, there\nis an active #puppet channel on Freenode.\n\nWe use semantic version numbers for our releases and recommend that users stay\nas up-to-date as possible by upgrading to patch releases and minor releases as\nthey become available.\n\nBugfixes and ongoing development will occur in minor releases for the current\nmajor version. Security fixes will be backported to a previous major version on\na best-effort basis, until the previous major version is no longer maintained.\n\nFor example: If a security vulnerability is discovered in Puppet 4.1.1, we\nwould fix it in the 4 series, most likely as 4.1.2. Maintainers would then make\na best effort to backport that fix onto the latest Puppet 3 release.\n\nLong-term support, including security patches and bug fixes, is available for\ncommercial customers. Please see the following page for more details:\n\n[Puppet Enterprise Support Lifecycle](https://puppet.com/misc/puppet-enterprise-lifecycle)\n"}, {"repo": "chef/chef", "language": "Ruby", "readme_contents": "# Chef Infra\n[![Code Climate](https://codeclimate.com/github/chef/chef.svg)](https://codeclimate.com/github/chef/chef)\n[![Build Status](https://badge.buildkite.com/c82093430ceec7d27af05febb9dcafe3aa331fff9d74c0ab9d.svg?branch=master)](https://buildkite.com/chef-oss/chef-chef-master-verify)\n[![Gem Version](https://badge.fury.io/rb/chef.svg)](https://badge.fury.io/rb/chef)\n[![](https://img.shields.io/badge/Release%20Policy-Cadence%20Release-brightgreen.svg)](https://github.com/chef/chef/blob/v15.2.21/docs/dev/design_documents/client_release_cadence.md)\n\n**Umbrella Project**: [Chef Infra](https://github.com/chef/chef-oss-practices/blob/master/projects/chef-infra.md)\n\n**Project State**: [Active](https://github.com/chef/chef-oss-practices/blob/master/repo-management/repo-states.md#active)\n\n**Issues [Response Time Maximum](https://github.com/chef/chef-oss-practices/blob/master/repo-management/repo-states.md)**: 14 days\n\n**Pull Request [Response Time Maximum](https://github.com/chef/chef-oss-practices/blob/master/repo-management/repo-states.md)**: 14 days\n\n## Getting Started\n\nChef Infra is a configuration management tool designed to bring automation to your entire infrastructure.\n\n### Want to try Chef Infra?\n\nFor Chef Infra usage, please refer to our [Learn Chef Rally](https://learn.chef.io/) website, which includes module-based training for Chef Infra, as well as Automate, Habitat, and InSpec.\n\nOther useful resources for Chef Infra users:\n\n- Documentation: <https://docs.chef.io>\n- Source: <https://github.com/chef/chef/tree/master>\n- Tickets/Issues: <https://github.com/chef/chef/issues>\n- Slack: [Chef Community Slack](https://community-slack.chef.io/)\n- Mailing list: <https://discourse.chef.io>\n\n## Reporting Issues\n\nIssues can be reported by using [GitHub Issues](https://github.com/chef/chef/issues).\n\nNote that this repository is primarily for reporting issues in the chef-client itself. For reporting issues against other Chef projects, please look up the appropriate repository. If you're unsure where to submit an issue, please ask in the #chef-dev channel in [Chef Community Slack](https://community-slack.chef.io/).\n\n## How We Build & Release Chef\n\nFor information on how a contribution goes from PR to released package, see [How Chef Infra Is Built](docs/dev/design_documents/how_chef_is_tested_and_built.md)\n\nTo learn more about our monthly feature releases and yearly major releases, see [Chef Infra Release and Support Schedule](./docs/dev/policy/release_and_support_schedule.md).\n\n## Getting Involved\n\nWe'd love to have your help developing Chef Infra. See our [Contributing Document](./CONTRIBUTING.md) for more information on getting started.\n\n## License and Copyright\n\nCopyright 2008-2019, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"}, {"repo": "ansible/ansible", "language": "Python", "readme_contents": "|PyPI version| |Docs badge| |Chat badge| |Build Status| |Code Of Conduct| |Mailing Lists| |License|\n\n*******\nAnsible\n*******\n\nAnsible is a radically simple IT automation system. It handles\nconfiguration management, application deployment, cloud provisioning,\nad-hoc task execution, network automation, and multi-node orchestration. Ansible makes complex\nchanges like zero-downtime rolling updates with load balancers easy. More information on `the Ansible website <https://ansible.com/>`_.\n\nDesign Principles\n=================\n\n*  Have a dead simple setup process and a minimal learning curve.\n*  Manage machines very quickly and in parallel.\n*  Avoid custom-agents and additional open ports, be agentless by\n   leveraging the existing SSH daemon.\n*  Describe infrastructure in a language that is both machine and human\n   friendly.\n*  Focus on security and easy auditability/review/rewriting of content.\n*  Manage new remote machines instantly, without bootstrapping any\n   software.\n*  Allow module development in any dynamic language, not just Python.\n*  Be usable as non-root.\n*  Be the easiest IT automation system to use, ever.\n\nUse Ansible\n===========\n\nYou can install a released version of Ansible via ``pip``, a package manager, or\nour `release repository <https://releases.ansible.com/ansible/>`_. See our\n`installation guide <https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html>`_ for details on installing Ansible\non a variety of platforms.\n\nRed Hat offers supported builds of `Ansible Engine <https://www.ansible.com/ansible-engine>`_.\n\nPower users and developers can run the ``devel`` branch, which has the latest\nfeatures and fixes, directly. Although it is reasonably stable, you are more likely to encounter\nbreaking changes when running the ``devel`` branch. We recommend getting involved\nin the Ansible community if you want to run the ``devel`` branch.\n\nGet Involved\n============\n\n*  Read `Community\n   Information <https://docs.ansible.com/ansible/latest/community>`_ for all\n   kinds of ways to contribute to and interact with the project,\n   including mailing list information and how to submit bug reports and\n   code to Ansible.\n*  Join a `Working Group\n   <https://github.com/ansible/community/wiki>`_, an organized community devoted to a specific technology domain or platform.\n*  Submit a proposed code update through a pull request to the ``devel`` branch.\n*  Talk to us before making larger changes\n   to avoid duplicate efforts. This not only helps everyone\n   know what is going on, it also helps save time and effort if we decide\n   some changes are needed.\n*  For a list of email lists, IRC channels and Working Groups, see the\n   `Communication page <https://docs.ansible.com/ansible/latest/community/communication.html>`_\n\nBranch Info\n===========\n\n*  The ``devel`` branch corresponds to the release actively under development.\n*  The ``stable-2.X`` branches correspond to stable releases.\n*  Create a branch based on ``devel`` and set up a `dev environment <https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_general.html#common-environment-setup>`_ if you want to open a PR.\n*  See the `Ansible release and maintenance <https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html>`_ page for information about active branches.\n\nRoadmap\n=======\n\nBased on team and community feedback, an initial roadmap will be published for a major or minor version (ex: 2.7, 2.8).\nThe `Ansible Roadmap page <https://docs.ansible.com/ansible/devel/roadmap/>`_ details what is planned and how to influence the roadmap.\n\nAuthors\n=======\n\nAnsible was created by `Michael DeHaan <https://github.com/mpdehaan>`_\nand has contributions from over 4700 users (and growing). Thanks everyone!\n\n`Ansible <https://www.ansible.com>`_ is sponsored by `Red Hat, Inc.\n<https://www.redhat.com>`_\n\nLicense\n=======\n\nGNU General Public License v3.0 or later\n\nSee `COPYING <COPYING>`_ to see the full text.\n\n.. |PyPI version| image:: https://img.shields.io/pypi/v/ansible.svg\n   :target: https://pypi.org/project/ansible\n.. |Docs badge| image:: https://img.shields.io/badge/docs-latest-brightgreen.svg\n   :target: https://docs.ansible.com/ansible/latest/\n.. |Build Status| image:: https://api.shippable.com/projects/573f79d02a8192902e20e34b/badge?branch=devel\n   :target: https://app.shippable.com/projects/573f79d02a8192902e20e34b\n.. |Chat badge| image:: https://img.shields.io/badge/chat-IRC-brightgreen.svg\n   :target: https://docs.ansible.com/ansible/latest/community/communication.html\n.. |Code Of Conduct| image:: https://img.shields.io/badge/code%20of%20conduct-Ansible-silver.svg\n   :target: https://docs.ansible.com/ansible/latest/community/code_of_conduct.html\n   :alt: Ansible Code of Conduct\n.. |Mailing Lists| image:: https://img.shields.io/badge/mailing%20lists-Ansible-orange.svg\n   :target: https://docs.ansible.com/ansible/latest/community/communication.html#mailing-list-information\n   :alt: Ansible mailing lists\n.. |License| image:: https://img.shields.io/badge/license-GPL%20v3.0-brightgreen.svg\n   :target: COPYING\n   :alt: Repository License\n"}, {"repo": "saltstack/salt", "language": "Python", "readme_contents": "==================\nWhat is SaltStack?\n==================\n\nSaltStack makes software for complex systems management at scale.\nSaltStack is the company that created and maintains the Salt Open\nproject and develops and sells SaltStack Enterprise software, services\nand support. Easy enough to get running in minutes, scalable enough to\nmanage tens of thousands of servers, and fast enough to communicate with\nthem in *seconds*.\n\nSalt is a new approach to infrastructure management built on a dynamic\ncommunication bus. Salt can be used for data-driven orchestration,\nremote execution for any infrastructure, configuration management for\nany app stack, and much more.\n\nDownload Salt Open\n==================\n\nSalt Open is tested and packaged to run on CentOS, Debian, RHEL, Ubuntu,\nWindows. Download Salt Open and get started now.\n\n`<https://repo.saltstack.com/>`_\n\n`Installation Instructions <https://docs.saltstack.com/en/latest/topics/installation/index.html>`_\n\nSaltStack Documentation\n=======================\n\nInstallation instructions, getting started guides, and in-depth API\ndocumentation.\n\n`<https://docs.saltstack.com/en/getstarted/>`_\n\n`<https://docs.saltstack.com/en/latest/>`_\n\nEngage SaltStack\n================\n\n`SaltConf`_, **User Groups and Meetups** - SaltStack has a vibrant and `global\ncommunity`_ of customers, users, developers and enthusiasts. Connect with other\nSalted folks in your area of the world, or join `SaltConf`_, the SaltStack\nannual user conference held in Salt Lake City. Please visit the `SaltConf`_ site\nfor details of our next conference. Also, please let us know if you would like\nto start a user group or if we should add your existing SaltStack user group to\nthis list by emailing: info@saltstack.com\n\n**SaltStack Training** - Get access to proprietary `SaltStack education\nofferings`_ through instructor-led training offered on-site, virtually or at\nSaltStack headquarters in Salt Lake City. SaltStack Enterprise training helps\nincrease the value and effectiveness of SaltStack software for any customer and\nis a prerequisite for coveted `SaltStack Certified Engineer (SSCE)`_ status.\nSaltStack training is also available through several `SaltStack professional\nservices`_ offerings.\n\n**Follow SaltStack on -**\n\n* YouTube - `<http://www.youtube.com/saltstack>`_\n* Twitter - `<http://www.twitter.com/saltstack>`_\n* Facebook - `<https://www.facebook.com/SaltStack/>`_\n* LinkedIn - `<https://www.linkedin.com/company/salt-stack-inc>`_\n* LinkedIn Group - `<https://www.linkedin.com/groups/4877160>`_\n\n.. _global community: http://www.meetup.com/pro/saltstack/\n.. _SaltConf: http://saltconf.com/\n.. _SaltStack education offerings: http://saltstack.com/training/\n.. _SaltStack Certified Engineer (SSCE): http://saltstack.com/certification/\n.. _SaltStack professional services: http://saltstack.com/services/\n"}, {"repo": "hashicorp/vagrant", "language": "Ruby", "readme_contents": "# Vagrant\n\n* Website: [https://www.vagrantup.com/](https://www.vagrantup.com/)\n* Source: [https://github.com/hashicorp/vagrant](https://github.com/hashicorp/vagrant)\n* [![Gitter chat](https://badges.gitter.im/mitchellh/vagrant.png)](https://gitter.im/mitchellh/vagrant)\n* Mailing list: [Google Groups](https://groups.google.com/group/vagrant-up)\n* IRC: #vagrant on freenode.org\n\nVagrant is a tool for building and distributing development environments.\n\nDevelopment environments managed by Vagrant can run on local virtualized\nplatforms such as VirtualBox or VMware, in the cloud via AWS or OpenStack,\nor in containers such as with Docker or raw LXC.\n\nVagrant provides the framework and configuration format to create and\nmanage complete portable development environments. These development\nenvironments can live on your computer or in the cloud, and are portable\nbetween Windows, Mac OS X, and Linux.\n\n## Quick Start\n\nPackage dependencies: Vagrant requires `bsdtar` to be available on your system PATH to run successfully.\n\nFor the quick-start, we'll bring up a development machine on\n[VirtualBox](https://www.virtualbox.org/) because it is free and works\non all major platforms. Vagrant can, however, work with almost any\nsystem such as [OpenStack](https://www.openstack.org/), [VMware](https://www.vmware.com/), [Docker](https://docs.docker.com/), etc.\n\nFirst, make sure your development machine has\n[VirtualBox](https://www.virtualbox.org/)\ninstalled. After this,\n[download and install the appropriate Vagrant package for your OS](https://www.vagrantup.com/downloads.html).\n\nTo build your first virtual environment:\n\n    vagrant init hashicorp/bionic64\n    vagrant up\n\nNote: The above `vagrant up` command will also trigger Vagrant to download the\n`bionic64` box via the specified URL. Vagrant only does this if it detects that\nthe box doesn't already exist on your system.\n\n## Getting Started Guide\n\nTo learn how to build a fully functional development environment, follow the\n[getting started guide](https://www.vagrantup.com/docs/getting-started/index.html).\n\n## Installing from Source\n\nIf you want the bleeding edge version of Vagrant, we try to keep master pretty stable\nand you're welcome to give it a shot. Please review the installation page [here](https://www.vagrantup.com/docs/installation/source.html).\n\n## Contributing to Vagrant\n\nOnce your Vagrant bundle is installed from Git repository, you can run the test suite with:\n\n    bundle exec rake\n\nThis will run the unit test suite, which should come back all green!\n\nIf you are developing Vagrant on a machine that already has a Vagrant package installation present, both will attempt to use the same folder for their configuration (location of this folder depends on system). This can cause errors when Vagrant attempts to load plugins. In this case, override the `VAGRANT_HOME` environment variable for your development version of Vagrant before running any commands, to be some new folder within the project or elsewhere on your machine. For example, in Bash:\n\n    export VAGRANT_HOME=~/.vagrant-dev\n\nYou can now run Vagrant commands against the development version:\n\n    bundle exec vagrant\n\nPlease take time to read the [HashiCorp Community Guidelines](https://www.hashicorp.com/community-guidelines) and the [Vagrant Contributing Guide](https://github.com/hashicorp/vagrant/blob/master/.github/CONTRIBUTING.md).\n\nThen you're good to go!\n\n### Acceptance Tests\n\nVagrant also comes with an acceptance test suite that does black-box\ntests of various Vagrant components. Note that these tests are **extremely\nslow** because actual VMs are spun up and down. The full test suite can\ntake hours. Instead, try to run focused component tests.\n\nTo run the acceptance test suite, first copy `vagrant-spec.config.example.rb`\nto `vagrant-spec.config.rb` and modify it to valid values. The places you\nshould fill in are clearly marked.\n\nNext, see the components that can be tested:\n\n```\n$ rake acceptance:components\ncli\nprovider/virtualbox/basic\n...\n```\n\nThen, run one of those components:\n\n```\n$ rake acceptance:run COMPONENTS=\"cli\"\n...\n```\n"}, {"repo": "openstack/openstack", "language": "Python", "readme_contents": "OpenStack Tracking Repo\n=======================\n\nzuul gates all of the contained projects in an effective single\ntimeline. This means that OpenStack, across all of the projects, does\nalready have a sequence of combinations that have been explicitly\ntested, but it's non-trivial to go from a single commit of a particular\nproject to the commits that were tested with it.\n\nGerrit's submodule tracking feature will update a super project every\ntime a subproject is updated, so the specific sequence created by zuul\nwill be captured by the super project commits.\n\nThis repo is intended to be used in a read-only manner. Any commit in this\nrepo will get a collection of commits in the other repos that have\nexplicitly been tested with each other, if that sort of thing is important\nto you.\n"}, {"repo": "moby/moby", "language": "Go", "readme_contents": "The Moby Project\n================\n\n![Moby Project logo](docs/static_files/moby-project-logo.png \"The Moby Project\")\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization.\n\nIt provides a \"Lego set\" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.\nComponents include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.\n\n## Principles\n\nMoby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.\nIt is open to the community to help set its direction.\n\n- Modular: the project includes lots of components that have well-defined functions and APIs that work together.\n- Batteries included but swappable: Moby includes enough components to build fully featured container system, but its modular architecture ensures that most of the components can be swapped by different implementations.\n- Usable security: Moby provides secure defaults without compromising usability.\n- Developer focused: The APIs are intended to be functional and useful to build powerful tools.\nThey are not necessarily intended as end user tools but as components aimed at developers.\nDocumentation and UX is aimed at developers not end users.\n\n## Audience\n\nThe Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.\nIt is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.\n\n## Relationship with Docker\n\nThe components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.\nNew projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.\nHowever, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.\n\nThe Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.\nThe releases are supported by the maintainers, community and users, on a best efforts basis only, and are not intended for customers who want enterprise or commercial support; Docker EE is the appropriate product for these use cases.\n\n-----\n\nLegal\n=====\n\n*Brought to you courtesy of our legal counsel. For more context,\nplease see the [NOTICE](https://github.com/moby/moby/blob/master/NOTICE) document in this repo.*\n\nUse and transfer of Moby may be subject to certain restrictions by the\nUnited States and other governments.\n\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nLicensing\n=========\nMoby is licensed under the Apache License, Version 2.0. See\n[LICENSE](https://github.com/moby/moby/blob/master/LICENSE) for the full\nlicense text.\n"}, {"repo": "capistrano/capistrano", "language": "Ruby", "readme_contents": "\n# Capistrano: A deployment automation tool built on Ruby, Rake, and SSH.\n\n[![Gem Version](https://badge.fury.io/rb/capistrano.svg)](http://badge.fury.io/rb/capistrano) [![Build Status](https://travis-ci.org/capistrano/capistrano.svg?branch=master)](https://travis-ci.org/capistrano/capistrano) [![Code Climate](https://codeclimate.com/github/capistrano/capistrano/badges/gpa.svg)](https://codeclimate.com/github/capistrano/capistrano) [![CodersClan](https://img.shields.io/badge/get-support-blue.svg)](http://codersclan.net/?repo_id=325&source=small)\n\nCapistrano is a framework for building automated deployment scripts. Although Capistrano itself is written in Ruby, it can easily be used to deploy projects of any language or framework, be it Rails, Java, or PHP.\n\nOnce installed, Capistrano gives you a `cap` tool to perform your deployments from the comfort of your command line.\n\n```\n$ cd my-capistrano-enabled-project\n$ cap production deploy\n```\n\nWhen you run `cap`, Capistrano dutifully connects to your server(s) via SSH and executes the steps necessary to deploy your project. You can define those steps yourself by writing [Rake](https://github.com/ruby/rake) tasks, or by using pre-built task libraries provided by the Capistrano community.\n\nTasks are simple to make. Here's an example:\n\n```ruby\ntask :restart_sidekiq do\n  on roles(:worker) do\n    execute :service, \"sidekiq restart\"\n  end\nend\nafter \"deploy:published\", \"restart_sidekiq\"\n```\n\n*Note: This documentation is for the current version of Capistrano (3.x). If you are looking for Capistrano 2.x documentation, you can find it in [this archive](https://github.com/capistrano/capistrano-2.x-docs).*\n\n---\n\n## Contents\n\n* [Features](#features)\n* [Gotchas](#gotchas)\n* [Quick start](#quick-start)\n* [Finding help and documentation](#finding-help-and-documentation)\n* [How to contribute](#how-to-contribute)\n* [License](#license)\n\n## Features\n\nThere are many ways to automate deployments, from simple rsync bash scripts to complex containerized toolchains. Capistrano sits somewhere in the middle: it automates what you already know how to do manually with SSH, but in a repeatable, scalable fashion. There is no magic here!\n\nHere's what makes Capistrano great:\n\n#### Strong conventions\n\nCapistrano defines a standard deployment process that all Capistrano-enabled projects follow by default. You don't have to decide how to structure your scripts, where deployed files should be placed on the server, or how to perform common tasks: Capistrano has done this work for you.\n\n#### Multiple stages\n\nDefine your deployment once, and then easily parameterize it for multiple *stages* (environments), e.g. `qa`, `staging`, and `production`. No copy-and-paste necessary: you only need to specify what is different for each stage, like IP addresses.\n\n#### Parallel execution\n\nDeploying to a fleet of app servers? Capistrano can run each deployment task concurrently across those servers and uses connection pooling for speed.\n\n#### Server roles\n\nYour application may need many different types of servers: a database server, an app server, two web servers, and a job queue work server, for example. Capistrano lets you tag each server with one or more roles, so you can control what tasks are executed where.\n\n#### Community driven\n\nCapistrano is easily extensible using the rubygems package manager. Deploying a Rails app? Wordpress? Laravel? Chances are, someone has already written Capistrano tasks for your framework of choice and has distributed it as a gem. Many Ruby projects also come with Capistrano tasks built-in.\n\n#### It's just SSH\n\nEverything in Capistrano comes down to running SSH commands on remote servers. On the one hand, that makes Capistrano simple. On the other hand, if you aren't comfortable SSH-ing into a Linux box and doing stuff on the command-line, then Capistrano is probably not for you.\n\n## Gotchas\n\nWhile Capistrano ships with a strong set of conventions that are common for all types of deployments, it needs help understanding the specifics of your project, and there are some things Capistrano is not suited to do.\n\n#### Project specifics\n\nOut of the box, Capistrano can deploy your code to server(s), but it does not know how to *execute* your code. Does `foreman` need to be run? Does Apache need to be restarted? You'll need to tell Capistrano how to do this part by writing these deployment steps yourself, or by finding a gem in the Capistrano community that does it for you.\n\n#### Key-based SSH\n\nCapistrano depends on connecting to your server(s) with SSH using key-based (i.e. password-less) authentication. You'll need this working before you can use Capistrano.\n\n#### Provisioning\n\nLikewise, your server(s) will likely need supporting software installed before you can perform a deployment. Capistrano itself has no requirements other than SSH, but your application probably needs database software, a web server like Apache or Nginx, and a language runtime like Java, Ruby, or PHP. These *server provisioning* steps are not done by Capistrano.\n\n#### `sudo`, etc.\n\nCapistrano is designed to deploy using a single, non-privileged SSH user, using a *non-interactive* SSH session. If your deployment requires `sudo`, interactive prompts, authenticating as one user but running commands as another, you can probably accomplish this with Capistrano, but it may be difficult. Your automated deployments will be much smoother if you can avoid such requirements.\n\n#### Shells\n\nCapistrano 3 expects a POSIX shell like Bash or Sh. Shells like tcsh, csh, and such may work, but probably will not.\n\n## Quick start\n\n### Requirements\n\n* Ruby version 2.0 or higher on your local machine (MRI or Rubinius)\n* A project that uses source control (Git, Mercurial, and Subversion support is built-in)\n* The SCM binaries (e.g. `git`, `hg`) needed to check out your project must be installed on the server(s) you are deploying to\n* [Bundler](http://bundler.io), along with a Gemfile for your project, are recommended\n\n### Install the Capistrano gem\n\nAdd Capistrano to your project's Gemfile using `require: false`:\n\n``` ruby\ngroup :development do\n  gem \"capistrano\", \"~> 3.11\", require: false\nend\n```\n\nThen run Bundler to ensure Capistrano is downloaded and installed:\n\n``` sh\n$ bundle install\n```\n\n### \"Capify\" your project\n\nMake sure your project doesn't already have a \"Capfile\" or \"capfile\" present. Then run:\n\n``` sh\n$ bundle exec cap install\n```\n\nThis creates all the necessary configuration files and directory structure for a Capistrano-enabled project with two stages, `staging` and `production`:\n\n```\n\u251c\u2500\u2500 Capfile\n\u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 deploy\n\u2502   \u2502   \u251c\u2500\u2500 production.rb\n\u2502   \u2502   \u2514\u2500\u2500 staging.rb\n\u2502   \u2514\u2500\u2500 deploy.rb\n\u2514\u2500\u2500 lib\n    \u2514\u2500\u2500 capistrano\n            \u2514\u2500\u2500 tasks\n```\n\nTo customize the stages that are created, use:\n\n``` sh\n$ bundle exec cap install STAGES=local,sandbox,qa,production\n```\n\nNote that the files that Capistrano creates are simply templates to get you started. Make sure to edit the `deploy.rb` and stage files so that they contain values appropriate for your project and your target servers.\n\n### Command-line usage\n\n``` sh\n# list all available tasks\n$ bundle exec cap -T\n\n# deploy to the staging environment\n$ bundle exec cap staging deploy\n\n# deploy to the production environment\n$ bundle exec cap production deploy\n\n# simulate deploying to the production environment\n# does not actually do anything\n$ bundle exec cap production deploy --dry-run\n\n# list task dependencies\n$ bundle exec cap production deploy --prereqs\n\n# trace through task invocations\n$ bundle exec cap production deploy --trace\n\n# lists all config variable before deployment tasks\n$ bundle exec cap production deploy --print-config-variables\n```\n\n## Finding help and documentation\n\nCapistrano is a large project encompassing multiple GitHub repositories and a community of plugins, and it can be overwhelming when you are just getting started. Here are resources that can help:\n\n* **The [docs](docs) directory contains the official documentation**, and is used to generate the [Capistrano website](http://capistranorb.com)\n* [Stack Overflow](http://stackoverflow.com/questions/tagged/capistrano) has a Capistrano tag with lots of activity\n* [The Capistrano mailing list](https://groups.google.com/forum/#!forum/capistrano) is low-traffic but is monitored by Capistrano contributors\n* [CodersClan](http://codersclan.net/?repo_id=325&source=link) has Capistrano experts available to solve problems for bounties\n\nRelated GitHub repositories:\n\n* [capistrano/sshkit](https://github.com/capistrano/sshkit) provides the SSH behavior that underlies Capistrano (when you use `execute` in a Capistrano task, you are using SSHKit)\n* [capistrano/rails](https://github.com/capistrano/rails) is a very popular gem that adds Ruby on Rails deployment tasks\n* [mattbrictson/airbrussh](https://github.com/mattbrictson/airbrussh) provides Capistrano's default log formatting\n\nGitHub issues are for bug reports and feature requests. Please refer to the [CONTRIBUTING](CONTRIBUTING.md) document for guidelines on submitting GitHub issues.\n\nIf you think you may have discovered a security vulnerability in Capistrano, do not open a GitHub issue. Instead, please send a report to <security@capistranorb.com>.\n\n## How to contribute\n\nContributions to Capistrano, in the form of code, documentation or idea, are gladly accepted. Read the [DEVELOPMENT](DEVELOPMENT.md) document to learn how to hack on Capistrano's code, run the tests, and contribute your first pull request.\n\n## License\n\nMIT License (MIT)\n\nCopyright (c) 2012-2019 Tom Clements, Lee Hambley\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"}, {"repo": "statsd/statsd", "language": "JavaScript", "readme_contents": "# StatsD [![Build Status][travis-ci_status_img]][travis-ci_statsd] [![Join the chat at https://gitter.im/statsd/statsd](https://badges.gitter.im/statsd/statsd.svg)](https://gitter.im/statsd/statsd?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nA network daemon that runs on the [Node.js][node] platform and\nlistens for statistics, like counters and timers, sent over [UDP][udp] or\n[TCP][tcp] and sends aggregates to one or more pluggable backend services (e.g.,\n[Graphite][graphite]).\n\n## Key Concepts\n\n* *buckets*\n  Each stat is in its own \"bucket\". They are not predefined anywhere. Buckets\ncan be named anything that will translate to Graphite (periods make folders,\netc)\n\n* *values*\n  Each stat will have a value. How it is interpreted depends on modifiers. In\ngeneral values should be integers.\n\n* *flush*\n  After the flush interval timeout (defined by `config.flushInterval`,\n  default 10 seconds), stats are aggregated and sent to an upstream backend service.\n\n\n## Installation and Configuration\n\n### Docker\nStatsd supports docker in two ways:\n* The official docker image on [docker hub](https://hub.docker.com/r/statsd/statsd)\n* Building the image from the bundled [Dockerfile](./Dockerfile)\n\n### Manual installation\n * Install Node.js (All [`Current` and `LTS` Node.js versions](https://nodejs.org/en/about/releases/) are supported.)\n * Clone the project\n * Create a config file from `exampleConfig.js` and put it somewhere\n * Start the Daemon:\n   `node stats.js /path/to/config`\n\n## Usage\nThe basic line protocol expects metrics to be sent in the format:\n\n    <metricname>:<value>|<type>\n\nSo the simplest way to send in metrics from your command line if you have\nStatsD running with the default UDP server on localhost would be:\n\n    echo \"foo:1|c\" | nc -u -w0 127.0.0.1 8125\n\n## More Specific Topics\n* [Metric Types][docs_metric_types]\n* [Graphite Integration][docs_graphite]\n* [Supported Servers][docs_server]\n* [Supported Backends][docs_backend]\n* [Admin TCP Interface][docs_admin_interface]\n* [Server Interface][docs_server_interface]\n* [Backend Interface][docs_backend_interface]\n* [Metric Namespacing][docs_namespacing]\n* [Statsd Cluster Proxy][docs_cluster_proxy]\n\n## Debugging\nThere are additional config variables available for debugging:\n\n* `debug` - log exceptions and print out more diagnostic info\n* `dumpMessages` - print debug info on incoming messages\n\nFor more information, check the `exampleConfig.js`.\n\n\n## Tests\nA test framework has been added using node-unit and some custom code to start\nand manipulate statsd. Please add tests under test/ for any new features or bug\nfixes encountered. Testing a live server can be tricky, attempts were made to\neliminate race conditions but it may be possible to encounter a stuck state. If\ndoing dev work, a `killall statsd` will kill any stray test servers in the\nbackground (don't do this on a production machine!).\n\nTests can be executed with `./run_tests.sh`.\n\n## History\nstatsd was originally written at ([Etsy][etsy]) and released with a [blog post][blog post]\nabout how it works and why we created it.\n\n## Inspiration\nStatsD was inspired (heavily) by the project (of the same name) at Flickr.\nHere's a post where Cal Henderson described it in depth:\n[Counting and timing][counting-timing]\nCal re-released the code recently:\n[Perl StatsD][Flicker-StatsD]\n\n\n\n[graphite]: http://graphite.readthedocs.org/\n[etsy]: http://www.etsy.com\n[blog post]: http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/\n[node]: http://nodejs.org\n[nodemods]: http://nodejs.org/api/modules.html\n[counting-timing]: http://code.flickr.com/blog/2008/10/27/counting-timing/\n[Flicker-StatsD]: https://github.com/iamcal/Flickr-StatsD\n[udp]: http://en.wikipedia.org/wiki/User_Datagram_Protocol\n[tcp]: http://en.wikipedia.org/wiki/Transmission_Control_Protocol\n[docs_metric_types]: https://github.com/statsd/statsd/blob/master/docs/metric_types.md\n[docs_graphite]: https://github.com/statsd/statsd/blob/master/docs/graphite.md\n[docs_server]: https://github.com/statsd/statsd/blob/master/docs/server.md\n[docs_backend]: https://github.com/statsd/statsd/blob/master/docs/backend.md\n[docs_admin_interface]: https://github.com/statsd/statsd/blob/master/docs/admin_interface.md\n[docs_server_interface]: https://github.com/statsd/statsd/blob/master/docs/server_interface.md\n[docs_backend_interface]: https://github.com/statsd/statsd/blob/master/docs/backend_interface.md\n[docs_namespacing]: https://github.com/etsy/statsd/blob/master/docs/namespacing.md\n[docs_cluster_proxy]: https://github.com/etsy/statsd/blob/master/docs/cluster_proxy.md\n[travis-ci_status_img]: https://travis-ci.org/statsd/statsd.svg?branch=master\n[travis-ci_statsd]: https://travis-ci.org/statsd/statsd\n"}, {"repo": "graphite-project/graphite-web", "language": "JavaScript", "readme_contents": "# Graphite-Web\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/5e94ef79c2ea441aaf209cfb2851849e)](https://www.codacy.com/app/graphite-project/graphite-web?utm_source=github.com&utm_medium=referral&utm_content=graphite-project/graphite-web&utm_campaign=badger)\n[![Build Status](https://travis-ci.org/graphite-project/graphite-web.png?branch=master)](https://travis-ci.org/graphite-project/graphite-web)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web?ref=badge_shield)\n[![codecov](https://codecov.io/gh/graphite-project/graphite-web/branch/master/graph/badge.svg)](https://codecov.io/gh/graphite-project/graphite-web)\n\n## Overview\n\nGraphite consists of three major components:\n\n1. Graphite-Web, a Django-based web application that renders graphs and dashboards\n2. The [Carbon](https://github.com/graphite-project/carbon) metric processing daemons\n3. The [Whisper](https://github.com/graphite-project/whisper) time-series database library\n\n![Graphite Components](https://github.com/graphite-project/graphite-web/raw/master/webapp/content/img/overview.png \"Graphite Components\")\n\n## Installation, Configuration and Usage\n\nPlease refer to the instructions at [readthedocs](http://graphite.readthedocs.io/).\n\n## License\n\nGraphite-Web is licensed under version 2.0 of the Apache License. See the [LICENSE](https://github.com/graphite-project/graphite-web/blob/master/LICENSE) file for details.\n"}, {"repo": "elastic/logstash", "language": "Ruby", "readme_contents": "# Logstash\n\nLogstash is part of the [Elastic Stack](https://www.elastic.co/products) along with Beats, Elasticsearch and Kibana. Logstash is a server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite \"stash.\" (Ours is Elasticsearch, naturally.). Logstash has over 200 plugins, and you can write your own very easily as well.\n\nFor more info, see <https://www.elastic.co/products/logstash>\n\n## Documentation and Getting Started\n\nYou can find the documentation and getting started guides for Logstash\non the [elastic.co site](https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html)\n\nFor information about building the documentation, see the README in https://github.com/elastic/docs\n\n## Downloads\n\nYou can download officially released Logstash binaries, as well as debian/rpm packages for the\nsupported platforms, from [downloads page](https://www.elastic.co/downloads/logstash).\n\n### Snapshot Builds\n\nFor the daring, snapshot builds are available.\nThese builds are created nightly and have undergone no formal QA, so they should **never** be run in production.\n\n| Complete, with X-Pack | Apache 2.0 licensed    |\n| --------------------- | ---------------------- |\n| [tar-complete][]      | [tar-oss][]            |\n| [zip-complete][]      | [zip-oss][]            |\n| [deb-complete][]      | [deb-oss][]            |\n| [rpm-complete][]      | [rpm-oss][]            |\n\n[tar-complete]: https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.tar.gz\n[zip-complete]: https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.zip\n[deb-complete]: https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.deb\n[rpm-complete]: https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.rpm\n[tar-oss]: https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.tar.gz\n[zip-oss]: https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.zip\n[deb-oss]: https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.deb\n[rpm-oss]: https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.rpm\n\n## Need Help?\n\n- [Logstash Forum](https://discuss.elastic.co/c/logstash)\n- [Logstash Documentation](https://www.elastic.co/guide/en/logstash/current/index.html)\n- [#logstash on freenode IRC](https://webchat.freenode.net/?channels=logstash)\n- [Logstash Product Information](https://www.elastic.co/products/logstash)\n- [Elastic Support](https://www.elastic.co/subscriptions)\n\n## Logstash Plugins\n\nLogstash plugins are hosted in separate repositories under the [logstash-plugins](https://github.com/logstash-plugins) github organization. Each plugin is a self-contained Ruby gem which gets published to RubyGems.org.\n\n### Writing your own Plugin\n\nLogstash is known for its extensibility. There are hundreds of plugins for Logstash and you can write your own very easily! For more info on developing and testing these plugins, please see the [working with plugins section](https://www.elastic.co/guide/en/logstash/current/contributing-to-logstash.html)\n\n### Plugin Issues and Pull Requests\n\n**Please open new issues and pull requests for plugins under its own repository**\n\nFor example, if you have to report an issue/enhancement for the Elasticsearch output, please do so [here](https://github.com/logstash-plugins/logstash-output-elasticsearch/issues).\n\nLogstash core will continue to exist under this repository and all related issues and pull requests can be submitted here.\n\n## Developing Logstash Core\n\n### Prerequisites\n\n* Install JDK version 8 or 11. Make sure to set the `JAVA_HOME` environment variable to the path to your JDK installation directory. For example `set JAVA_HOME=<JDK_PATH>`\n* Install JRuby 9.2.x It is recommended to use a Ruby version manager such as [RVM](https://rvm.io/) or [rbenv](https://github.com/sstephenson/rbenv).\n* Install `rake` and `bundler` tool using `gem install rake` and `gem install bundler` respectively.\n\n### RVM install (optional)\n\nIf you prefer to use rvm (ruby version manager) to manage Ruby versions on your machine, follow these directions. In the Logstash folder:\n\n```sh\ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3\n\\curl -sSL https://get.rvm.io | bash -s stable --ruby=$(cat .ruby-version)\n```\n\n### Check Ruby version\n\nBefore you proceed, please check your ruby version by:\n\n```sh\n$ ruby -v\n```\n\nThe printed version should be the same as in the `.ruby-version` file.\n\n### Building Logstash\n\nThe Logstash project includes the source code for all of Logstash, including the Elastic-Licensed X-Pack features and functions; to run Logstash from source using only the OSS-licensed code, export the `OSS` environment variable with a value of `true`:\n\n``` sh\nexport OSS=true\n```\n\n* To run Logstash from the repo you must first bootstrap the environment:\n\n```sh\nrake bootstrap\n```\n\n* You can then use `bin/logstash` to start Logstash, but there are no plugins installed. To install default plugins, you can run:\n\n```sh\nrake plugin:install-default\n```\n\nThis will install the 80+ default plugins which makes Logstash ready to connect to multiple data sources, perform transformations and send the results to Elasticsearch and other destinations.\n\nTo verify your environment, run the following to send your first event:\n\n```sh\nbin/logstash -e 'input { stdin { } } output { stdout {} }'\n```\n\nThis should start Logstash with stdin input waiting for you to enter an event\n\n```sh\nhello world\n2016-11-11T01:22:14.405+0000 0.0.0.0 hello world\n```\n\n**Advanced: Drip Launcher**\n\n[Drip](https://github.com/ninjudd/drip) is a tool that solves the slow JVM startup problem while developing Logstash. The drip script is intended to be a drop-in replacement for the java command. We recommend using drip during development, in particular for running tests. Using drip, the first invocation of a command will not be faster but the subsequent commands will be swift.\n\nTo tell logstash to use drip, set the environment variable `` JAVACMD=`which drip` ``.\n\nExample (but see the *Testing* section below before running rspec for the first time):\n\n    JAVACMD=`which drip` bin/rspec\n\n**Caveats**\n\nDrip does not work with STDIN. You cannot use drip for running configs which use the stdin plugin.\n\n## Building Logstash Documentation\n\nTo build the Logstash Reference (open source content only) on your local\nmachine, clone the following repos:\n\n[logstash](https://github.com/elastic/logstash) - contains main docs about core features\n\n[logstash-docs](https://github.com/elastic/logstash-docs) - contains generated plugin docs\n\n[docs](https://github.com/elastic/docs) - contains doc build files\n\nMake sure you have the same branch checked out in `logstash` and `logstash-docs`.\nCheck out `master` in the `docs` repo.\n\nRun the doc build script from within the `docs` repo. For example:\n\n```\n./build_docs.pl --doc ../logstash/docs/index.asciidoc --chunk=1 -open\n```\n\n## Testing\n\nMost of the unit tests in Logstash are written using [rspec](http://rspec.info/) for the Ruby parts. For the Java parts, we use junit. For testing you can use the *test* `rake` tasks and the `bin/rspec` command, see instructions below:\n\n### Core tests\n\n1- To run the core tests you can use the Gradle task:\n\n    ./gradlew test\n\n  or use the `rspec` tool to run all tests or run a specific test:\n\n    bin/rspec\n    bin/rspec spec/foo/bar_spec.rb\n\n  Note that before running the `rspec` command for the first time you need to set up the RSpec test dependencies by running:\n\n    ./gradlew bootstrap\n\n2- To run the subset of tests covering the Java codebase only run:\n\n    ./gradlew javaTests\n\n3- To execute the complete test-suite including the integration tests run:\n\n    ./gradlew check\n\nSometimes you might find a change to a piece of Logstash code causes a test to hang. These can be hard to debug.\n\nIf you set `LS_JAVA_OPTS=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\"` you can connect to a running Logstash with your IDEs debugger which can be a great way of finding the issue.\n\n### Plugins tests\n\nTo run the tests of all currently installed plugins:\n\n    rake test:plugin\n\nYou can install the default set of plugins included in the logstash package:\n\n    rake test:install-default\n\n---\nNote that if a plugin is installed using the plugin manager `bin/logstash-plugin install ...` do not forget to also install the plugins development dependencies using the following command after the plugin installation:\n\n    bin/logstash-plugin install --development\n\n## Building Artifacts\n\nBuilt artifacts will be placed in the `LS_HOME/build` directory, and will create the directory if it is not already present.\n\nYou can build a Logstash snapshot package as tarball or zip file\n\n```sh\n./gradlew assembleTarDistribution\n./gradlew assembleZipDistribution\n```\n\nOSS-only artifacts can similarly be built with their own gradle tasks:\n```sh\n./gradlew assembleOssTarDistribution\n./gradlew assembleOssZipDistribution\n\n```\n\nYou can also build .rpm and .deb, but the [fpm](https://github.com/jordansissel/fpm) tool is required.\n\n```sh\nrake artifact:rpm\nrake artifact:deb\n```\n\nand:\n\n```sh\nrake artifact:rpm_oss\nrake artifact:deb_oss\n```\n\n## Using a Custom JRuby Distribution\n\nIf you want the build to use a custom JRuby you can do so by setting a path to a custom \nJRuby distribution's source root via the `custom.jruby.path` Gradle property.\n\nE.g.\n\n```sh\n./gradlew clean test -Pcustom.jruby.path=\"/path/to/jruby\"\n```\n\n## Project Principles\n\n* Community: If a newbie has a bad time, it's a bug.\n* Software: Make it work, then make it right, then make it fast.\n* Technology: If it doesn't do a thing today, we can make it do it tomorrow.\n\n## Contributing\n\nAll contributions are welcome: ideas, patches, documentation, bug reports,\ncomplaints, and even something you drew up on a napkin.\n\nProgramming is not a required skill. Whatever you've seen about open source and\nmaintainers or community members  saying \"send patches or die\" - you will not\nsee that here.\n\nIt is more important to me that you are able to contribute.\n\nFor more information about contributing, see the\n[CONTRIBUTING](./CONTRIBUTING.md) file.\n"}, {"repo": "fabric/fabric", "language": "Python", "readme_contents": "Welcome to Fabric!\n==================\n\nFabric is a high level Python (2.7, 3.4+) library designed to execute shell\ncommands remotely over SSH, yielding useful Python objects in return. It builds\non top of `Invoke <http://pyinvoke.org>`_ (subprocess command execution and\ncommand-line features) and `Paramiko <http://paramiko.org>`_ (SSH protocol\nimplementation), extending their APIs to complement one another and provide\nadditional functionality.\n\nFor a high level introduction, including example code, please see\n`our main project website <http://fabfile.org>`_; or for detailed API docs, see\n`the versioned API website <http://docs.fabfile.org>`_.\n"}, {"repo": "grafana/grafana", "language": "TypeScript", "readme_contents": "![Grafana](docs/logo-horizontal.png)\n\nThe open-source platform for monitoring and observability.\n\n[![License](https://img.shields.io/github/license/grafana/grafana)](LICENSE)\n[![Circle CI](https://img.shields.io/circleci/build/gh/grafana/grafana)](https://circleci.com/gh/grafana/grafana)\n[![Go Report Card](https://goreportcard.com/badge/github.com/grafana/grafana)](https://goreportcard.com/report/github.com/grafana/grafana)\n\nGrafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored. Create, explore, and share dashboards with your team and foster a data driven culture:\n\n- **Visualize:** Fast and flexible client side graphs with a multitude of options. Panel plugins for many different way to visualize metrics and logs.\n- **Dynamic Dashboards:** Create dynamic & reusable dashboards with template variables that appear as dropdowns at the top of the dashboard.\n- **Explore Metrics:** Explore your data through ad-hoc queries and dynamic drilldown. Split view and compare different time ranges, queries and data sources side by side.\n- **Explore Logs:** Experience the magic of switching from metrics to logs with preserved label filters. Quickly search through all your logs or streaming them live.\n- **Alerting:** Visually define alert rules for your most important metrics. Grafana will continuously evaluate and send notifications to systems like Slack, PagerDuty, VictorOps, OpsGenie.\n- **Mixed Data Sources:** Mix different data sources in the same graph! You can specify a data source on a per-query basis. This works for even custom datasources.\n\n## Get started\n\n- [Get Grafana](https://grafana.com/get)\n- [Installation guides](http://docs.grafana.org/installation/)\n\nUnsure if Grafana is for you? Watch Grafana in action on [play.grafana.org](https://play.grafana.org/)!\n\n## Documentation\n\nThe Grafana documentation is available at [grafana.com/docs](https://grafana.com/docs/).\n\n## Contributing\n\nIf you're interested in contributing to the Grafana project:\n\n- Start by reading the [Contributing guide](/CONTRIBUTING.md).\n- Learn how to set up your local environment, in our [Developer guide](/contribute/developer-guide.md).\n- Explore our [beginner-friendly issues](https://github.com/grafana/grafana/issues?q=is%3Aopen+is%3Aissue+label%3A%22beginner+friendly%22).\n\n## Get involved\n\n- Follow [@grafana on Twitter](https://twitter.com/grafana/)\n- Read and subscribe to the [Grafana blog](https://grafana.com/blog/)\n- If you have a specific question, check out our [discussion forums](https://community.grafana.com/).\n- For general discussions, join us on the [official Slack](http://slack.raintank.io/) team.\n\n## License\n\nGrafana is distributed under the [Apache 2.0 License](https://github.com/grafana/grafana/blob/master/LICENSE).\n"}, {"repo": "StackStorm/st2", "language": "Python", "readme_contents": "[![StackStorm](https://github.com/stackstorm/st2/raw/master/stackstorm_logo.png)](https://www.stackstorm.com)\n\n**StackStorm** is a platform for integration and automation across services and tools, taking actions in response to events. Learn more at [www.stackstorm.com](http://www.stackstorm.com/product).\n\n[![Tests Build Status](https://travis-ci.org/StackStorm/st2.svg?branch=master)](https://travis-ci.org/StackStorm/st2) [![Packages Build Status](https://circleci.com/gh/StackStorm/st2/tree/master.svg?style=shield)](https://circleci.com/gh/StackStorm/st2) [![Codecov](https://codecov.io/github/StackStorm/st2/badge.svg?branch=master&service=github)](https://codecov.io/github/StackStorm/st2?branch=master) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/StackStorm/st2/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/StackStorm/st2/?branch=master) ![Python 2.7](https://img.shields.io/badge/python-2.7-blue.svg) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1833/badge)](https://bestpractices.coreinfrastructure.org/projects/1833) [![Join our community Slack](https://stackstorm-community.herokuapp.com/badge.svg)](https://stackstorm.com/community-signup) [![Forum](https://img.shields.io/discourse/https/forum.stackstorm.com/posts.svg)](https://forum.stackstorm.com/)\n\n---\n\n## TL;DR\n\n* Install Get yourself a clean 64-bit Linux box that fits the [system requirements](https://docs.stackstorm.com/install/system_requirements.html). Run the installer script:\n\n   ```bash\n   curl -sSL https://stackstorm.com/packages/install.sh | bash -s -- --user=st2admin --password=Ch@ngeMe\n   ```\n* Read the docs: [https://docs.stackstorm.com/index.html](https://docs.stackstorm.com/install/index.html)\n* Questions? Check out [forum.stackstorm.com](https://forum.stackstorm.com/)\n* Or join our [Slack community](https://stackstorm.com/community-signup)\n\n## StackStorm Overview\n\n[![StackStorm 5 min Intro Video](https://cloud.githubusercontent.com/assets/1294734/10356016/16278d0a-6d27-11e5-987d-c8a7629a69ed.png)](https://www.youtube.com/watch?v=pzZws3ftDtA)\n\n### About\n\nStackStorm is a platform for integration and automation across services and tools. It ties together your existing infrastructure and application environment so you can more easily automate that environment -- with a particular focus on taking actions in response to events.\n\nStackStorm helps automate common operational patterns. Some examples are:\n\n* **Facilitated Troubleshooting** - triggering on system failures captured by Nagios, Sensu, New Relic and other monitoring, running a series of diagnostic checks on physical nodes, OpenStack or Amazon instances, and application components, and posting results to a shared communication context, like HipChat or JIRA.\n* **Automated remediation** - identifying and verifying hardware failure on OpenStack compute node, properly evacuating instances and emailing VM about potential downtime, but if anything goes wrong - freezing the workflow and calling PagerDuty to wake up a human.\n* **Continuous deployment** - build and test with Jenkins, provision a new AWS cluster, turn on some traffic with the load balancer, and roll-forth or roll-back based on NewRelic app performance data.\n\nStackStorm helps you compose these and other operational patterns as rules and workflows or actions; and these rules and workflows - the content within the StackStorm platform - are stored *as code* which means they support the same approach to collaboration that you use today for code development and can be shared with the broader open source community via StackStorm.com/community for example.\n\n### Who is using StackStorm?\n\nSee the list of known StackStorm [ADOPTERS.md](/ADOPTERS.md) and [Thought Leaders](https://stackstorm.com/stackstorm-thought-leaders/).\n\n### How it works\n\n![stackstorm component diagram](https://cloud.githubusercontent.com/assets/20028/5688946/fabef9ec-9822-11e4-859e-29bbb67df85b.jpg)\n\n    StackStorm architecture diagram\n\nStackStorm plugs into the environment via the extensible set of adapters: sensors and actions.\n\n* **Sensors** are python plugins for inbound integration that watch for events from external systems and fire a StackStorm trigger when an event happens.\n\n* **Triggers** are StackStorm representations of external events. There are generic triggers (e.g. timers, webhooks) and integration triggers (e.g. Sensu alert, JIRA issue updated). A new trigger type can be defined by writing a sensor plugin.\n\n* **Actions** are StackStorm outbound integrations. There are generic actions (ssh, REST call), integrations (OpenStack, Docker, Puppet), or custom actions. Actions are either python plugins, or any scripts, consumed into StackStorm by adding a few lines of metadata. Actions can be invoked directly by user via CLI or API, or used and called as part of  automations - rules and workflows.\n\n* **Rules** map triggers to actions (or to workflows), applying matching criterias and mapping trigger payload to action inputs.\n\n* **Workflows** stitch actions together into \u201cuber-actions\u201d, defining the order, transition conditions, and passing the data. Most automations are more than one-step and thus need more than one action. Workflows, just like \u201catomic\u201d actions, are available in action library, can be invoked manually or triggered by rules.\n\n* **Packs** are the units of content deployment. They simplify the management and sharing of StackStorm pluggable content by grouping integrations (triggers and actions) and automations (rules and workflows). A growing number of packs is available on StackStorm community. User can create their own packs,  share them on Github, or submit to StackStorm community repo.\n\n* **Audit trail** of action executions, manual or automated, is recorded and stored with full details of triggering context and execution results. It is is also captured in audit logs for integrating with external logging and analytical tools: LogStash, Splunk, statsd, syslog.\n\nStackStorm is a service with modular architecture. It comprises loosely coupled  service components that communicate over the message bus, and scales horizontally to deliver automation at scale. StackStorm has a full REST API, CLI client for admins and users to operate it locally or remotely, and Python client bindings for developer\u2019s convenience. Web UI is coming soon.\n\nStackStorm is new and under active development. We are opening it early to engage community, get feedback, and refine directions, and welcome contributions.\n\n## Documentation\n\nAdditional documentation describing installation proceduces, action/rule/workflow authoring, and how to setup and use triggers/sensors can be found at [StackStorm Docs](https://docs.stackstorm.com).\n\n## Hacking / Contributing\n\nTo set up dev environment and run StackStorm from sources, follow [these instructions](https://docs.stackstorm.com/development/sources.html).\n\nFor information on how to contribute, style guide, coding conventions and more,\nplease visit the [Development section](https://docs.stackstorm.com/development/index.html)\nin our documentation.\n\n## Security\n\nIf you believe you found a security issue or a vulnerability, please send a description of it to\nour private mailing list at info [at] stackstorm [dot] com.\n\nOnce you've submitted an issue, you should receive an acknowledgment from one our of team members\nin 48 hours or less. If further action is necessary, you may receive additional follow-up emails.\n\nFor more information, please refer to https://docs.stackstorm.com/latest/security.html\n\n## Copyright, License, and Contributors Agreement\n\nCopyright 2014-2018 StackStorm, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in compliance with the License. You may obtain a copy of the License in the [LICENSE](LICENSE) file, or at:\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nBy contributing you agree that these contributions are your own (or approved by your employer) and you grant a full, complete, irrevocable copyright license to all users and developers of the project, present and future, pursuant to the license of the project.\n"}, {"repo": "openshift/origin", "language": "Go", "readme_contents": "Origin Kubernetes\n=================\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/openshift/origin)](https://goreportcard.com/report/github.com/openshift/origin)\n[![GoDoc](https://godoc.org/github.com/openshift/origin?status.png)](https://godoc.org/github.com/openshift/origin)\n[![Licensed under Apache License version 2.0](https://img.shields.io/github/license/openshift/origin.svg?maxAge=2592000)](https://www.apache.org/licenses/LICENSE-2.0)\n\nThis is the core Kubernetes tracking repo for OKD. For more about OKD, see https://github.com/openshift/okd.\n\n\nContributing\n------------\n\nAll contributions are welcome - OKD uses the Apache 2 license and does not require any contributor agreement to submit patches.  Please open issues for any bugs or problems you encounter, ask questions on the OpenShift IRC channel (#openshift-dev on freenode), or get involved in the [Kubernetes project](https://github.com/kubernetes/kubernetes) at the container runtime layer.\n\nSee [HACKING.md](https://github.com/openshift/origin/blob/master/HACKING.md) for more details on developing on Origin including how different tests are setup.\n\n\nSecurity Response\n-----------------\nIf you've found a security issue that you'd like to disclose confidentially\nplease contact Red Hat's Product Security team. Details at\nhttps://access.redhat.com/security/team/contact\n\n\nLicense\n-------\n\nOKD is licensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/).\n"}, {"repo": "getsentry/sentry", "language": "Python", "readme_contents": ".. raw:: html\n\n   <p align=\"center\">\n     <p align=\"center\">\n       <a href=\"https://sentry.io/?utm_source=github&utm_medium=logo\" target=\"_blank\">\n         <img src=\"https://sentry-brand.storage.googleapis.com/sentry-logo-black.png\" alt=\"Sentry\" height=\"72\">\n       </a>\n     </p>\n     <p align=\"center\">\n       Users and logs provide clues. Sentry provides answers.\n     </p>\n   </p>\n\nWhat's Sentry?\n--------------\n\nSentry fundamentally is a service that helps you monitor and fix crashes in realtime.\nThe server is in Python, but it contains a full API for sending events from any\nlanguage, in any application.\n\n.. raw:: html\n\n   <p align=\"center\">\n     <img src=\"https://github.com/getsentry/sentry/raw/master/src/sentry/static/sentry/images/product/thumb-1.png\" width=\"290\">\n     <img src=\"https://github.com/getsentry/sentry/raw/master/src/sentry/static/sentry/images/product/thumb-2.png\" width=\"290\">\n     <img src=\"https://github.com/getsentry/sentry/raw/master/src/sentry/static/sentry/images/product/thumb-3.png\" width=\"290\">\n   </p>\n\nOfficial Sentry SDKs\n~~~~~~~~~~~~~~~~~~~~\n* `JavaScript <https://github.com/getsentry/sentry-javascript>`_\n* `React-Native <https://github.com/getsentry/react-native-sentry>`_\n* `Python <https://github.com/getsentry/sentry-python>`_\n* `Ruby <https://github.com/getsentry/raven-ruby>`_\n* `PHP <https://github.com/getsentry/sentry-php>`_\n* `Go <https://github.com/getsentry/sentry-go>`_\n* `Java <https://github.com/getsentry/sentry-java>`_\n* `Objective-C/Swift <https://github.com/getsentry/sentry-cocoa>`_\n* `C# <https://github.com/getsentry/sentry-dotnet>`_\n* `Perl <https://github.com/getsentry/perl-raven>`_\n* `Elixir <https://github.com/getsentry/sentry-elixir>`_\n* `Laravel <https://github.com/getsentry/sentry-laravel>`_\n\nResources\n---------\n\n* `Documentation <https://docs.sentry.io/>`_\n* `Community <https://forum.sentry.io/>`_ (Bugs, feature requests, general questions)\n* `Contributing <https://docs.sentry.io/internal/contributing/>`_\n* `Bug Tracker <https://github.com/getsentry/sentry/issues>`_\n* `Code <https://github.com/getsentry/sentry>`_\n* `Discord <https://discord.gg/ez5KZN7>`_\n* `Transifex <https://www.transifex.com/getsentry/sentry/>`_ (Translate Sentry!)\n"}, {"repo": "deployphp/deployer", "language": "PHP", "readme_contents": "# Deployer\n\n<a href=\"https://travis-ci.org/deployphp/deployer\"><img src=\"https://travis-ci.org/deployphp/deployer.svg?branch=master\" alt=\"Build Status\"></a>\n<a href=\"https://scrutinizer-ci.com/g/deployphp/deployer/\"><img src=\"https://img.shields.io/scrutinizer/g/deployphp/deployer.svg?style=flat\" alt=\"Code Quality\"></a>\n<a href=\"https://scrutinizer-ci.com/g/deployphp/deployer/code-structure/master/code-coverage\"><img src=\"https://img.shields.io/scrutinizer/coverage/g/deployphp/deployer/master.svg?style=flat\" alt=\"Code Quality\"></a>\n<a href=\"https://packagist.org/packages/deployer/deployer\"><img src=\"https://img.shields.io/packagist/dt/deployer/deployer.svg\" alt=\"Total Downloads\"></a>\n<a href=\"https://packagist.org/packages/deployer/deployer\"><img src=\"https://img.shields.io/packagist/v/deployer/deployer.svg?style=flat\" alt=\"Latest Stable Version\"></a>\n<a href=\"https://packagist.org/packages/deployer/deployer\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat\" alt=\"License\"></a>\n\nA deployment tool written in PHP with support for popular frameworks out of the box\n\n<a href=\"https://www.patreon.com/deployer\"><img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\"></a>\n\nSee [deployer.org](https://deployer.org) for more information and documentation.\n\n## Features\n\n* **Simple** setup process and a minimal learning curve\n* Ready to use recipes for **most frameworks**\n* **Parallel** execution without extensions\n* Something went wrong? **Rollback** to the previous release\n* **Agentless**, it's just SSH\n* **Zero downtime** deployments\n\n## Contributing\n\nRead the [contributing](https://github.com/deployphp/deployer/blob/master/.github/CONTRIBUTING.md) guide, join the [discussions](https://deployer.org/discuss), take a look on open [issues](https://github.com/deployphp/deployer/issues)\n\n[![good+for+beginner](https://img.shields.io/badge/feature-good%20for%20beginner-1d76db.svg)](https://github.com/deployphp/deployer/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+for+beginner%22)\n[![advanced+level](https://img.shields.io/badge/feature-advanced%20level-5319e7.svg)](https://github.com/deployphp/deployer/issues?q=is%3Aissue+is%3Aopen+label%3A%22advanced+level%22)\n\n## Maintainers\n* Anton Medvedev [@antonmedv](https://github.com/antonmedv)\n\nSee also the list of [contributors](https://github.com/deployphp/deployer/graphs/contributors) who participated in this project.\n\n## Sponsorship\n\nDevelopment of the **Deployer** generously supported by contributions from individuals and corporations. If you are benefiting from **Deployer** and would like to help keep the project financially sustainable, please visit Anton Medvedev's [Patreon page](https://www.patreon.com/deployer) or contact him [via email](mailto:anton@medv.io)\n\n### Top Supporters\n\n* Daniel Knoch from [cariba.de](https://cariba.de)\n\nSee a full [list of sponsors](https://github.com/deployphp/deployer/blob/master/SPONSORS.md).\n\n## License\nLicensed under the [MIT license](https://github.com/deployphp/deployer/blob/master/LICENSE).\n"}, {"repo": "kubernetes/kubernetes", "language": "Go", "readme_contents": "# Kubernetes\n\n[![GoDoc Widget]][GoDoc] [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/569/badge)](https://bestpractices.coreinfrastructure.org/projects/569)\n\n<img src=\"https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png\" width=\"100\">\n\n----\n\nKubernetes is an open source system for managing [containerized applications]\nacross multiple hosts. It provides basic mechanisms for deployment, maintenance,\nand scaling of applications.\n\nKubernetes builds upon a decade and a half of experience at Google running\nproduction workloads at scale using a system called [Borg],\ncombined with best-of-breed ideas and practices from the community.\n\nKubernetes is hosted by the Cloud Native Computing Foundation ([CNCF]).\nIf your company wants to help shape the evolution of\ntechnologies that are container-packaged, dynamically scheduled,\nand microservices-oriented, consider joining the CNCF.\nFor details about who's involved and how Kubernetes plays a role,\nread the CNCF [announcement].\n\n----\n\n## To start using Kubernetes\n\nSee our documentation on [kubernetes.io].\n\nTry our [interactive tutorial].\n\nTake a free course on [Scalable Microservices with Kubernetes].\n\nTo use Kubernetes code as a library in other applications, see the [list of published components](https://git.k8s.io/kubernetes/staging/README.md).\nUse of the `k8s.io/kubernetes` module or `k8s.io/kubernetes/...` packages as libraries is not supported.\n\n## To start developing Kubernetes\n\nThe [community repository] hosts all information about\nbuilding Kubernetes from source, how to contribute code\nand documentation, who to contact about what, etc.\n\nIf you want to build Kubernetes right away there are two options:\n\n##### You have a working [Go environment].\n\n```\nmkdir -p $GOPATH/src/k8s.io\ncd $GOPATH/src/k8s.io\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake\n```\n\n##### You have a working [Docker environment].\n\n```\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake quick-release\n```\n\nFor the full story, head over to the [developer's documentation].\n\n## Support\n\nIf you need support, start with the [troubleshooting guide],\nand work your way through the process that we've outlined.\n\nThat said, if you have questions, reach out to us\n[one way or another][communication].\n\n[announcement]: https://cncf.io/news/announcement/2015/07/new-cloud-native-computing-foundation-drive-alignment-among-container\n[Borg]: https://research.google.com/pubs/pub43438.html\n[CNCF]: https://www.cncf.io/about\n[communication]: https://git.k8s.io/community/communication\n[community repository]: https://git.k8s.io/community\n[containerized applications]: https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/\n[developer's documentation]: https://git.k8s.io/community/contributors/devel#readme\n[Docker environment]: https://docs.docker.com/engine\n[Go environment]: https://golang.org/doc/install\n[GoDoc]: https://godoc.org/k8s.io/kubernetes\n[GoDoc Widget]: https://godoc.org/k8s.io/kubernetes?status.svg\n[interactive tutorial]: https://kubernetes.io/docs/tutorials/kubernetes-basics\n[kubernetes.io]: https://kubernetes.io\n[Scalable Microservices with Kubernetes]: https://www.udacity.com/course/scalable-microservices-with-kubernetes--ud615\n[troubleshooting guide]: https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/\n\n[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/README.md?pixel)]()\n"}, {"repo": "netdata/netdata", "language": "C", "readme_contents": "# Netdata [![Build Status](https://travis-ci.com/netdata/netdata.svg?branch=master)](https://travis-ci.com/netdata/netdata) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2231/badge)](https://bestpractices.coreinfrastructure.org/projects/2231) [![License: GPL v3+](https://img.shields.io/badge/License-GPL%20v3%2B-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) [![analytics](https://www.google-analytics.com/collect?v=1&aip=1&t=pageview&_s=1&ds=github&dr=https%3A%2F%2Fgithub.com%2Fnetdata%2Fnetdata&dl=https%3A%2F%2Fmy-netdata.io%2Fgithub%2Freadme&_u=MAC~&cid=5792dfd7-8dc4-476b-af31-da2fdb9f93d2&tid=UA-64295674-3)](<>)\n\n[![Code Climate](https://codeclimate.com/github/netdata/netdata/badges/gpa.svg)](https://codeclimate.com/github/netdata/netdata) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/a994873f30d045b9b4b83606c3eb3498)](https://www.codacy.com/app/netdata/netdata?utm_source=github.com&utm_medium=referral&utm_content=netdata/netdata&utm_campaign=Badge_Grade) [![LGTM C](https://img.shields.io/lgtm/grade/cpp/g/netdata/netdata.svg?logo=lgtm)](https://lgtm.com/projects/g/netdata/netdata/context:cpp) [![LGTM JS](https://img.shields.io/lgtm/grade/javascript/g/netdata/netdata.svg?logo=lgtm)](https://lgtm.com/projects/g/netdata/netdata/context:javascript) [![LGTM PYTHON](https://img.shields.io/lgtm/grade/python/g/netdata/netdata.svg?logo=lgtm)](https://lgtm.com/projects/g/netdata/netdata/context:python)\n\n---\n\n**Netdata** is **distributed, real-time, performance and health monitoring for systems and applications**. It is a highly optimized monitoring agent you install on all your systems and containers.\n\nNetdata provides **unparalleled insights**, **in real-time**, of everything happening on the systems it runs (including web servers, databases, applications), using **highly interactive web dashboards**. It can run autonomously, without any third party components, or it can be integrated to existing monitoring tool chains (Prometheus, Graphite, OpenTSDB, Kafka, Grafana, etc).\n\n*Netdata is **fast** and **efficient**, designed to permanently run on all systems (**physical** & **virtual** servers, **containers**, **IoT** devices), without disrupting their core function.*\n\nNetdata is **free, open-source software** and it currently runs on **Linux**, **FreeBSD**, and **MacOS**.\n\nNetdata is not hosted by the CNCF but is the 3rd most starred open-source project in the [Cloud Native Computing Foundation (CNCF) landscape](https://landscape.cncf.io/format=card-mode&grouping=no&sort=stars).\n\n---\n\nPeople get **addicted to Netdata**.<br/>\nOnce you use it on your systems, **there is no going back**! *You have been warned...*\n\n![image](https://user-images.githubusercontent.com/2662304/48305662-9de82980-e537-11e8-9f5b-aa1a60fbb82f.png)\n\n[![Tweet about Netdata!](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Tweet%20about%20netdata)](https://twitter.com/intent/tweet?text=Netdata,%20real-time%20performance%20and%20health%20monitoring,%20done%20right!&url=https://my-netdata.io/&via=linuxnetdata&hashtags=netdata,monitoring)\n\n## Contents\n\n1.  [How it looks](#how-it-looks) - have a quick look at it\n2.  [User base](#user-base) - who uses Netdata?\n3.  [Quick Start](#quick-start) - try it now on your systems\n4.  [Why Netdata](#why-netdata) - why people love Netdata, how it compares with other solutions\n5.  [News](#news) - latest news about Netdata\n6.  [How it works](#how-it-works) - high level diagram of how Netdata works\n7.  [infographic](#infographic) - everything about Netdata, in a page\n8.  [Features](#features) - what features does it have\n9.  [Visualization](#visualization) - unique visualization features\n10. [What does it monitor](#what-does-it-monitor) - which metrics it collects\n11. [Documentation](#documentation) - read the docs\n12. [Community](#community) - discuss with others and get support\n13. [License](#license) - check the license of Netdata\n14. [Is it any good?](#is-it-any-good) - Yes\n15. [Is it awesome?](#is-it-awesome) - Yes\n\n## How it looks\n\nThe following animated image, shows the top part of a typical Netdata dashboard.\n\n![peek 2018-11-11 02-40](https://user-images.githubusercontent.com/2662304/48307727-9175c800-e55b-11e8-92d8-a581d60a4889.gif)\n\n*A typical Netdata dashboard, in 1:1 timing. Charts can be panned by dragging them, zoomed in/out with `SHIFT` + `mouse wheel`, an area can be selected for zoom-in with `SHIFT` + `mouse selection`. Netdata is highly interactive and **real-time**, optimized to get the work done!*\n\n> *We have a few online demos to experience it live: [https://www.netdata.cloud](https://www.netdata.cloud/#live-demo)*\n\n## User base\n\nNetdata is used by hundreds of thousands of users all over the world.\nCheck our [GitHub watchers list](https://github.com/netdata/netdata/watchers).\nYou will find people working for **Amazon**, **Atos**, **Baidu**, **Cisco Systems**, **Citrix**, **Deutsche Telekom**, **DigitalOcean**,\n**Elastic**, **EPAM Systems**, **Ericsson**, **Google**, **Groupon**, **Hortonworks**, **HP**, **Huawei**,\n**IBM**, **Microsoft**, **NewRelic**, **Nvidia**, **Red Hat**, **SAP**, **Selectel**, **TicketMaster**,\n**Vimeo**, and many more!\n\n### Docker pulls\n\nWe provide docker images for the most common architectures. These are statistics reported by docker hub:\n\n[![netdata/netdata (official)](https://img.shields.io/docker/pulls/netdata/netdata.svg?label=netdata/netdata+%28official%29)](https://hub.docker.com/r/netdata/netdata/) [![firehol/netdata (deprecated)](https://img.shields.io/docker/pulls/firehol/netdata.svg?label=firehol/netdata+%28deprecated%29)](https://hub.docker.com/r/firehol/netdata/) [![titpetric/netdata (donated)](https://img.shields.io/docker/pulls/titpetric/netdata.svg?label=titpetric/netdata+%28third+party%29)](https://hub.docker.com/r/titpetric/netdata/)\n\n### Registry\n\nWhen you install multiple Netdata, they are integrated into **one distributed application**, via a [Netdata registry](registry/#registry). This is a web browser feature and it allows us to count the number of unique users and unique Netdata servers installed. The following information comes from the global public Netdata registry we run:\n\n[![User Base](https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=persons&label=user%20base&units=M&value_color=blue&precision=2&divide=1000000&v43)](https://registry.my-netdata.io/#menu_netdata_submenu_registry) [![Monitored Servers](https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=machines&label=servers%20monitored&units=k&divide=1000&value_color=orange&precision=2&v43)](https://registry.my-netdata.io/#menu_netdata_submenu_registry) [![Sessions Served](https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&label=sessions%20served&units=M&value_color=yellowgreen&precision=2&divide=1000000&v43)](https://registry.my-netdata.io/#menu_netdata_submenu_registry)\n\n*in the last 24 hours:*<br/> [![New Users Today](https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=persons&after=-86400&options=unaligned&group=incremental-sum&label=new%20users%20today&units=null&value_color=blue&precision=0&v42)](https://registry.my-netdata.io/#menu_netdata_submenu_registry) [![New Machines Today](https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=machines&group=incremental-sum&after=-86400&options=unaligned&label=servers%20added%20today&units=null&value_color=orange&precision=0&v42)](https://registry.my-netdata.io/#menu_netdata_submenu_registry) [![Sessions Today](https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&after=-86400&group=incremental-sum&options=unaligned&label=sessions%20served%20today&units=null&value_color=yellowgreen&precision=0&v42)](https://registry.my-netdata.io/#menu_netdata_submenu_registry)\n\n## Quick Start\n\n![](https://registry.my-netdata.io/api/v1/badge.svg?chart=web_log_nginx.requests_per_url&options=unaligned&dimensions=kickstart&group=sum&after=-3600&label=last+hour&units=installations&value_color=orange&precision=0) ![](https://registry.my-netdata.io/api/v1/badge.svg?chart=web_log_nginx.requests_per_url&options=unaligned&dimensions=kickstart&group=sum&after=-86400&label=today&units=installations&precision=0)\n\nTo install Netdata from source on any Linux system (physical, virtual, container, IoT, edge) and keep it up to date with our **nightly releases** automatically, run the following:\n\n```bash\n# make sure you run `bash` for your shell\nbash\n\n# install Netdata directly from GitHub source\nbash <(curl -Ss https://my-netdata.io/kickstart.sh)\n```\n\nTo learn more about the pros and cons of using *nightly* vs. *stable* releases, see our [notice about the two options](packaging/installer/README.md#nightly-vs-stable-releases).\n\nThe above command will:\n\n-   Install any required packages on your system (it will ask you to confirm before doing so)\n-   Compile it, install it, and start it.\n\nMore installation methods and additional options can be found at the [installation page](packaging/installer/#installation).\n\nTo try Netdata in a docker container, run this:\n\n```sh\ndocker run -d --name=netdata \\\n  -p 19999:19999 \\\n  -v /etc/passwd:/host/etc/passwd:ro \\\n  -v /etc/group:/host/etc/group:ro \\\n  -v /proc:/host/proc:ro \\\n  -v /sys:/host/sys:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  --cap-add SYS_PTRACE \\\n  --security-opt apparmor=unconfined \\\n  netdata/netdata\n```\n\nFor more information about running Netdata in docker, check the [docker installation page](packaging/docker/).\n\n![image](https://user-images.githubusercontent.com/2662304/48304090-fd384080-e51b-11e8-80ae-eecb03118dda.png)\n\nFrom Netdata v1.12 and above, anonymous usage information is collected by default and sent to Google Analytics. To read more about the information collected and how to opt-out, check the [anonymous statistics page](docs/anonymous-statistics.md).\n\n## Why Netdata\n\nNetdata has a quite different approach to monitoring.\n\nNetdata is a monitoring agent you install on all your systems. It is:\n\n-   a **metrics collector** - for system and application metrics (including web servers, databases, containers, etc)\n-   a **time-series database** - all stored in memory (does not touch the disks while it runs)\n-   a **metrics visualizer** - super fast, interactive, modern, optimized for anomaly detection\n-   an **alarms notification engine** - an advanced watchdog for detecting performance and availability issues\n\nAll the above, are packaged together in a very flexible, extremely modular, distributed application.\n\nThis is how Netdata compares to other monitoring solutions:\n\n|Netdata|others (open-source and commercial)|\n|:-----:|:---------------------------------:|\n|**High resolution metrics** (1s granularity)|Low resolution metrics (10s granularity at best)|\n|Monitors everything, **thousands of metrics per node**|Monitor just a few metrics|\n|UI is super fast, optimized for **anomaly detection**|UI is good for just an abstract view|\n|**Meaningful presentation**, to help you understand the metrics|You have to know the metrics before you start|\n|Install and get results **immediately**|Long preparation is required to get any useful results|\n|Use it for **troubleshooting** performance problems|Use them to get *statistics of past performance*|\n|**Kills the console** for tracing performance issues|The console is always required for troubleshooting|\n|Requires **zero dedicated resources**|Require large dedicated resources|\n\nNetdata is **open-source**, **free**, super **fast**, very **easy**, completely **open**, extremely **efficient**,\n**flexible** and integrate-able.\n\nIt has been designed by **SysAdmins**, **DevOps** and **Developers** for troubleshooting performance problems,\nnot just visualize metrics.\n\n## News\n\n`Nov 27th, 2019` - **[Netdata v1.19.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.19.0 contains 2 new collectors, 19 bug fixes, 17 improvements, and 19 documentation updates.\n\nWe completed a major rewrite of our **web log collector** to dramatically improve its flexibility and performance. The [new collector](https://github.com/netdata/go.d.plugin/pull/141), written entirely in Go, can parse and chart logs from Nginx and Apache servers, and combines numerous improvements. Netdata now supports the LTSV log format, creates charts for TLS and cipher usage, and is amazingly fast. In a test using SSD storage, the collector parsed the logs for 200,000 requests in about 200ms, using 30% of a single core.\n\nThis Go-based collector also has powerful custom log parsing capabilities, which means we're one step closer to a generic application log parser for Netdata. We're continuing to work on this parser to support more application log formatting in the future.\n\nWe have a new tutorial on [enabling the Go web log collector](https://docs.netdata.cloud/docs/tutorials/collect-apache-nginx-web-logs/) and using it with Nginx and/or Apache access logs with minimal configuration. Thanks to [Wing924](https://github.com/Wing924) for starting the Go rewrite!\n\nWe introduced more **cmocka unit testing** to Netdata. In this release, we're testing how Netdata's internal web server processes HTTP requests\u2014the first step to improve the quality of code throughout, reduce bugs, and make refactoring easier. We wanted to validate the web server's behavior but needed to build a layer of parametric testing on top of the CMocka test runner. Read all about our process of testing and selecting cmocka on our blog post: [Building an agile team's 'safety harness' with cmocka and FOSS](https://blog.netdata.cloud/agile-team-cmocka-foss/).\n\nNetdata's **Unbound collector** was also [completely rewritten in Go](https://github.com/netdata/go.d.plugin/pull/287) to improve how it collects and displays metrics. This new version can get dozens of metrics, including details on queries, cache, uptime, and even show per-thread metrics. See our [tutorial](https://docs.netdata.cloud/docs/tutorials/collect-unbound-metrics/) on enabling the new collector via Netdata's amazing auto-detection feature.\n\nWe [fixed an error](https://github.com/netdata/netdata/pull/7220) where **invalid spikes** appeared on certain charts by improving the incremental counter reset/wraparound detection algorithm.\n\nNetdata can now send [**health alarm notifications to IRC channels**](https://docs.netdata.cloud/health/notifications/irc/) thanks to [Strykar](https://github.com/Strykar)!\n\nAnd, Netdata can now monitor [**AM2320 sensors**](https://docs.netdata.cloud/collectors/python.d.plugin/am2320/), thanks to hard work from [Tom Buck](https://github.com/tommybuck).\n\n---\n\n`Oct 18th, 2019` - **[Netdata v1.18.1 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.18.1 contains 17 bug fixes, 5 improvements, and 5 documentation updates.\n\nThe patch has several bug fixes, mainly related to FreeBSD and the binary package generation process. \n\nNetdata can now [send notifications to Google Hangouts Chat](https://docs.netdata.cloud/health/notifications/hangouts/)! \n\nOn certain systems, the `slabinfo` plugin introduced in v1.18.0 added thousands of new metrics. We decided the collector's usefulness to most users didn't justify the increase in resource requirements. This release disables the collector by default.\n\nFinally, we added a chart under **Netdata Monitoring** to present a better view of the RAM used by the [database engine (dbengine)](https://docs.netdata.cloud/database/engine/). The chart doesn't currently take into consideration the RAM used for slave nodes, so we intend to add more related charts in the future.\n\n---\n\n`Oct 10th, 2019` - **[Netdata v1.18.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.18.0 contains 5 new collectors, 16 bug fixes, 27 improvements, and 20 documentation updates.\n\nThe **database engine** is now the default method of storing metrics in Netdata. You immediately get more efficient and configurable long-term metrics storage without any work on your part. By saving recent metrics in RAM and \"spilling\" historical metrics to disk for long-term storage, the database engine is laying the foundation for many more improvements to distributed metrics.\n\nWe even have a [tutorial](https://docs.netdata.cloud/docs/tutorials/longer-metrics-storage/) on switching to the database engine and getting the most from it. Or, just read up on [how performant](https://docs.netdata.cloud/database/engine/#evaluation) the database engine really is.\n\nBoth our `python.d` and `go.d` plugins now have more **intelligent auto-detection** by periodically dump a list of active modules to disk. When Netdata starts, such as after a reboot, the plugins use this list of known services to re-establish metrics collection much more reliably. No more worrying if the service or application you need to monitor starts up minutes after Netdata.\n\nTwo of our new collectors will help those with Hadoop big data infrastructures. The **HDFS and Zookeeper collection modules** come with essential alarms requested by our community and Netdata's auto-detection capabilities to keep the required configuration to an absolute minimum. Read up on the process via our [HDFS and Zookeeper tutorial](https://docs.netdata.cloud/docs/tutorials/monitor-hadoop-cluster/).\n\nSpeaking of new collectors\u2014we also added the ability to collect metrics from SLAB cache, Gearman, and vCenter Server Appliances.\n\nBefore v1.18, if you wanted to create alarms for each dimension in a single chart, you need to write separate entities for each dimension\u2014not very efficient or user-friendly. New **dimension templates** fix that hassle. Now, a single entity can automatically generate alarms for any number of dimensions in a chart, even those you weren't aware of! Our [tutorial on dimension templates](https://docs.netdata.cloud/docs/tutorials/dimension-templates/) has all the details.\n\nv1.18 brings support for installing Netdata on offline or air-gapped systems. To help users comply with strict security policies, our installation scripts can now install Netdata using previously-downloaded tarball and checksums instead of downloading them at runtime. We have guides for installing offline via `kickstart.sh` or `kickstart-static64.sh` in our [installation documentation](https://docs.netdata.cloud/packaging/installer/#offline-installations). We're excited to bring real-time monitoring to once-inaccessible systems!\n\n---\n\n`Sep 12th, 2019` - **[Netdata v1.17.1 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.17.1 contains 2 bug fixes, 6 improvements, and 2 documentation updates.\n\nThe main reason for the patch release is an essential fix to the repeating alarm notifications we introduced in v1.17.0. If you enabled repeating notifications, Netdata would not then send CLEAR notifications for the selected alarms.\n\nThe release also includes a significant improvement to Netdata's auto-detection capabilities, especially after a system restart. Netdata now remembers which `python.d` plugin jobs were successfully collecting data the last time it was running, and retries to run those jobs for 5 minutes before giving up. As a result, you no longer have to worry if your system starts Netdata before the monitored services have had a chance to start properly. We will complete the same improvement for `go.d` plugins in v1.18.0.\n\nWe also made some improvements to our binary packages and added a [neat sample custom dashboard](https://docs.netdata.cloud/web/gui/custom/#dash-multi-host-dashboard) that can show charts from multiple Netdata agents. \n\n---\n\n`Sep 3rd, 2019` - **[Netdata v1.17.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.17.0 contains 38 bug fixes, 33 improvements, and 20 documentation updates.\n\nYou can now change the data collection frequency at will, without losing previously collected values. A major improvement to the new database engine allows you not only to store metrics at variable granularity, but also to autoscale the time axis of the charts, depending on the data collection frequencies used during the presented time.\n\nYou can also now monitor VM performance from one or more vCenter servers with a new [VSphere collector](https://docs.netdata.cloud/collectors/go.d.plugin/modules/vsphere/). In addition, the `proc` plugin now also collects ZRAM device performance metrics and the `apps` plugin monitors process uptime for the defined process groups.\n\nContinuing our efforts to integrate with as many existing solutions as possible, you can now directly archive metrics from Netdata to MongoDB via a new backend.\n\nNetdata badges now support international (UTF8) characters! We also made our URL parser smarter, not only for international character support, but also for other strange API queries.\n\nWe also added `.DEB` packages to our binary distribution repositories at [Packagecloud](https://packagecloud.io/netdata), a new collector for Linux zram device metrics, and support for plain text email notifications.\n\nThis release includes several fixes and improvements to the TLS encryption feature we introduced in v1.16.0. First, encryption slave-to-master streaming connections wasn't working as intended. And second, our community helped us discover cases where HTTP requests were not correctly redirected to HTTPS with TLS enabled. This release mitigates those issues and improves TLS support overall.\n\nFinally, we improved the way Netdata displays charts with no metrics. By default, Netdata displays charts for disks, memory, and networks only when the associated metrics are not zero. Users could enable these charts permanently using the corresponding configuration options, but they would need to change more than 200 options. With this new improvement, users can enable all charts with zero values using a single, global configuration parameter.\n\n---\n\n`Jul 9th, 2019` - **[Netdata v1.16.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.16.0 contains 40 bug fixes, 31 improvements and 20 documentation updates\n\n**Binary distributions.** To improve the security, speed and reliability of new Netdata installations, we are delivering our own, industry standard installation method, with binary package distributions. The RPM binaries for the most common OSs are already available on packagecloud and we\u2019ll have the DEB ones available very soon. All distributions are considered in Beta and, as always, we depend on our amazing community for feedback on improvements.\n\n-   Our stable distributions are at [netdata/netdata @ packagecloud.io](https://packagecloud.io/netdata/netdata)\n-   The nightly builds are at [netdata/netdata-edge @ packagecloud.io](https://packagecloud.io/netdata/netdata-edge)\n\n**Netdata now supports TLS encryption!** You can secure the communication to the [web server](https://docs.netdata.cloud/web/server/#enabling-tls-support), the [streaming connections from slaves to the master](https://docs.netdata.cloud/streaming/#securing-the-communication) and the connection to an [openTSDB backend](https://docs.netdata.cloud/backends/opentsdb/#https). \n\n**This version also brings two long-awaited features to Netdata\u2019s health monitoring:**\n\n-   The [health management API](https://docs.netdata.cloud/web/api/health/#health-management-api) introduced in v1.12 allowed you to easily disable alarms and/or notifications while Netdata was running. However, those changes were not persisted across Netdata restarts. Since part of routine maintenance activities may involve completely restarting a monitoring node, Netdata now saves these configurations to disk, every time you issue a command to change the silencer settings. The new [LIST command](https://docs.netdata.cloud/web/api/health/#list-silencers) of the API allows you to view at any time which alarms are currently disabled or silenced.\n-   A way for Netdata to [repeatedly send alarm notifications](https://docs.netdata.cloud/health/#alarm-line-repeat) for some, or all active alarms, at a frequency of your choosing. As a result, you will no longer have to worry about missing a notification, forgetting about a raised alarm. The default is still to only send a single notification, so that existing users are not surprised by a different behavior.  \n\nAs always, we\u2019ve introduced new collectors, 5 of them this time:\n\n-   Of special interest to people with Windows servers in their infrastructure is the [WMI collector](https://docs.netdata.cloud/collectors/go.d.plugin/modules/wmi/), though we are fully aware that we need to continue our efforts to do a proper port to Windows. \n-   The new `perf` plugin collects system-wide CPU performance statistics from Performance Monitoring Units (PMU) using the `perf_event_open()` system call. You can read a wonderful article on why this is useful [here](http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html).\n-   The other three are collectors to monitor [Dnsmasq DHCP leases](https://docs.netdata.cloud/collectors/go.d.plugin/modules/dnsmasq_dhcp/), [Riak KV servers](https://docs.netdata.cloud/collectors/python.d.plugin/riakkv/) and [Pihole instances](https://docs.netdata.cloud/collectors/go.d.plugin/modules/pihole/). \n\nFinally, the DB Engine introduced in v1.15.0 now uses much less memory and is more robust than before. \n\n---\n\n`May 21st, 2019` - **[Netdata v1.15.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease v1.15.0 contains 11 bug fixes and 30 improvements.\n\nWe are very happy and proud to be able to include two major improvements in this release: The aggregated node view and the [new database engine](https://docs.netdata.cloud/database/engine/). \n\n_Aggregated node view_\n\nThe No. 1 request from our community has been a better way to view and manage their Netdata installations, via an aggregated view. The node menu with the simple list of hosts on the agent UI just didn't do it for people with hundreds, or thousands of instances. This release introduces the node view, which uses the power of [Netdata Cloud](https://blog.netdata.cloud/posts/netdata-cloud-announcement/) to deliver powerful views of a Netdata-based monitoring infrastructure. You can read more about Netdata Cloud and the future of Netdata [here](https://blog.netdata.cloud/posts/netdata-cloud-announcement/).\n\n_New database engine_\n\nHistorically, Netdata has required a lot of memory for long-term metrics storage. To mitigate this we've been building a new DB engine for several months and will continue improving until it can become the default `memory mode` for new Netdata installations. The version included in release v1.15.0 already permits longer-term storage of compressed data and we'll continue reducing the required memory in following releases.\n\n_Other major additions_\n\nWe have added support for the [AWS Kinesis backend](https://docs.netdata.cloud/backends/aws_kinesis/) and new collectors for [OpenVPN](https://docs.netdata.cloud/collectors/go.d.plugin/modules/openvpn/), the [Tengine web server](https://docs.netdata.cloud/collectors/go.d.plugin/modules/tengine/), [ScaleIO (VxFlex OS)](https://docs.netdata.cloud/collectors/go.d.plugin/modules/scaleio/), [ioping-like latency metrics](https://docs.netdata.cloud/collectors/ioping.plugin/) and [Energi Core node instances](https://docs.netdata.cloud/collectors/python.d.plugin/energid/).\n\nWe now have a new, [\"text-only\" chart type](https://github.com/netdata/netdata/issues/5578), [cpu limits for v2 cgroups](https://github.com/netdata/netdata/issues/5850), [docker swarm metrics](https://docs.netdata.cloud/collectors/go.d.plugin/modules/docker_engine/) and improved [documentation](https://docs.netdata.cloud/).\n\nWe continued improving the [Kubernetes helmchart](https://github.com/netdata/helmchart) with liveness probes for slaves, persistence options, a fix for a `Cannot allocate memory` issue and easy configuration for the kubelet, kube-proxy and coredns collectors. \n\nFinally, we built a process to quickly replace any problematic nightly builds and added more automated CI tests to prevent such builds from being published in the first place.\n\n---\n\n`Apr 26th, 2019` - **[Netdata v1.14.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease 1.14 contains 14 bug fixes and 24 improvements.\n\nThe release introduces major additions to Kubernetes monitoring, with tens of new charts for [Kubelet](https://docs.netdata.cloud/collectors/go.d.plugin/modules/k8s_kubelet/), [kube-proxy](https://docs.netdata.cloud/collectors/go.d.plugin/modules/k8s_kubeproxy/) and [coredns](https://github.com/netdata/go.d.plugin/tree/master/modules/coredns) metrics, as well as significant improvements to the Netdata [helm chart](https://github.com/netdata/helmchart/). \n\nTwo new collectors were added, to monitor [Docker hub](https://docs.netdata.cloud/collectors/go.d.plugin/modules/dockerhub/) and [Docker engine](https://docs.netdata.cloud/collectors/go.d.plugin/modules/docker_engine/) metrics. \n\nFinally, v1.14  adds support for [version 2 cgroups](https://github.com/netdata/netdata/pull/5407), [OpenLDAP over TLS](https://github.com/netdata/netdata/pull/5859), [NVIDIA SMI free and per process memory](https://github.com/netdata/netdata/pull/5796/files) and [configurable syslog facilities](https://github.com/netdata/netdata/pull/5792). \n\n---\n\n`Mar 14th, 2019` - **[Netdata v1.13.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease 1.13.0 contains 14 bug fixes and 8 improvements.\n\nNetdata has taken the first step into the world of Kubernetes, with a beta version of a [Helm chart](https://github.com/netdata/helmchart) for deployment to a k8s cluster and [proper naming](https://github.com/netdata/netdata/pull/5576) of the cgroup containers. We have [big plans](https://github.com/netdata/netdata/issues/5392) for Kubernetes, so stay tuned!\n\nA [major refactoring of the python.d plugin](https://github.com/netdata/netdata/pull/5552) has resulted in a dramatic decrease of the required memory, making Netdata even more resource efficient.\n\nWe also added charts for IPC shared memory segments and total memory used.\n\n---\n\n`Feb 28th, 2019` - **[Netdata v1.12.2 released!](https://github.com/netdata/netdata/releases)**\n\nPatch release 1.12.2 contains 7 bug fixes and 4 improvements.\n\nThe main motivation behind a new patch release is the introduction of a **stable release channel**.\nA \"stable\" installation and update channel was always on our roadmap, but it became a necessity when we realized that our users in China could not use the nightly releases published on Google Cloud. The \"stable\" channel is based on our official GitHub releases and uses assets hosted on GitHub.\n\nWe are also introducing a new **Oracle DB collector** module, implemented in Python.\n\n---\n\n`Feb 21st, 2019` - **[Netdata v1.12.1 released!](https://github.com/netdata/netdata/releases)**\n\nPatch release 1.12.1 contains 22 bug fixes and 8 improvements.\n\n---\n\n`Feb 14th, 2019` - **[Netdata v1.12.0 released!](https://github.com/netdata/netdata/releases)**\n\nRelease 1.12 is made out of 211 pull requests and 22 bug fixes.\nThe key improvements are:\n\n-   Introducing `netdata.cloud`, the free Netdata service for all Netdata users\n-   High performance plugins with go.d.plugin (data collection orchestrator written in Go)\n-   7 new data collectors and 11 rewrites of existing data collectors for improved performance\n-   A new management API for all Netdata servers\n-   Bind different functions of the Netdata APIs to different ports\n-   Improved installation and updates\n\n---\n\n`Nov 22nd, 2018` - **[Netdata v1.11.1 released!](https://github.com/netdata/netdata/releases)**\n\n-   Improved internal database to support values above 64bit.\n-   New data collection plugins: [`openldap`](collectors/python.d.plugin/openldap/), [`tor`](collectors/python.d.plugin/tor/), [`nvidia_smi`](collectors/python.d.plugin/nvidia_smi/).\n-   Improved data collection plugins: Netdata now supports monitoring network interface aliases, [`smartd_log`](collectors/python.d.plugin/smartd_log/), [`cpufreq`](collectors/proc.plugin/README.md#cpu-frequency), [`sensors`](collectors/python.d.plugin/sensors/).\n-   Health monitoring improvements: network interface congestion alarm restored, [`alerta.io`](health/notifications/alerta/), `conntrack_max`.\n-   `my-netdata`menu has been refactored.\n-   Packaging: `openrc` service definition got a few improvements.\n\n---\n\n`Sep 18, 2018` - **Netdata has its own organization**\n\nNetdata used to be a [firehol.org](https://firehol.org) project, accessible as `firehol/netdata`.\n\nNetdata now has its own github organization `netdata`, so all github URLs are now `netdata/netdata`. The old github URLs, repo clones, forks, etc redirect automatically to the new repo.\n\n## How it works\n\nNetdata is a highly efficient, highly modular, metrics management engine. Its lockless design makes it ideal for concurrent operations on the metrics.\n\n![image](https://user-images.githubusercontent.com/2662304/48323827-b4c17580-e636-11e8-842c-0ee72fcb4115.png)\n\nThis is how it works:\n\n|Function|Description|Documentation|\n|:------:|:----------|:-----------:|\n|**Collect**|Multiple independent data collection workers are collecting metrics from their sources using the optimal protocol for each application and push the metrics to the database. Each data collection worker has lockless write access to the metrics it collects.|[`collectors`](collectors/#data-collection-plugins)|\n|**Store**|Metrics are stored in RAM in a round robin database (ring buffer), using a custom made floating point number for minimal footprint.|[`database`](database/#database)|\n|**Check**|A lockless independent watchdog is evaluating **health checks** on the collected metrics, triggers alarms, maintains a health transaction log and dispatches alarm notifications.|[`health`](health/#health-monitoring)|\n|**Stream**|An lockless independent worker is streaming metrics, in full detail and in real-time, to remote Netdata servers, as soon as they are collected.|[`streaming`](streaming/#streaming-and-replication)|\n|**Archive**|A lockless independent worker is down-sampling the metrics and pushes them to **backend** time-series databases.|[`backends`](backends/)|\n|**Query**|Multiple independent workers are attached to the [internal web server](web/server/#web-server), servicing API requests, including [data queries](web/api/queries/#database-queries).|[`web/api`](web/api/#api)|\n\nThe result is a highly efficient, low latency system, supporting multiple readers and one writer on each metric.\n\n## Infographic\n\nThis is a high level overview of Netdata feature set and architecture.\nClick it to to interact with it (it has direct links to documentation).\n\n[![image](https://user-images.githubusercontent.com/43294513/60951037-8ba5d180-a2f8-11e9-906e-e27356f168bc.png)](https://my-netdata.io/infographic.html)\n\n## Features\n\n![finger-video](https://user-images.githubusercontent.com/2662304/48346998-96cf3180-e685-11e8-9f4e-059d23aa3aa5.gif)\n\nThis is what you should expect from Netdata:\n\n### General\n\n-   **1s granularity** - the highest possible resolution for all metrics.\n-   **Unlimited metrics** - collects all the available metrics, the more the better.\n-   **1% CPU utilization of a single core** - it is super fast, unbelievably optimized.\n-   **A few MB of RAM** - by default it uses 25MB RAM. [You size it](database).\n-   **Zero disk I/O** - while it runs, it does not load or save anything (except `error` and `access` logs).\n-   **Zero configuration** - auto-detects everything, it can collect up to 10000 metrics per server out of the box.\n-   **Zero maintenance** - You just run it, it does the rest.\n-   **Zero dependencies** - it is even its own web server, for its static web files and its web API (though its plugins may require additional libraries, depending on the applications monitored).\n-   **Scales to infinity** - you can install it on all your servers, containers, VMs and IoTs. Metrics are not centralized by default, so there is no limit.\n-   **Several operating modes** - Autonomous host monitoring (the default), headless data collector, forwarding proxy, store and forward proxy, central multi-host monitoring, in all possible configurations. Each node may have different metrics retention policy and run with or without health monitoring.\n\n### Health Monitoring & Alarms\n\n-   **Sophisticated alerting** - comes with hundreds of alarms, **out of the box**! Supports dynamic thresholds, hysteresis, alarm templates, multiple role-based notification methods.\n-   **Notifications**: [alerta.io](health/notifications/alerta/), [amazon sns](health/notifications/awssns/), [discordapp.com](health/notifications/discord/), [email](health/notifications/email/), [flock.com](health/notifications/flock/), [hangouts](health/notifications/hangouts/), [irc](health/notifications/irc/), [kavenegar.com](health/notifications/kavenegar/), [messagebird.com](health/notifications/messagebird/), [pagerduty.com](health/notifications/pagerduty/), [prowl](health/notifications/prowl/), [pushbullet.com](health/notifications/pushbullet/), [pushover.net](health/notifications/pushover/), [rocket.chat](health/notifications/rocketchat/), [slack.com](health/notifications/slack/), [smstools3](health/notifications/smstools3/), [syslog](health/notifications/syslog/), [telegram.org](health/notifications/telegram/), [twilio.com](health/notifications/twilio/), [web](health/notifications/web/) and [custom notifications](health/notifications/custom/).\n\n### Integrations\n\n-   **time-series dbs** - can archive its metrics to **Graphite**, **OpenTSDB**, **Prometheus**, **AWS Kinesis**, **MongoDB**, **JSON document DBs**, in the same or lower resolution (lower: to prevent it from congesting these servers due to the amount of data collected). Netdata also supports **Prometheus remote write API** which allows storing metrics to **Elasticsearch**, **Gnocchi**, **InfluxDB**, **Kafka**, **PostgreSQL/TimescaleDB**, **Splunk**, **VictoriaMetrics**, and a lot of other [storage providers](https://prometheus.io/docs/operating/integrations/#remote-endpoints-and-storage).\n\n## Visualization\n\n-   **Stunning interactive dashboards** - mouse, touchpad and touch-screen friendly in 2 themes: `slate` (dark) and `white`.\n-   **Amazingly fast visualization** - responds to all queries in less than 1 ms per metric, even on low-end hardware.\n-   **Visual anomaly detection** - the dashboards are optimized for detecting anomalies visually.\n-   **Embeddable** - its charts can be embedded on your web pages, wikis and blogs. You can even use [Atlassian's Confluence as a monitoring dashboard](web/gui/confluence/).\n-   **Customizable** - custom dashboards can be built using simple HTML (no javascript necessary).\n\n### Positive and negative values\n\nTo improve clarity on charts, Netdata dashboards present **positive** values for metrics representing `read`, `input`, `inbound`, `received` and **negative** values for metrics representing `write`, `output`, `outbound`, `sent`.\n\n![positive-and-negative-values](https://user-images.githubusercontent.com/2662304/48309090-7c5c6180-e57a-11e8-8e03-3a7538c14223.gif)\n\n_Netdata charts showing the bandwidth and packets of a network interface. `received` is positive and `sent` is negative._\n\n### Autoscaled y-axis\n\nNetdata charts automatically zoom vertically, to visualize the variation of each metric within the visible time-frame.\n\n![non-zero-based](https://user-images.githubusercontent.com/2662304/48309139-3d2f1000-e57c-11e8-9a44-b91758134b00.gif)\n\n_A zero based `stacked` chart, automatically switches to an auto-scaled `area` chart when a single dimension is selected._\n\n### Charts are synchronized\n\nCharts on Netdata dashboards are synchronized to each other. There is no master chart. Any chart can be panned or zoomed at any time, and all other charts will follow.\n\n![charts-are-synchronized](https://user-images.githubusercontent.com/2662304/48309003-b4fb3b80-e578-11e8-86f6-f505c7059c15.gif)\n\n_Charts are panned by dragging them with the mouse. Charts can be zoomed in/out with`SHIFT` + `mouse wheel` while the mouse pointer is over a chart._\n\n> The visible time-frame (pan and zoom) is propagated from Netdata server to Netdata server, when navigating via the [node menu](registry#registry).\n\n### Highlighted time-frame\n\nTo improve visual anomaly detection across charts, the user can highlight a time-frame (by pressing `ALT` + `mouse selection`) on all charts.\n\n![highlighted-timeframe](https://user-images.githubusercontent.com/2662304/48311876-f9093300-e5ae-11e8-9c74-e3e291741990.gif)\n\n_A highlighted time-frame can be given by pressing `ALT` + `mouse selection` on any chart. Netdata will highlight the same range on all charts._\n\n> Highlighted ranges are propagated from Netdata server to Netdata server, when navigating via the [node menu](registry#registry).\n\n## What does it monitor\n\nNetdata data collection is **extensible** - you can monitor anything you can get a metric for.\nIts [Plugin API](collectors/plugins.d/) supports all programing languages (anything can be a Netdata plugin, BASH, python, perl, node.js, java, Go, ruby, etc).\n\n-   For better performance, most system related plugins (cpu, memory, disks, filesystems, networking, etc) have been written in `C`.\n-   For faster development and easier contributions, most application related plugins (databases, web servers, etc) have been written in `python`.\n\n#### APM (Application Performance Monitoring)\n\n-   **[statsd](collectors/statsd.plugin/)** - Netdata is a fully featured statsd server.\n-   **[Go expvar](collectors/python.d.plugin/go_expvar/)** - collects metrics exposed by applications written in the Go programming language using the expvar package.\n-   **[Spring Boot](collectors/python.d.plugin/springboot/)** - monitors running Java Spring Boot applications that expose their metrics with the use of the Spring Boot Actuator included in Spring Boot library.\n-   **[uWSGI](collectors/python.d.plugin/uwsgi/)** - collects performance metrics from uWSGI applications.\n\n#### System Resources\n\n-   **[CPU Utilization](collectors/proc.plugin/)** - total and per core CPU usage.\n-   **[Interrupts](collectors/proc.plugin/)** - total and per core CPU interrupts.\n-   **[SoftIRQs](collectors/proc.plugin/)** - total and per core SoftIRQs.\n-   **[SoftNet](collectors/proc.plugin/)** - total and per core SoftIRQs related to network activity.\n-   **[CPU Throttling](collectors/proc.plugin/)** - collects per core CPU throttling.\n-   **[CPU Frequency](collectors/proc.plugin/)** - collects the current CPU frequency.\n-   **[CPU Idle](collectors/proc.plugin/)** - collects the time spent per processor state.\n-   **[IdleJitter](collectors/idlejitter.plugin/)** - measures CPU latency.\n-   **[Entropy](collectors/proc.plugin/)** - random numbers pool, using in cryptography.\n-   **[Interprocess Communication - IPC](collectors/proc.plugin/)** - such as semaphores and semaphores arrays.\n\n#### Memory\n\n-   **[ram](collectors/proc.plugin/)** - collects info about RAM usage.\n-   **[swap](collectors/proc.plugin/)** - collects info about swap memory usage.\n-   **[available memory](collectors/proc.plugin/)** - collects the amount of RAM available for userspace processes.\n-   **[committed memory](collectors/proc.plugin/)** - collects the amount of RAM committed to userspace processes.\n-   **[Page Faults](collectors/proc.plugin/)** - collects the system page faults (major and minor).\n-   **[writeback memory](collectors/proc.plugin/)** - collects the system dirty memory and writeback activity.\n-   **[huge pages](collectors/proc.plugin/)** - collects the amount of RAM used for huge pages.\n-   **[KSM](collectors/proc.plugin/)** - collects info about Kernel Same Merging (memory dedupper).\n-   **[Numa](collectors/proc.plugin/)** - collects Numa info on systems that support it.\n-   **[slab](collectors/proc.plugin/)** - collects info about the Linux kernel memory usage.\n\n#### Disks\n\n-   **[block devices](collectors/proc.plugin/)** - per disk: I/O, operations, backlog, utilization, space, etc.\n-   **[BCACHE](collectors/proc.plugin/)** - detailed performance of SSD caching devices.\n-   **[DiskSpace](collectors/proc.plugin/)** - monitors disk space usage.\n-   **[mdstat](collectors/proc.plugin/)** - software RAID.\n-   **[hddtemp](collectors/python.d.plugin/hddtemp/)** - disk temperatures.\n-   **[smartd](collectors/python.d.plugin/smartd_log/)** - disk S.M.A.R.T. values.\n-   **[device mapper](collectors/proc.plugin/)** - naming disks.\n-   **[Veritas Volume Manager](collectors/proc.plugin/)** - naming disks.\n-   **[megacli](collectors/python.d.plugin/megacli/)** - adapter, physical drives and battery stats.\n-   **[adaptec_raid](collectors/python.d.plugin/adaptec_raid/)** -  logical and physical devices health metrics.\n-   **[ioping](collectors/ioping.plugin/)** - to measure disk read/write latency.\n\n#### Filesystems\n\n-   **[BTRFS](collectors/proc.plugin/)** - detailed disk space allocation and usage.\n-   **[Ceph](collectors/python.d.plugin/ceph/)** - OSD usage, Pool usage, number of objects, etc.\n-   **[NFS file servers and clients](collectors/proc.plugin/)** - NFS v2, v3, v4: I/O, cache, read ahead, RPC calls\n-   **[Samba](collectors/python.d.plugin/samba/)** - performance metrics of Samba SMB2 file sharing.\n-   **[ZFS](collectors/proc.plugin/)** - detailed performance and resource usage.\n\n#### Networking\n\n-   **[Network Stack](collectors/proc.plugin/)** - everything about the networking stack (both IPv4 and IPv6 for all protocols: TCP, UDP, SCTP, UDPLite, ICMP, Multicast, Broadcast, etc), and all network interfaces (per interface: bandwidth, packets, errors, drops).\n-   **[Netfilter](collectors/proc.plugin/)** - everything about the netfilter connection tracker.\n-   **[SynProxy](collectors/proc.plugin/)** - collects performance data about the linux SYNPROXY (DDoS).\n-   **[NFacct](collectors/nfacct.plugin/)** - collects accounting data from iptables.\n-   **[Network QoS](collectors/tc.plugin/)** - the only tool that visualizes network `tc` classes in real-time.\n-   **[FPing](collectors/fping.plugin/)** - to measure latency and packet loss between any number of hosts.\n-   **[ISC dhcpd](collectors/python.d.plugin/isc_dhcpd/)** - pools utilization, leases, etc.\n-   **[AP](collectors/charts.d.plugin/ap/)** - collects Linux access point performance data (`hostapd`).\n-   **[SNMP](collectors/node.d.plugin/snmp/)** - SNMP devices can be monitored too (although you will need to configure these).\n-   **[port_check](collectors/python.d.plugin/portcheck/)** - checks TCP ports for availability and response time.\n\n#### Virtual Private Networks\n\n-   **[OpenVPN](collectors/python.d.plugin/ovpn_status_log/)** - collects status per tunnel.\n-   **[LibreSwan](collectors/charts.d.plugin/libreswan/)** - collects metrics per IPSEC tunnel.\n-   **[Tor](collectors/python.d.plugin/tor/)** - collects Tor traffic statistics.\n\n#### Processes\n\n-   **[System Processes](collectors/proc.plugin/)** - running, blocked, forks, active.\n-   **[Applications](collectors/apps.plugin/)** - by grouping the process tree and reporting CPU, memory, disk reads, disk writes, swap, threads, pipes, sockets - per process group.\n-   **[systemd](collectors/cgroups.plugin/)** - monitors systemd services using CGROUPS.\n\n#### Users\n\n-   **[Users and User Groups resource usage](collectors/apps.plugin/)** - by summarizing the process tree per user and group, reporting: CPU, memory, disk reads, disk writes, swap, threads, pipes, sockets.\n-   **[logind](collectors/python.d.plugin/logind/)** - collects sessions, users and seats connected.\n\n#### Containers and VMs\n\n-   **[Containers](collectors/cgroups.plugin/)** - collects resource usage for all kinds of containers, using CGROUPS (systemd-nspawn, lxc, lxd, docker, kubernetes, etc).\n-   **[libvirt VMs](collectors/cgroups.plugin/)** - collects resource usage for all kinds of VMs, using CGROUPS.\n-   **[dockerd](collectors/python.d.plugin/dockerd/)** - collects docker health metrics.\n\n#### Web Servers\n\n-   **[Apache and lighttpd](collectors/python.d.plugin/apache/)** - `mod-status` (v2.2, v2.4) and cache log statistics, for multiple servers.\n-   **[IPFS](collectors/python.d.plugin/ipfs/)** - bandwidth, peers.\n-   **[LiteSpeed](collectors/python.d.plugin/litespeed/)** - reads the litespeed rtreport files to collect metrics.\n-   **[Nginx](collectors/python.d.plugin/nginx/)** - `stub-status`, for multiple servers.\n-   **[Nginx+](collectors/python.d.plugin/nginx_plus/)** - connects to multiple nginx_plus servers (local or remote) to collect real-time performance metrics.\n-   **[PHP-FPM](collectors/python.d.plugin/phpfpm/)** - multiple instances, each reporting connections, requests, performance, etc.\n-   **[Tomcat](collectors/python.d.plugin/tomcat/)** - accesses, threads, free memory, volume, etc.\n-   **[web server `access.log` files](collectors/python.d.plugin/web_log/)** - extracting in real-time, web server and proxy performance metrics and applying several health checks, etc.\n-   **[HTTP check](collectors/python.d.plugin/httpcheck/)** - checks one or more web servers for HTTP status code and returned content.\n\n#### Proxies, Balancers, Accelerators\n\n-   **[HAproxy](collectors/python.d.plugin/haproxy/)** - bandwidth, sessions, backends, etc.\n-   **[Squid](collectors/python.d.plugin/squid/)** - multiple servers, each showing: clients bandwidth and requests, servers bandwidth and requests.\n-   **[Traefik](collectors/python.d.plugin/traefik/)** - connects to multiple traefik instances (local or remote) to collect API metrics (response status code, response time, average response time and server uptime).\n-   **[Varnish](collectors/python.d.plugin/varnish/)** - threads, sessions, hits, objects, backends, etc.\n-   **[IPVS](collectors/proc.plugin/)** - collects metrics from the Linux IPVS load balancer.\n\n#### Database Servers\n\n-   **[CouchDB](collectors/python.d.plugin/couchdb/)** - reads/writes, request methods, status codes, tasks, replication, per-db, etc.\n-   **[MemCached](collectors/python.d.plugin/memcached/)** - multiple servers, each showing: bandwidth, connections, items, etc.\n-   **[MongoDB](collectors/python.d.plugin/mongodb/)** - operations, clients, transactions, cursors, connections, asserts, locks, etc.\n-   **[MySQL and mariadb](collectors/python.d.plugin/mysql/)** - multiple servers, each showing: bandwidth, queries/s, handlers, locks, issues, tmp operations, connections, binlog metrics, threads, innodb metrics, and more.\n-   **[PostgreSQL](collectors/python.d.plugin/postgres/)** - multiple servers, each showing: per database statistics (connections, tuples read - written - returned, transactions, locks), backend processes, indexes, tables, write ahead, background writer and more.\n-   **[Proxy SQL](collectors/python.d.plugin/proxysql/)** - collects Proxy SQL backend and frontend performance metrics.\n-   **[Redis](collectors/python.d.plugin/redis/)** - multiple servers, each showing: operations, hit rate, memory, keys, clients, slaves.\n-   **[RethinkDB](collectors/python.d.plugin/rethinkdbs/)** - connects to multiple rethinkdb servers (local or remote) to collect real-time metrics.\n\n#### Message Brokers\n\n-   **[beanstalkd](collectors/python.d.plugin/beanstalk/)** - global and per tube monitoring.\n-   **[RabbitMQ](collectors/python.d.plugin/rabbitmq/)** - performance and health metrics.\n\n#### Search and Indexing\n\n-   **[ElasticSearch](collectors/python.d.plugin/elasticsearch/)** - search and index performance, latency, timings, cluster statistics, threads statistics, etc.\n\n#### DNS Servers\n\n-   **[bind_rndc](collectors/python.d.plugin/bind_rndc/)** - parses `named.stats` dump file to collect real-time performance metrics. All versions of bind after 9.6 are supported.\n-   **[dnsdist](collectors/python.d.plugin/dnsdist/)** - performance and health metrics.\n-   **[ISC Bind (named)](collectors/node.d.plugin/named/)** - multiple servers, each showing: clients, requests, queries, updates, failures and several per view metrics. All versions of bind after 9.9.10 are supported.\n-   **[NSD](collectors/python.d.plugin/nsd/)** - queries, zones, protocols, query types, transfers, etc.\n-   **[PowerDNS](collectors/python.d.plugin/powerdns/)** - queries, answers, cache, latency, etc.\n-   **[unbound](collectors/python.d.plugin/unbound/)** - performance and resource usage metrics.\n-   **[dns_query_time](collectors/python.d.plugin/dns_query_time/)** - DNS query time statistics.\n\n#### Time Servers\n\n-   **[chrony](collectors/python.d.plugin/chrony/)** - uses the `chronyc` command to collect chrony statistics (Frequency, Last offset, RMS offset, Residual freq, Root delay, Root dispersion, Skew, System time).\n-   **[ntpd](collectors/python.d.plugin/ntpd/)** - connects to multiple ntpd servers (local or remote) to provide statistics of system variables and optional also peer variables.\n\n#### Mail Servers\n\n-   **[Dovecot](collectors/python.d.plugin/dovecot/)** - POP3/IMAP servers.\n-   **[Exim](collectors/python.d.plugin/exim/)** - message queue (emails queued).\n-   **[Postfix](collectors/python.d.plugin/postfix/)** - message queue (entries, size).\n\n#### Hardware Sensors\n\n-   **[IPMI](collectors/freeipmi.plugin/)** - enterprise hardware sensors and events.\n-   **[lm-sensors](collectors/python.d.plugin/sensors/)** - temperature, voltage, fans, power, humidity, etc.\n-   **[Nvidia](collectors/python.d.plugin/nvidia_smi/)** - collects information for Nvidia GPUs.\n-   **[RPi](collectors/charts.d.plugin/sensors/)** - Raspberry Pi temperature sensors.\n-   **[w1sensor](collectors/python.d.plugin/w1sensor/)** - collects data from connected 1-Wire sensors.\n\n#### UPSes\n\n-   **[apcupsd](collectors/charts.d.plugin/apcupsd/)** - load, charge, battery voltage, temperature, utility metrics, output metrics.\n-   **[NUT](collectors/charts.d.plugin/nut/)** - load, charge, battery voltage, temperature, utility metrics, output metrics.\n-   **[Linux Power Supply](collectors/proc.plugin/)** - collects metrics reported by power supply drivers on Linux.\n\n#### Social Sharing Servers\n\n-   **[RetroShare](collectors/python.d.plugin/retroshare/)** - connects to multiple retroshare servers (local or remote) to collect real-time performance metrics.\n\n#### Security\n\n-   **[Fail2Ban](collectors/python.d.plugin/fail2ban/)** - monitors the fail2ban log file to check all bans for all active jails.\n\n#### Authentication, Authorization, Accounting (AAA, RADIUS, LDAP) Servers\n\n-   **[FreeRadius](collectors/python.d.plugin/freeradius/)** - uses the `radclient` command to provide freeradius statistics (authentication, accounting, proxy-authentication, proxy-accounting).\n\n#### Telephony Servers\n\n-   **[opensips](collectors/charts.d.plugin/opensips/)** - connects to an opensips server (localhost only) to collect real-time performance metrics.\n\n#### Household Appliances\n\n-   **[SMA webbox](collectors/node.d.plugin/sma_webbox/)** - connects to multiple remote SMA webboxes to collect real-time performance metrics of the photovoltaic (solar) power generation.\n-   **[Fronius](collectors/node.d.plugin/fronius/)** - connects to multiple remote Fronius Symo servers to collect real-time performance metrics of the photovoltaic (solar) power generation.\n-   **[StiebelEltron](collectors/node.d.plugin/stiebeleltron/)** - collects the temperatures and other metrics from your Stiebel Eltron heating system using their Internet Service Gateway (ISG web).\n\n#### Game Servers\n\n-   **[SpigotMC](collectors/python.d.plugin/spigotmc/)** - monitors Spigot Minecraft server ticks per second and number of online players using the Minecraft remote console.\n\n#### Distributed Computing\n\n-   **[BOINC](collectors/python.d.plugin/boinc/)** - monitors task states for local and remote BOINC client software using the remote GUI RPC interface. Also provides alarms for a handful of error conditions.\n\n#### Media Streaming Servers\n\n-   **[IceCast](collectors/python.d.plugin/icecast/)** - collects the number of listeners for active sources.\n\n### Monitoring Systems\n\n-   **[Monit](collectors/python.d.plugin/monit/)** - collects metrics about monit targets (filesystems, applications, networks).\n\n#### Provisioning Systems\n\n-   **[Puppet](collectors/python.d.plugin/puppet/)** - connects to multiple Puppet Server and Puppet DB instances (local or remote) to collect real-time status metrics.\n\nYou can easily extend Netdata, by writing plugins that collect data from any source, using any computer language.\n\n---\n\n## Documentation\n\nThe Netdata documentation is at <https://docs.netdata.cloud>. But you can also find it inside the repo, so by just navigating the repo on github you can find all the documentation.\n\nHere is a quick list:\n\n|Directory|Description|\n|:--------|:----------|\n|[`installer`](packaging/installer/)|Instructions to install Netdata on your systems.|\n|[`docker`](packaging/docker/)|Instructions to install Netdata using docker.|\n|[`daemon`](daemon/)|Information about the Netdata daemon and its configuration.|\n|[`collectors`](collectors/)|Information about data collection plugins.|\n|[`health`](health/)|How Netdata's health monitoring works, how to create your own alarms and how to configure alarm notification methods.|\n|[`streaming`](streaming/)|How to build hierarchies of Netdata servers, by streaming metrics between them.|\n|[`backends`](backends/)|Long term archiving of metrics to industry standard time-series databases, like `prometheus`, `graphite`, `opentsdb`.|\n|[`web/api`](web/api/)|Learn how to query the Netdata API and the queries it supports.|\n|[`web/api/badges`](web/api/badges/)|Learn how to generate badges (SVG images) from live data.|\n|[`web/gui/custom`](web/gui/custom/)|Learn how to create custom Netdata dashboards.|\n|[`web/gui/confluence`](web/gui/confluence/)|Learn how to create Netdata dashboards on Atlassian's Confluence.|\n\nYou can also check all the other directories. Most of them have plenty of documentation.\n\n## Community\n\nWe welcome [contributions](CONTRIBUTING.md). So, feel free to join the team.\n\nTo report bugs, or get help, use [GitHub Issues](https://github.com/netdata/netdata/issues).\n\nYou can also find Netdata on:\n\n-   [Facebook](https://www.facebook.com/linuxnetdata/)\n-   [Twitter](https://twitter.com/linuxnetdata)\n-   [OpenHub](https://www.openhub.net/p/netdata)\n-   [Repology](https://repology.org/metapackage/netdata/versions)\n-   [StackShare](https://stackshare.io/netdata)\n\n## License\n\nNetdata is [GPLv3+](LICENSE).\n\nNetdata re-distributes other open-source tools and libraries. Please check the [third party licenses](REDISTRIBUTED.md).\n\n## Is it any good?\n\nYes.\n\n_When people first hear about a new product, they frequently ask if it is any good. A Hacker News user [remarked](https://news.ycombinator.com/item?id=3067434):_\n\n> Note to self: Starting immediately, all raganwald projects will have a \u201cIs it any good?\u201d section in the readme, and the answer shall be \u201cyes.\".\n\nSo, we follow the tradition...\n\n## Is it awesome?\n\n[These people](https://github.com/netdata/netdata/stargazers) seem to like it.\n"}, {"repo": "cloud66-oss/habitus", "language": "Go", "readme_contents": "<img src=\"http://cdn2-cloud66-com.s3.amazonaws.com/images/oss-sponsorship.png\" width=150/>\n\n# Habitus\nHabitus adds workflows to Docker build. This means you can create a chain of builds to generate your final Docker image based on a workflow. This is particularly useful if your code is in compiled languages like Java or Go or if you need to use secrets like SSH keys during the build.\n\n- Help Pages: https://help.cloud66.com/habitus/\n- [Download Habitus](https://github.com/cloud66-oss/habitus/releases?utm_source=Githubdownload&utm_medium=GHDpage&utm_campaign=habitus)\n- Slack Channel: [Join Our Slack Community](https://communityinviter.com/apps/cloud66ers/cloud-66-community).\n- Articles: http://blog.cloud66.com/tag/habitus/\n\n![Logo habitus](https://lh5.googleusercontent.com/_PbaTkJhpA9zVRW_pj3Mt1ntpAZ6IUjTn0yDkVCsUZnJnE3jAxr5ciGF5SqdtR45--EHlIdYyr3dj7DcjRVfLBSS6BQPaGrwzzvMqqEcDJc47sDY4d2s9QQlJi3ZXUYPkODWOF2a)\nA build flow tool for Docker \n\nHabitus is a standalone build flow tool for Docker. It\u2019s a command line tool that builds Docker images based on their Dockerfile and a build.yml. \n\n\n\n### Key features:\n__________________________________________________________________\n- Use **build.yml** to build the image\n- Supports **multi-tenancy** of builds by using `uid` parameters\n- Allows to run **arbitrary commands** inside of the build container\n- Allows **dovetailing (sequencing)** of the images from different steps\n- After build, Habitus will run **Cleanup command**. This will result in 'squashing' the image, therefore removing any traces of unwanted layers\n- Allows you to define and manage **secrets configuration** for your build\n- Allows you specify any **Artifacts** - they'll be copied from the built image onto the work directory, so they'll be available for next steps.\n- Support for non TLS connections\n\n### Why Habitus? (Problem \u2192 solution)\n______________________________________________________________________\n\n\n- If you need to pull code from a private git repository:                           \n  Your private SSH key will be needed in the image during the build process. By using Habitus, the web server only exposes your secrets to the internal Docker network of your machine, and only for the duration of the build. No traces of your secrets are left behind in the image.\n\n\n- If you want to add compile-time libraries to your image, but don\u2019t want them in the run-time:                      \n   Habitus will solve it by using different build steps in building your artifact and only place that artifact in smallest possible image.\n\n\n- If you want to combine multiple Dockerfiles into complex build and  deployments workflows:                             \n  Take the example of an app written in Go: it lives in a container and serves content to visitors based on the latest trending hashtags on Twitter. To get this app into a container, you need to build it with Go compile time libraries. This makes the image large, increasing the attack surface of your service. Habitus solves this issue by compiling your Go app in one container with all compile-time dependencies, and then moves the compiled build artifacts to another smaller image with only the minimum packages required to run it.\n\n\n- If you need to run images in production:                                \n  Habitus helps you build a small, secure, performant, stable and immutable image in production. This will allow you to run non-leaky containers and healthy applications in production.\n\n### Documentations:\n_________________________________________________________________________________________________________\n\nComprehensive documentation is available on the Habitus website:\n\nhttps://help.cloud66.com/habitus/\n\n\n\n### Quick Start: \n________________________________________________________________________________________________________\n\nJust run the install script on macOS or Linux!\n\n`curl -sSL https://raw.githubusercontent.com/cloud66/habitus/master/habitus_install.sh | bash`\n\nOr [download](https://github.com/cloud66-oss/habitus/releases?utm_source=Githubdownload&utm_medium=GHDpage&utm_campaign=habitus) Habitus straight from this repo. Habitus can run on Linux, Windows and macOS. Copy the Habitus application into `/usr/local/bin/habitus` and check if it has the executable flags, if not run `chmod a+x /usr/local/bin/habitus`\n\nBuild files can be made up of multiple steps. Each step is independent of the other ones and downstream steps can use upstream ones as source (in `FROM` command). When habitus is installed, create a simple **build.yml** with just one build step and run Habitus. \n\n    build:\n      version: 2016-03-14 # version of the build schema.\n      steps:\n        builder:\n          name: builder\n          dockerfile: Dockerfile\n\nRun habitus\n\n    # habitus\n\nAnd you\u2019re ready to start using Habitus.  Comprehensive documentation about build.yml is available on the Habitus website: https://help.cloud66.com/habitus/\n\n### Developing Habitus:\n________________________________________________________________________________________________________\n\nIf you wish to work on the Habitus project itself. We provided a docker-compose.yml to spin up the development environment and link the source into the running container.\n\n\n    # docker-compose run habitus /bin/bash\n    # go build\n\nAfter the build, you can use Habitus to build itself using the following command in the running container:\n\n    # ./habitus\n\nYou can run tests by typing \n\n\n    # docker-compose run habitus /bin/bash\n    # go test    \n\nAnd you are ready to start your contribution to Habitus. \n\n### CHANGELOG\n\nCheck the changelog [here](https://github.com/cloud66-oss/habitus/blob/master/CHANGELOG.md)\n"}]